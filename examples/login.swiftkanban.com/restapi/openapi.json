{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "REST API documentation"
  },
  "servers" : [ {
    "url" : "/restapi"
  } ],
  "paths" : {
    "/account-operations/accounts" : {
      "get" : {
        "tags" : [ "AccountService" ],
        "summary" : "Fetches Account details",
        "description" : "Sample URL -  http://localhost:8080/restapi/account-operations/accounts",
        "operationId" : "getAccountDetails",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "accountDetails" : {
                          "id" : "1535610",
                          "name" : "Not Specified",
                          "description" : " ",
                          "itemType" : "AppAccount",
                          "accountType" : "Enterprise",
                          "contactPerson" : "1040349",
                          "currentState" : "Active",
                          "accountUrl" : "http://10.0.15.5:8280/",
                          "createdDate" : "2019-03-28T06:07:21Z",
                          "modifiedById" : "10000",
                          "modifiedDate" : "2020-06-29T15:21:53Z",
                          "contactAddressId" : "1547289",
                          "billingAddressId" : "1547289"
                        }
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getAccountDetails successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8180/restapi/account-operation/accounts"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activity-log/relations" : {
      "get" : {
        "tags" : [ "ActivityLogService" ],
        "summary" : "Fetches activity log of all the relation",
        "description" : "Sample URL -  http://localhost:8080/restapi/activity-log/relations",
        "operationId" : "getAllItemRelationLog",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fromDate",
          "in" : "query",
          "description" : "ISO date for relations created or deleted from this date.<br/>Example: 2015-01-01T08:34:23Z",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Invalid format: 'a2019-01-01T00:00:00Z'" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/activity-log/relations?fromDate=a2019-01-01T00:00:00Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "timeStamp" : "2019-04-01T05:47:36Z",
                        "deletedRelation" : [ {
                          "timeStamp" : "2019-04-18T05:47:36Z",
                          "fromCard" : {
                            "cardType" : "KanbanIssue",
                            "boardId" : "1551271",
                            "cardUniqueId" : "529023",
                            "cardStatus" : "Active"
                          },
                          "toCard" : {
                            "cardType" : "DCMG",
                            "boardId" : "1551272",
                            "cardUniqueId" : "1538874",
                            "cardStatus" : "Active"
                          },
                          "relation" : "Has"
                        }, {
                          "timeStamp" : "2019-04-18T05:47:36Z",
                          "fromCard" : {
                            "cardType" : "DCMG",
                            "boardId" : "1551272",
                            "cardUniqueId" : "1538824",
                            "cardStatus" : "Active"
                          },
                          "toCard" : {
                            "cardType" : "UserStory",
                            "boardId" : "1551272",
                            "cardUniqueId" : "1551624",
                            "cardStatus" : "Active"
                          },
                          "relation" : "kanbanDependency"
                        } ],
                        "addedRelation" : [ {
                          "timeStamp" : "2019-04-18T05:42:39Z",
                          "fromCard" : {
                            "cardType" : "KanbanIssue",
                            "boardId" : "1551271",
                            "cardUniqueId" : "529023",
                            "cardStatus" : "Active"
                          },
                          "toCard" : {
                            "cardType" : "DCMG",
                            "boardId" : "1551272",
                            "cardUniqueId" : "1538874",
                            "cardStatus" : "Active"
                          },
                          "relation" : "Has"
                        }, {
                          "timeStamp" : "2019-04-18T05:47:59Z",
                          "fromCard" : {
                            "cardType" : "KanbanIssue",
                            "boardId" : "1551271",
                            "cardUniqueId" : "529024",
                            "cardStatus" : "Blocked"
                          },
                          "toCard" : {
                            "cardType" : "KanbanDefect",
                            "boardId" : "1551271",
                            "cardUniqueId" : "540141",
                            "cardStatus" : "Active"
                          },
                          "relation" : "Parent-child"
                        }, {
                          "timeStamp" : "2019-04-18T05:47:59Z",
                          "fromCard" : {
                            "cardType" : "KanbanIssue",
                            "boardId" : "1551271",
                            "cardUniqueId" : "540090",
                            "cardStatus" : "Blocked"
                          },
                          "toCard" : {
                            "cardType" : "KanbanDefect",
                            "boardId" : "1551271",
                            "cardUniqueId" : "540092",
                            "cardStatus" : "Active"
                          },
                          "relation" : "kanbanDependency"
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getRelationLog successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/activity-log/relations)"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activity-log/boards/{boardId}/todos/{id}" : {
      "get" : {
        "tags" : [ "ActivityLogService" ],
        "summary" : "Fetches activity log of ToDo",
        "description" : "Sample URL -  http://localhost:8080/restapi/activity-log/boards/1551624/id/123456",
        "operationId" : "getTodoActivityLog",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique ID of the todo",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessedBy",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Error in validating input Parameters: " ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/activity-log/boards/15468862/todo/TODO1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "ActivityLog" : {
                          "Activity" : [ {
                            "timeStamp" : "2019-05-16T06:45:43Z",
                            "newValue" : "In-Progress",
                            "fieldName" : "Current State",
                            "action" : "Updated from Pending to In-Progress",
                            "modifiedBy" : "test@test.com",
                            "id" : "1751445",
                            "oldValue" : "Pending",
                            "todoId" : "516018"
                          }, {
                            "timeStamp" : "2019-05-16T06:44:53Z",
                            "newValue" : null,
                            "action" : "Created",
                            "modifiedBy" : "test@test.com",
                            "id" : "1751443",
                            "oldValue" : null,
                            "todoId" : "516018"
                          } ]
                        }
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getTodoActivityLog successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/activity-log/boards/1546882/todo/TODO1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activity-log/boards/{boardId}/cards" : {
      "get" : {
        "tags" : [ "ActivityLogService" ],
        "summary" : "Fetches activity log of cards",
        "description" : "Sample URL -  http://localhost:8080/restapi/activity-log/boards/1551624/cards?id=KanbanDefect:DEF1&id=KanbanDefect:DEF2",
        "operationId" : "getCardListLog",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "DEF111",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Invalid cardUniqueId:DEF111 for given project" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "getActivityLog failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/activity-log/boards/1551624/cards?id=KanbanDefect:DEF111"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "activityLog" : {
                            "activity" : [ {
                              "timeStamp" : "2019-04-17T09:09:54Z",
                              "newValue" : "",
                              "cardType" : "KanbanDefect",
                              "action" : "Created",
                              "modifiedBy" : "testUser@test.com",
                              "cardUniqueId" : "540090",
                              "id" : "1750730",
                              "oldValue" : ""
                            }, {
                              "timeStamp" : "2019-04-17T09:09:54Z",
                              "newValue" : "Kanban board::Ready",
                              "cardType" : "KanbanDefect",
                              "action" : "Item moved from Backlog to Kanban board::Ready",
                              "modifiedBy" : "testUser@test.com",
                              "cardUniqueId" : "540090",
                              "id" : "1750731",
                              "oldValue" : "Backlog"
                            }, {
                              "newUserIds" : "testUser@test.com",
                              "timeStamp" : "2019-04-17T09:09:54Z",
                              "newValue" : "test User",
                              "fieldName" : "Current Owner",
                              "cardType" : "KanbanDefect",
                              "action" : "Updated from null to test User",
                              "oldUserIds" : "",
                              "modifiedBy" : "testUser@test.com",
                              "cardUniqueId" : "540090",
                              "id" : "1750732",
                              "oldValue" : ""
                            }, {
                              "timeStamp" : "2019-04-17T09:21:05Z",
                              "newValue" : "Critical",
                              "fieldName" : "Priority",
                              "cardType" : "KanbanDefect",
                              "action" : "Updated from Medium to Critical",
                              "modifiedBy" : "testUser@test.com",
                              "cardUniqueId" : "540090",
                              "id" : "1750799",
                              "oldValue" : "Medium"
                            }, {
                              "timeStamp" : "2019-04-17T09:21:05Z",
                              "newValue" : "None",
                              "fieldName" : "Defect Type",
                              "cardType" : "KanbanDefect",
                              "action" : "Updated from null to None",
                              "modifiedBy" : "testUser@test.com",
                              "cardUniqueId" : "540090",
                              "id" : "1750800",
                              "oldValue" : ""
                            }, {
                              "timeStamp" : "2019-04-17T09:21:05Z",
                              "newValue" : "None",
                              "fieldName" : "Severity",
                              "cardType" : "KanbanDefect",
                              "action" : "Updated from null to None",
                              "modifiedBy" : "testUser@test.com",
                              "cardUniqueId" : "540090",
                              "id" : "1750801",
                              "oldValue" : ""
                            }, {
                              "timeStamp" : "2019-04-17T09:21:05Z",
                              "newValue" : "None",
                              "fieldName" : "Root Cause",
                              "cardType" : "KanbanDefect",
                              "action" : "Updated from null to None",
                              "modifiedBy" : "testUser@test.com",
                              "cardUniqueId" : "540090",
                              "id" : "1750802",
                              "oldValue" : ""
                            } ]
                          },
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "DEF1",
                          "responseStatus" : "Successful"
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getActivityLog successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/activity-log/boards/1551624/cards?id=KanbanDefect:DEF1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/attachment-operations/boards/{boardId}/cards/{cardId}/attachments/{id}" : {
      "get" : {
        "tags" : [ "AttachmentService" ],
        "summary" : "Fetches attachment details along with content",
        "description" : "Sample URL - http://localhost:8080/restapi/attachment-operations/boards/1551574/cards/DCMG:DCMG1/attachments/1531532",
        "operationId" : "getAttachment",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cardId",
          "in" : "path",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique ID of the attachment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Invalid attachment Id : 123 for cardId : 12321 and boardId : 1551573" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/attachment-operations/boards/1551573/cards/ENHC:12321/attachments/123"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "attachment" : {
                          "fileName" : "Attachment.txt",
                          "attachmentSize" : "22b",
                          "createdDate" : "2019-04-16T06:00:18Z",
                          "createdBy" : "testUser@test.com",
                          "cardType" : "KanbanDefect",
                          "attachmentId" : "1531532",
                          "cardUniqueId" : "12321",
                          "attachmentContent" : "YXR0YWNobWVudCBzZXJ2Y2UgVGVzdA=="
                        }
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getAttachment successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/attachment-operations/boards/1551573/cards/ENHC:12321/attachments/1531532"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AttachmentService" ],
        "summary" : "Deletes attachment from the card",
        "description" : "Sample URL - http://localhost:8080/restapi/attachment-operations/boards/1551574/cards/DCMG:DCMG1/attachments/1531532",
        "operationId" : "deleteAttachment",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cardId",
          "in" : "path",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique ID of the attachment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Invalid attachment Id : '1531692'" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8180/restapi/attachment-operations/boards/1546784/cards/DCMG%3A1535737/attachments/1531692"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "deleteAttachmentResponse" : {
                          "projectId" : "1546784",
                          "cardType" : "DCMG",
                          "cardUniqueId" : "1535737",
                          "attachmentId" : "1531692",
                          "successMsg" : "Attachment Deleted Successfully."
                        }
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "deleteAttachment successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8180/restapi/attachment-operations/boards/1546784/cards/DCMG%3A1535737/attachments/1531692"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/attachment-operations/boards/{boardId}/cards/{cardId}/attachments" : {
      "get" : {
        "tags" : [ "AttachmentService" ],
        "summary" : "Gets all the attachments of the card",
        "description" : "Sample URL - http://localhost:8080/restapi/attachment-operations/boards/1551574/cards/DCMG:DCMG1/attachments",
        "operationId" : "getAttachments",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cardId",
          "in" : "path",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No workspace found for the project id : 123", "No card found for the Sequence Number : DEF1" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/attachment-operations/boards/123/cards/Defect:DEF1/attachments"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "attachment" : [ {
                          "fileName" : "Attachment1.txt",
                          "attachmentSize" : "23b",
                          "createdDate" : "2019-04-16T05:58:58Z",
                          "createdBy" : "testUser@test.com",
                          "cardType" : "Defect",
                          "attachmentId" : "1531531",
                          "cardUniqueId" : "540039"
                        }, {
                          "fileName" : "Attachment2.txt",
                          "attachmentSize" : "23b",
                          "createdDate" : "2019-04-16T05:58:57Z",
                          "createdBy" : "testUser@test.com",
                          "cardType" : "Defect",
                          "attachmentId" : "1531530",
                          "cardUniqueId" : "540039"
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getAttachments successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/attachment-operations/boards/1551573/cards/Defect:DEF1/attachments"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AttachmentService" ],
        "summary" : "Adds attachment to the card",
        "description" : "Sample URL - http://localhost:8080/restapi/attachment-operations/boards/1551574/cards/DCMG:DCMG1/attachments",
        "operationId" : "addAttachment",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cardId",
          "in" : "path",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Attachments to be added to the card. Note: First you need to convert the content of the attachment into byte array.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "attachment" : [ {
                    "attachmentAddedBy" : "testUser@test.com",
                    "content" : "VGhpcyBpcyBBdHRhY2htZW50IFRlc3Q=",
                    "fileNameWithExt" : "abc.txt"
                  }, {
                    "attachmentAddedBy" : "testUser2@test.com",
                    "content" : "VGhpcyBpcyBBdHRhY2htZW50IFRlc3Q=",
                    "fileNameWithExt" : "xyz.txt"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "attachmentDetails" : [ {
                          "attachment" : {
                            "createdBy" : "testUser@test.com",
                            "cardType" : "DCMG",
                            "cardUniqueId" : "1538772",
                            "fileNameWithExt" : ""
                          },
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Required field: fileNameWithExt is missing" ]
                        }, {
                          "attachment" : {
                            "createdBy" : "testUser2@test.com",
                            "cardType" : "DCMG",
                            "cardUniqueId" : "1538772",
                            "fileNameWithExt" : ""
                          },
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Required field: fileNameWithExt is missing", "Invalid userId: testUser2@test.com." ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "addAttachment failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/attachment-operations/boards/1551574/cards/DCMG:DCMG1/attachments"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "attachmentDetails" : [ {
                          "attachment" : {
                            "createdBy" : "testUser@test.com",
                            "cardType" : "DCMG",
                            "cardUniqueId" : "1538772",
                            "fileNameWithExt" : "abc.txt"
                          },
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "add attachment successful" ]
                        }, {
                          "attachment" : {
                            "createdBy" : "testUser2@test.com",
                            "cardType" : "DCMG",
                            "cardUniqueId" : "1538772",
                            "fileNameWithExt" : "xyz.txt"
                          },
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "add attachment successful" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "addAttachment successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/attachment-operations/boards/1551574/cards/DCMG:DCMG1/attachments"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "attachmentDetails" : [ {
                          "attachment" : {
                            "createdBy" : "testUser@test.com",
                            "cardType" : "DCMG",
                            "cardUniqueId" : "1538772",
                            "fileNameWithExt" : "abc.txt"
                          },
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "add attachment successful" ]
                        }, {
                          "attachment" : {
                            "createdBy" : "testUser2@test.com",
                            "cardType" : "DCMG",
                            "cardUniqueId" : "1538772",
                            "fileNameWithExt" : ""
                          },
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Required field: fileNameWithExt is missing" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "addAttachment partially successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/attachment-operations/boards/1551574/cards/DCMG:DCMG1/attachments"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AttachmentService" ],
        "summary" : "Deletes multiple attachment from the card",
        "description" : "Sample URL - http://localhost:8080/restapi/attachment-operations/boards/1551574/cards/DCMG:DCMG1/attachments?id=1234&id=5674",
        "operationId" : "deleteAttachments",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "cardId",
          "in" : "path",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "List of attachment Id's to be deleted",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "attachments" : [ {
                          "projectId" : 1546784,
                          "cardType" : "DCMG",
                          "cardUniqueId" : "DCMG:DCMG2",
                          "attachmentId" : 1531741,
                          "responseStatus" : "Failed",
                          "responseMsg" : "Invalid attachment Id : '1,531,741'"
                        }, {
                          "projectId" : 1546784,
                          "cardType" : "DCMG",
                          "cardUniqueId" : "DCMG:DCMG2",
                          "attachmentId" : 1531737,
                          "responseStatus" : "Failed",
                          "responseMsg" : "Invalid attachment Id : '1,531,737'"
                        }, {
                          "projectId" : 1546784,
                          "cardType" : "DCMG",
                          "cardUniqueId" : "DCMG:DCMG2",
                          "attachmentId" : 1531736,
                          "responseStatus" : "Failed",
                          "responseMsg" : "Invalid attachment Id : '1,531,736'"
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8180/restapi/attachment-operations/boards/1546784/cards/DCMG%3ADCMG2/attachments?id=1531741&id=1531737&id=1531736"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "attachments" : [ {
                          "projectId" : 1546784,
                          "cardType" : "DCMG",
                          "cardUniqueId" : "DCMG:DCMG2",
                          "attachmentId" : 1531742,
                          "responseStatus" : "Successful",
                          "successMsg" : "Attachment Deleted Successfully."
                        }, {
                          "projectId" : 1546784,
                          "cardType" : "DCMG",
                          "cardUniqueId" : "DCMG:DCMG2",
                          "attachmentId" : 1531743,
                          "responseStatus" : "Successful",
                          "successMsg" : "Attachment Deleted Successfully."
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "deleteAttachments successfully" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8180/restapi/attachment-operations/boards/1546784/cards/DCMG%3ADCMG2/attachments?id=1531742&id=1531743"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/attachment-operations/attachments/size-limit" : {
      "get" : {
        "tags" : [ "AttachmentService" ],
        "summary" : "Gets the size limit of an individual attachement.Note: The unit of sizeLimit in Response is MB",
        "description" : "Sample URL - http://localhost:8080/restapi/attachment-operations/attachments/size-limit",
        "operationId" : "getSizeLimit",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "Request has not been applied because it lacks valid authentication credentials.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Access denied due to invalid token." ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/attachment-operations/attachments/size-limit"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "sizeLimit" : 5
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getSizeLimit successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/attachment-operations/attachments/size-limit"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/relation-operations/boards/{boardId}/cards/{id}/relations/delete" : {
      "put" : {
        "tags" : [ "RelationService" ],
        "summary" : "Deletes relation between cards",
        "description" : "Sample URL -  http://localhost:8080/restapi/relation-operations/boards/1551679/cards/UserStory:UST1/relations/delete",
        "operationId" : "deleteRelation",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Set of cards in which relation need to delete",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : "{  \r\n   \"toCard\":[  \r\n      {  \r\n         \"relation\":\"Parent-child\",\r\n         \"cardType\":\"UserStory\",\r\n         \"cardUniqueId\":\"538256\",\r\n         \"boardId\":\"1551677\"\r\n      },\r\n      {  \r\n         \"relation\":\"Parent-child\",\r\n         \"cardType\":\"DCMG\",\r\n         \"cardUniqueId\":\"DCMG1\",\r\n         \"boardId\":\"1551678\"\r\n      }\r\n   ],\r\n   \"fromCard\":[  \r\n      {  \r\n         \"relation\":\"Has\",\r\n         \"cardType\":\"KanbanIssue\",\r\n         \"cardUniqueId\":\"iss2\",\r\n         \"boardId\":\"1551678\"\r\n      }\r\n      {  \r\n         \"relation\":\"kanbanDependency\",\r\n         \"cardType\":\"KanbanIssue\",\r\n         \"cardUniqueId\":\"iss2\",\r\n         \"boardId\":\"1551678\"\r\n      }\r\n   ]\r\n}"
              }
            }
          }
        },
        "responses" : {
          "422" : {
            "description" : "failure response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : "{\r\n\t\t\"Response\": {\r\n\t\t\t\"details\": {\r\n\t\t\t\t\"fromCard\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"cardType\": \"UserStory\",\r\n\t\t\t\t\t\t\"boardId\": \"1551679\",\r\n\t\t\t\t\t\t\"cardUniqueId\": \"ust3\",\r\n\t\t\t\t\t\t\"responseStatus\": \"Failed\",\r\n\t\t\t\t\t\t\"relation\": \"Parent-child\",\r\n\t\t\t\t\t\t\"responseMsg\": [\r\n\t\t\t\t\t\t\t\"Relation does not exist. Cannot delete relation.\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"cardType\": \"UserStory\",\r\n\t\t\t\t\t\t\"boardId\": \"1551679\",\r\n\t\t\t\t\t\t\"cardUniqueId\": \"ust3\",\r\n\t\t\t\t\t\t\"responseStatus\": \"Failed\",\r\n\t\t\t\t\t\t\"relation\": \"kanbanDependency\",\r\n\t\t\t\t\t\t\"responseMsg\": [\r\n\t\t\t\t\t\t\t\"Relation does not exist. Cannot delete relation.\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"toCard\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"cardType\": \"KanbanDefect\",\r\n\t\t\t\t\t\t\"boardId\": \"1551679\",\r\n\t\t\t\t\t\t\"cardUniqueId\": \"def1\",\r\n\t\t\t\t\t\t\"responseStatus\": \"Failed\",\r\n\t\t\t\t\t\t\"relation\": \"Parent-child\",\r\n\t\t\t\t\t\t\"responseMsg\": [\r\n\t\t\t\t\t\t\t\"Relation does not exist. Cannot delete relation.\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t\"messageView\": {\r\n\t\t\t\t\"type\": \"error\",\r\n\t\t\t\t\"message\": [\r\n\t\t\t\t\t\"deleteRelation failed\"\r\n\t\t\t\t],\r\n\t\t\t\t\"uriMap\": {\r\n\t\t\t\t\t\"selfUri\": \"http://localhost:8080/restapi/relation-operations/boards/1551679/cards/UserStory:UST1/relations/delete\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : "{\r\n\t\t\"Response\": {\r\n\t\t\t\"details\": {\r\n\t\t\t\t\"fromCard\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"cardType\": \"UserStory\",\r\n\t\t\t\t\t\t\"boardId\": \"1551679\",\r\n\t\t\t\t\t\t\"cardUniqueId\": \"ust3\",\r\n\t\t\t\t\t\t\"responseStatus\": \"Successful\",\r\n\t\t\t\t\t\t\"relation\": \"Parent-child\",\r\n\t\t\t\t\t\t\"responseMsg\": [\r\n\t\t\t\t\t\t\t\"Relation deleted successfully\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"cardType\": \"UserStory\",\r\n\t\t\t\t\t\t\"boardId\": \"1551679\",\r\n\t\t\t\t\t\t\"cardUniqueId\": \"ust3\",\r\n\t\t\t\t\t\t\"responseStatus\": \"Successful\",\r\n\t\t\t\t\t\t\"relation\": \"kanbanDependency\",\r\n\t\t\t\t\t\t\"responseMsg\": [\r\n\t\t\t\t\t\t\t\"Relation deleted successfully\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"toCard\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"cardType\": \"KanbanIssue\",\r\n\t\t\t\t\t\t\"boardId\": \"1551680\",\r\n\t\t\t\t\t\t\"cardUniqueId\": \"529079\",\r\n\t\t\t\t\t\t\"responseStatus\": \"Successful\",\r\n\t\t\t\t\t\t\"relation\": \"Parent-child\",\r\n\t\t\t\t\t\t\"responseMsg\": [\r\n\t\t\t\t\t\t\t\"Relation deleted successfully\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"cardType\": \"UserStory\",\r\n\t\t\t\t\t\t\"boardId\": \"1551679\",\r\n\t\t\t\t\t\t\"cardUniqueId\": \"UST2\",\r\n\t\t\t\t\t\t\"responseStatus\": \"Successful\",\r\n\t\t\t\t\t\t\"relation\": \"Has\",\r\n\t\t\t\t\t\t\"responseMsg\": [\r\n\t\t\t\t\t\t\t\"Relation deleted successfully\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t\"messageView\": {\r\n\t\t\t\t\"type\": \"success\",\r\n\t\t\t\t\"message\": [\r\n\t\t\t\t\t\"deleteRelation successful\"\r\n\t\t\t\t],\r\n\t\t\t\t\"uriMap\": {\r\n\t\t\t\t\t\"selfUri\": \"http://localhost:8080/restapi/relation-operations/boards/1551679/cards/UserStory:UST1/relations/delete\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}"
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : "{\r\n\t\t\"Response\": {\r\n\t\t\t\"details\": {\r\n\t\t\t\t\"fromCard\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"cardType\": \"UserStory\",\r\n\t\t\t\t\t\t\"boardId\": \"1551679\",\r\n\t\t\t\t\t\t\"cardUniqueId\": \"ust3\",\r\n\t\t\t\t\t\t\"responseStatus\": \"Successful\",\r\n\t\t\t\t\t\t\"relation\": \"Has\",\r\n\t\t\t\t\t\t\"responseMsg\": [\r\n\t\t\t\t\t\t\t\"Relation deleted successfully\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"cardType\": \"UserStory\",\r\n\t\t\t\t\t\t\"boardId\": \"1551679\",\r\n\t\t\t\t\t\t\"cardUniqueId\": \"ust3\",\r\n\t\t\t\t\t\t\"responseStatus\": \"Failed\",\r\n\t\t\t\t\t\t\"relation\": \"kanbanDependency\",\r\n\t\t\t\t\t\t\"responseMsg\": [\r\n\t\t\t\t\t\t\t\"Relation does not exist. Cannot delete relation.\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"toCard\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"cardType\": \"KanbanDefect\",\r\n\t\t\t\t\t\t\"boardId\": \"1551679\",\r\n\t\t\t\t\t\t\"cardUniqueId\": \"def1\",\r\n\t\t\t\t\t\t\"responseStatus\": \"Failed\",\r\n\t\t\t\t\t\t\"relation\": \"Parent-child\",\r\n\t\t\t\t\t\t\"responseMsg\": [\r\n\t\t\t\t\t\t\t\"Relation does not exist. Cannot delete relation.\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t\"messageView\": {\r\n\t\t\t\t\"type\": \"partial_success\",\r\n\t\t\t\t\"message\": [\r\n\t\t\t\t\t\"deleteRelation partially successful\"\r\n\t\t\t\t],\r\n\t\t\t\t\"uriMap\": {\r\n\t\t\t\t\t\"selfUri\": \"http://localhost:8080/restapi/relation-operations/boards/1551679/cards/UserStory:UST1/relations/delete\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No workspace found for the project id : 1548156", "No card found for the Sequence Number : def2", "No workspace found for the project id : 1548156" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/relation-operations/boards/1548156/cards/KanbanIssue:538050/relations/delete"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/relation-operations/boards/{boardId}/cards/relations" : {
      "get" : {
        "tags" : [ "RelationService" ],
        "summary" : "Fetches the list of all the relations among all the cards of the specified board",
        "description" : "Sample URL -  http://localhost:8080/restapi/relation-operations/boards/1551420/cards/relations?cardId=KanbanDefect:539886&cardType=KanbanDefect&relationType=Parent-child&relationType=Has",
        "operationId" : "getAllCardsRelation",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cardId",
          "in" : "query",
          "description" : "Combination of CardType and CardUniqueId separated by colon.<br/>Eg- ENHC:12321",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "cardType",
          "in" : "query",
          "description" : "Card type of the card obtained from getCardListForProject output\r\nExample: UserStory",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "relationType",
          "in" : "query",
          "description" : "Type of reletion between cards\r\nExample: Parent-child, Has etc",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No workspace found for the project id : 15514201" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/relation-operations/boards/15514201/cards/relations"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "relations" : [ {
                          "boardId" : "1551420",
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "539886",
                          "toCard" : [ {
                            "boardId" : "1551420",
                            "cardType" : "KanbanIssue",
                            "cardUniqueId" : "529536",
                            "relation" : "Has"
                          } ]
                        }, {
                          "boardId" : "1551420",
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "541416",
                          "fromCard" : [ {
                            "boardId" : "1551472",
                            "cardType" : "KanbanDefect",
                            "cardUniqueId" : "540503",
                            "relation" : "Parent-child"
                          } ],
                          "toCard" : [ {
                            "boardId" : "1551420",
                            "cardType" : "KanbanDefect",
                            "cardUniqueId" : "539886",
                            "relation" : "Parent-child"
                          } ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getAllCardsRelation successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/relation-operations/boards/1551420/cards/relations?cardType=KanbanDefect&relationType=Parent-child&relationType=Has"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/relation-operations/boards/{boardId}/cards/{id}/relations" : {
      "get" : {
        "tags" : [ "RelationService" ],
        "summary" : "Fetches the list of all the relations with the card",
        "description" : "Sample URL -  http://localhost:8080/restapi/relation-operations/boards/1551675/cards/KanbanIssue:ISS1/relations",
        "operationId" : "getCardRelation",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Invalid cardType: KanbanIssues", "No card found for the Sequence Number : iss1" ],
                        "uriMap" : {
                          "selfUri" : "/http://localhost:8080/restapi/relation-operations/boards/1551675/cards/KanbanIssues:iss1/relations"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "fromCard" : [ {
                          "cardType" : "UserStory",
                          "boardId" : "1551676",
                          "cardUniqueId" : "538254",
                          "cardStatus" : "Blocked",
                          "relation" : "Parent-child"
                        }, {
                          "cardType" : "KanbanDefect",
                          "boardId" : "1551675",
                          "cardUniqueId" : "540193",
                          "cardStatus" : "Active",
                          "relation" : "Has"
                        }, {
                          "cardType" : "KanbanDefect",
                          "boardId" : "1551675",
                          "cardUniqueId" : "540039",
                          "cardStatus" : "Active",
                          "relation" : "kanbanDependency"
                        } ],
                        "toCard" : [ {
                          "cardType" : "KanbanDefect",
                          "boardId" : "1551675",
                          "cardUniqueId" : "540192",
                          "cardStatus" : "Active",
                          "relation" : "Parent-child"
                        }, {
                          "cardType" : "DCMG",
                          "boardId" : "1551676",
                          "cardUniqueId" : "1538926",
                          "cardStatus" : "Active",
                          "relation" : "Has"
                        }, {
                          "cardType" : "DCMG",
                          "boardId" : "1551676",
                          "cardUniqueId" : "540192",
                          "cardStatus" : "Closed",
                          "relation" : "kanbanDependency"
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getCardRelation successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/relation-operations/boards/1551675/cards/KanbanIssue:ISS1/relations"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "RelationService" ],
        "summary" : "Adds a relation between cards",
        "description" : "Sample URL -  http://localhost:8080/restapi/relation-operations/boards/1551677/cards/UserStory:UST1/relations",
        "operationId" : "addRelation",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Set of cards in which relation need to add",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "toCard" : [ {
                    "relation" : "Parent-child",
                    "cardType" : "KanbanIssue",
                    "cardUniqueId" : "529079",
                    "boardId" : "1551680"
                  }, {
                    "relation" : "Has",
                    "cardType" : "DCMG",
                    "cardUniqueId" : "DCMG1",
                    "boardId" : "1551680"
                  }, {
                    "relation" : "kanbanDependency",
                    "cardType" : "DCMG",
                    "cardUniqueId" : "DCMG1",
                    "boardId" : "1551680"
                  } ],
                  "fromCard" : [ {
                    "relation" : "Parent-child",
                    "cardType" : "UserStory",
                    "cardUniqueId" : "ust3",
                    "boardId" : "1551679"
                  }, {
                    "relation" : "kanbanDependency",
                    "cardType" : "UserStory",
                    "cardUniqueId" : "ust3",
                    "boardId" : "1551679"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "422" : {
            "description" : "failure response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "fromCard" : [ {
                          "cardType" : "KanbanIssue",
                          "boardId" : "1551678",
                          "cardUniqueId" : "iss2",
                          "responseStatus" : "Successful",
                          "relation" : "Has",
                          "responseMsg" : [ "Relation already exists" ]
                        } ],
                        "toCard" : [ {
                          "cardType" : "UserStory",
                          "boardId" : "1551677",
                          "cardUniqueId" : "538256",
                          "responseStatus" : "Failed",
                          "relation" : "Parent-child",
                          "responseMsg" : [ "Relation already exists" ]
                        }, {
                          "cardType" : "KanbanDefect",
                          "boardId" : "1551677",
                          "cardUniqueId" : "def1",
                          "responseStatus" : "Failed",
                          "relation" : "Parent-child",
                          "responseMsg" : [ "Relation already exists" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "addRelation failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/relation-operations/boards/1551677/cards/UserStory:UST1/relations"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : "{\r\n\t\t\"Response\": {\r\n\t\t\t\"details\": {\r\n\t\t\t\t\"fromCard\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"cardType\": \"KanbanIssue\",\r\n\t\t\t\t\t\t\"boardId\": \"1551678\",\r\n\t\t\t\t\t\t\"cardUniqueId\": \"iss2\",\r\n\t\t\t\t\t\t\"responseStatus\": \"Successful\",\r\n\t\t\t\t\t\t\"relation\": \"Has\",\r\n\t\t\t\t\t\t\"responseMsg\": [\r\n\t\t\t\t\t\t\t\"Relation added successfully\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"cardType\": \"DCMG\",\r\n\t\t\t\t\t\t\"boardId\": \"1551678\",\r\n\t\t\t\t\t\t\"cardUniqueId\": \"DCMG1\",\r\n\t\t\t\t\t\t\"responseStatus\": \"Successful\",\r\n\t\t\t\t\t\t\"relation\": \"Has\",\r\n\t\t\t\t\t\t\"responseMsg\": [\r\n\t\t\t\t\t\t\t\"Relation added successfully\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"cardType\": \"UserStory\",\r\n\t\t\t\t\t\t\"boardId\": \"1551679\",\r\n\t\t\t\t\t\t\"cardUniqueId\": \"ust3\",\r\n\t\t\t\t\t\t\"responseStatus\": \"Successful\",\r\n\t\t\t\t\t\t\"relation\": \"kanbanDependency\",\r\n\t\t\t\t\t\t\"responseMsg\": [\r\n\t\t\t\t\t\t\t\"Relation added successfully\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"toCard\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"cardType\": \"UserStory\",\r\n\t\t\t\t\t\t\"boardId\": \"1551677\",\r\n\t\t\t\t\t\t\"cardUniqueId\": \"538256\",\r\n\t\t\t\t\t\t\"responseStatus\": \"Successful\",\r\n\t\t\t\t\t\t\"relation\": \"Parent-child\",\r\n\t\t\t\t\t\t\"responseMsg\": [\r\n\t\t\t\t\t\t\t\"Relation added successfully\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"cardType\": \"KanbanDefect\",\r\n\t\t\t\t\t\t\"boardId\": \"1551677\",\r\n\t\t\t\t\t\t\"cardUniqueId\": \"def1\",\r\n\t\t\t\t\t\t\"responseStatus\": \"Successful\",\r\n\t\t\t\t\t\t\"relation\": \"Parent-child\",\r\n\t\t\t\t\t\t\"responseMsg\": [\r\n\t\t\t\t\t\t\t\"Relation added successfully\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"cardType\": \"UserStory\",\r\n\t\t\t\t\t\t\"boardId\": \"1551677\",\r\n\t\t\t\t\t\t\"cardUniqueId\": \"538256\",\r\n\t\t\t\t\t\t\"responseStatus\": \"Successful\",\r\n\t\t\t\t\t\t\"relation\": \"kanbanDependency\",\r\n\t\t\t\t\t\t\"responseMsg\": [\r\n\t\t\t\t\t\t\t\"Relation added successfully\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t},\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t\"messageView\": {\r\n\t\t\t\t\"type\": \"success\",\r\n\t\t\t\t\"message\": [\r\n\t\t\t\t\t\"addRelation successful\"\r\n\t\t\t\t],\r\n\t\t\t\t\"uriMap\": {\r\n\t\t\t\t\t\"selfUri\": \"http://localhost:8080/restapi/relation-operations/boards/1551677/cards/UserStory:UST1/relations\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}"
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "toCard" : [ {
                          "cardType" : "UserStory",
                          "boardId" : "1551677",
                          "cardUniqueId" : "538256",
                          "responseStatus" : "Failed",
                          "relation" : "Parent-child",
                          "responseMsg" : [ "Relation already exists" ]
                        }, {
                          "cardType" : "KanbanIssue",
                          "boardId" : "1551677",
                          "cardUniqueId" : "iss1",
                          "responseStatus" : "Successful",
                          "relation" : "Parent-child",
                          "responseMsg" : [ "Relation added successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "addRelation partially successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/relation-operations/boards/1551677/cards/UserStory:UST1/relations"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No workspace found for the project id : 1551012" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/relation-operations/boards/1551012/cards/UserStory:538050/relations"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/card-operations/boards/{boardId}/cards" : {
      "get" : {
        "tags" : [ "CardService" ],
        "summary" : "Fetches cards details",
        "description" : "Sample URL -  http://localhost:8080/restapi/card-operations/boards/1551624/cards?filter=workType::=::KanbanDefect AND id::=::540090&fieldName=id&fieldName=name&fieldName=priority&id=KanbanDefect:540090",
        "operationId" : "getCardList_1",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "It can be used to filter cards based upon field names. If not specified all cards for given workspace will be availableExample: Fieldnames = cardSize,classOfService,description. Filter can be applied for either 'AND' condition or 'OR' condition",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "advanceFilter",
          "in" : "query",
          "description" : "It can be used to filter cards based upon field names like cardSize,classOfService, description, and so on. If no filter criteria applied, it will then fetch all fields of the cards of a specified card type (All, single, or specific card types) for a given workspace.\n\n The filter can be applied for n number of  'AND' condition as well as 'OR' condition simultaneously.\n\nTo use 'AND' filters, use a comma between the AND conditions. For example: advanceFilter= currentOwner:{$eq:gkadam}, currentQueue:{$eq:Ready}.\n\nTo use 'OR' filters, enter all filters in $OR:{fieldname:{operator:value},fieldname:{operator:value}} and separate them with a comma. For example: $OR:{priority:{$eq:Low},currentQueue:{$eq:Ready}}\n\nSo, the filter parameter with both AND as well as OR conditions will be like: currentOwner:{$eq:gkadam}, currentQueue:{$eq:Ready}, $OR:{priority:{$eq:Low},currentQueue:{$eq:Ready}}\n\nCurrently, we support the following API operators: \n\n\t\t\t\t\tAPI Operator \t| Description  \r\n\t\t\t\t\t______________________________________  \r\n                    \r\n                    $eq:value   \t| Is equal to\r\n                    \r\n                    $neq:value   \t| Is different\r\n                    \r\n                    $gt:value   \t| Is greater than\r\n                    \r\n                    $gte:value   \t| Is greater than or equal to\r\n                    \r\n                    $lt:value   \t| Is less than\r\n                    \r\n                    $lte:value   \t| Is less than or equal to\r\n                    \r\n                    $lkw:value   \t| Contains the word\r\n                    \r\n                    $nlkw:value   \t| Does not contain the word\r\n                    \r\n                    $start:value    | Starts with\r\n                    \r\n                    $end:value   \t| Ends with",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cardType",
          "in" : "query",
          "description" : "Card type of the card obtained from getCardListForProject output. You can fetch All card types, an individual card type or combination of card types. \r\nFor example, to fetch cards of the card type UserStory only, enter 'UserStory'. To  fetch cards of card type UserStory and Defect, pass cardType='UserStory'&cardType='Defect', if cardtype is not passed it will be considered as All cards belongs to given workspace.CardType is only applicable in combination with advanceFilter.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "deletedCards",
          "in" : "query",
          "description" : "By default only Active cards are returned. Passing optional parameter value as 'Y' will return Active and Deleted cards. Works only in combination with advanceFilter parameter.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "You can search cards based on this criteria:\r\nId,Title,Description,priority,comment,tags,size,rank,classofservice,currentqueue,currentstate,currentowner\nEg. to search card with high priority you need to enter --> Priority:High \r\nAlternatively you can also perform global search by entering any text in search field\r\nEg. card123\nAlso alteranatively if you want to search cards across boards, then you can also perform the global search \r\nif you have set global search to Y in url then you can search cards across boards is in the above search field.\r\nEg. value can be Y or N",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "globalSearch",
          "in" : "query",
          "description" : "This parameter can be used for searching cards across boards. ",
          "schema" : {
            "type" : "string",
            "enum" : [ "Y", "N" ]
          }
        }, {
          "name" : "fieldName",
          "in" : "query",
          "description" : "List of field names for which details has to be fetched. Get the field names from\r\nGET request of CardMetadata \r\nExample: names = cardSize,classOfService,description",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "isLabel",
          "in" : "query",
          "description" : "If isLabel Parameter is set as Y, then the value to be set for the fieldName parameter should be the fieldLabel and not fieldName. \r\nFor example: If the fieldName has the value set as name, priority, id and their respective field labels are Title, Severity, Unique ID, \r\nthen when isLabel is set to Y, then you should pass fieldName = Title, fieldName = Severity, fieldName = Unique ID. \r\nAccordingly, you will receive the output/response as\r\n\"Title\": \"ABC\",\r\n\"Severity\": \"High\",\r\n\"Unique ID\": \"56475\"\r\n\r\nAnd for parameter isLabel=Y response will always be label and not fieldname\r\n\r\nNote: If you have used the Search parameter, then currently we do not support isLabel parameter.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No workspace found for the project id : 155162411" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/155162411/cards?filter=workType::=::KanbanDefect%20AND%20id::=::540090&fieldName=id&fieldName=name&fieldName=priority&id=KanbanDefect:540090"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "id" : "540090",
                          "priority" : "Critical",
                          "name" : "karate Defect1"
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getCardList successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1551624/cards?filter=workType::=::KanbanDefect%20AND%20id::=::540090&fieldName=id&fieldName=name&fieldName=priority&id=KanbanDefect:540090"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "CardService" ],
        "summary" : "Updates cards",
        "description" : "Sample URL -  http://localhost:8080/restapi/card-operations/boards/1546882/cards",
        "operationId" : "updateCards",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Cards to be updated",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "card" : [ {
                    "id" : "DEF2",
                    "workType" : "KanbanDefect",
                    "name" : "REST Update"
                  }, {
                    "id" : "ISS10",
                    "workType" : "KanbanIssue",
                    "name" : "REST Update"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "responseStatus" : "Failed",
                          "card" : {
                            "workType" : "KanbanDefectsss",
                            "id" : "DEF2"
                          },
                          "responseMsg" : [ "Invalid cardType: KanbanDefectsss", "No card found for the Sequence Number : DEF2" ]
                        }, {
                          "responseStatus" : "Failed",
                          "card" : {
                            "workType" : "KanbanIssuesss",
                            "id" : "ISS10"
                          },
                          "responseMsg" : [ "Invalid cardType: KanbanIssuesss", "No card found for the Sequence Number : ISS10" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1546882/cards"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "responseStatus" : "Successful",
                          "card" : {
                            "workType" : "KanbanDefect",
                            "id" : "DEF2"
                          },
                          "responseMsg" : "Card updated successfully"
                        }, {
                          "responseStatus" : "Successful",
                          "card" : {
                            "workType" : "KanbanIssue",
                            "id" : "ISS10"
                          },
                          "responseMsg" : "Card updated successfully"
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "updateCards successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1546882/cards"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "responseStatus" : "Successful",
                          "card" : {
                            "workType" : "KanbanDefect",
                            "id" : "DEF2"
                          },
                          "responseMsg" : "Card updated successfully"
                        }, {
                          "responseStatus" : "Failed",
                          "card" : {
                            "workType" : "KanbanIssuesss",
                            "id" : "ISS10"
                          },
                          "responseMsg" : [ "Invalid cardType: KanbanIssuesss", "No card found for the Sequence Number : ISS10" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1546882/cards"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "CardService" ],
        "summary" : "Add cards in the Backlog or the custom column as defined in the Board Policies",
        "description" : "Sample URL -  http://localhost:8080/restapi/card-operations/boards/1546882/cards<br/><br/>Note - In case the card is added in the Backlog, you will have to call the following service for moving it from the Backlog to the Board.<br/>Sample URL -  http://localhost:8080/restapi/card-operations/boards/1546882/cards/move/ready",
        "operationId" : "addCard",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessedBy",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "skipMandatory",
          "in" : "query",
          "description" : "This parameter can be used to skip validation layer operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Cards to be added",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "card" : [ {
                    "workType" : "KanbanDefect",
                    "name" : "test jagruti issuuuee",
                    "cardSize" : "M",
                    "classOfService" : "Expedite",
                    "currentOwner" : "test_post_rest@test.com"
                  }, {
                    "workType" : "KanbanIssue",
                    "name" : "test jagruti issuuuee",
                    "cardSize" : "M",
                    "classOfService" : "Expedite",
                    "currentOwner" : "test_post_rest@test.com"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No workspace found for the project id : 15512675" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/15512675/cards?loginId=test_post_rest@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "responseStatus" : "Successful",
                          "card" : {
                            "currentSwimId" : "N/A",
                            "ExternalCardId" : "DEF3",
                            "currentQueue" : "Backlog",
                            "currentOwner" : "test save",
                            "rootCause" : "-99999",
                            "modifiedBy" : "test_post_rest@test.com",
                            "currentQueueId" : "N/A",
                            "id" : "540245",
                            "cardNumber" : "DEF3",
                            "currentSwimName" : "N/A",
                            "currentOwner_userId" : "test_post_rest@test.com",
                            "workspaceId" : "1551275",
                            "severity" : "-99999",
                            "classOfService" : "Expedite",
                            "summaryType" : "leaf",
                            "priority" : "Medium",
                            "cardSize" : "M",
                            "workspaceType" : "KanbanProject",
                            "createdDate" : "2019-04-16T07:16:25Z",
                            "createdBy" : "test_post_rest@test.com",
                            "dateIdentified" : "2019-04-16T07:16:25Z",
                            "name" : "test jagruti issuuuee",
                            "workType" : "KanbanDefect",
                            "modifiedDate" : "2019-04-16T07:16:25Z",
                            "defectType" : "-99999",
                            "currentState" : "Active"
                          },
                          "responseMsg" : [ "Card added successfully" ]
                        }, {
                          "responseStatus" : "Successful",
                          "card" : {
                            "currentSwimId" : "N/A",
                            "cardNumber" : "ISS76",
                            "ExternalCardId" : "ISS76",
                            "currentQueue" : "Backlog",
                            "currentOwner" : "test save",
                            "rootCause" : "-99999",
                            "modifiedBy" : "test_post_rest@test.com",
                            "currentQueueId" : "N/A",
                            "id" : "529677",
                            "currentSwimName" : "N/A",
                            "currentOwner_userId" : "test_post_rest@test.com",
                            "workspaceId" : "1551275",
                            "severity" : "-99999",
                            "classOfService" : "Expedite",
                            "summaryType" : "leaf",
                            "priority" : "Medium",
                            "cardSize" : "M",
                            "workspaceType" : "KanbanProject",
                            "createdDate" : "2019-04-16T07:16:26Z",
                            "createdBy" : "test_post_rest@test.com",
                            "dateIdentified" : "2019-04-16T07:16:26Z",
                            "name" : "test jagruti issuuuee",
                            "workType" : "KanbanIssue",
                            "modifiedDate" : "2019-04-16T07:16:26Z",
                            "currentState" : "Active"
                          },
                          "responseMsg" : [ "Card added successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "addCard successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1551275/cards?loginId=test_post_rest@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "responseStatus" : "Failed",
                          "card" : {
                            "cardSize" : "M",
                            "classOfService" : "Expedite",
                            "currentOwner" : "test_post_rest@test.com",
                            "workType" : "KanbanDefect"
                          },
                          "responseMsg" : [ "Required field: name is missing" ]
                        }, {
                          "responseStatus" : "Successful",
                          "card" : {
                            "currentSwimId" : "N/A",
                            "release" : "0",
                            "cardNumber" : "ISS20",
                            "ExternalCardId" : "ISS20",
                            "currentQueue" : "Backlog",
                            "currentOwner" : "test save",
                            "rootCause" : "-99999",
                            "iteration" : "0",
                            "modifiedBy" : "test_post_rest@test.com",
                            "currentQueueId" : "N/A",
                            "id" : "529125",
                            "currentSwimName" : "N/A",
                            "currentOwner_userId" : "test_post_rest@test.com",
                            "workspaceId" : "1551275",
                            "severity" : "-99999",
                            "classOfService" : "Expedite",
                            "summaryType" : "leaf",
                            "priority" : "Medium",
                            "cardSize" : "M",
                            "workspaceType" : "KanbanProject",
                            "createdDate" : "2019-05-15T11:21:44Z",
                            "createdBy" : "test_post_rest@test.com",
                            "dateIdentified" : "2019-05-15T11:21:44Z",
                            "name" : "test jagruti issuuuee",
                            "workType" : "KanbanIssue",
                            "modifiedDate" : "2019-05-15T11:21:44Z",
                            "currentState" : "Active"
                          },
                          "responseMsg" : [ "Card added successfully" ]
                        } ],
                        "successCount" : 1
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "addCard partially successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1551275/cards?loginId=test_post_rest@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "CardService" ],
        "summary" : "Deletes cards",
        "description" : "Sample URL -  http://localhost:8080/restapi/card-operations/boards/1551624/cards?id=KanbanDefect:DEF1&id=UserStory:UST1",
        "operationId" : "deleteCards",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "forceAllow",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "responseStatus" : "Failed",
                          "card" : {
                            "workType" : "KanbanDefect",
                            "id" : "DEF2"
                          },
                          "responseMsg" : [ "No card found for the Sequence Number : DEF2" ]
                        }, {
                          "responseStatus" : "Failed",
                          "card" : {
                            "workType" : "KanbanDefect",
                            "id" : "DEF3"
                          },
                          "responseMsg" : [ "No card found for the Sequence Number : DEF3" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "deleteCards failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1551624/cards?id=KanbanDefect:DEF2&id=KanbanDefect:DEF3"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "responseStatus" : "Successful",
                          "card" : {
                            "workType" : "KanbanDefect",
                            "id" : "DEF3"
                          },
                          "responseMsg" : [ "Card deleted successfully" ]
                        }, {
                          "responseStatus" : "Successful",
                          "card" : {
                            "workType" : "KanbanDefect",
                            "id" : "DEF2"
                          },
                          "responseMsg" : [ "Card deleted successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "deleteCards successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1551624/cards?id=KanbanDefect:DEF2&id=KanbanDefect:DEF3"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "responseStatus" : "Successful",
                          "card" : {
                            "workType" : "UserStory",
                            "id" : "UST1"
                          },
                          "responseMsg" : [ "Card deleted successfully" ]
                        }, {
                          "responseStatus" : "Failed",
                          "card" : {
                            "workType" : "KanbanDefect",
                            "id" : "DEF1"
                          },
                          "responseMsg" : [ "No card found for the Sequence Number : DEF1" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "deleteCards partially successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1551624/cards?id=KanbanDefect:DEF1&id=UserStory:UST1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/card-operations/boards/{boardId}/cards/{id}" : {
      "get" : {
        "tags" : [ "CardService" ],
        "summary" : "Fetches card details",
        "description" : "Sample URL -  http://localhost:8080/restapi/card-operations/boards/1551624/cards/KanbanDefect:540090?fieldName=currentState&fieldName=name",
        "operationId" : "getCard",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fieldName",
          "in" : "query",
          "description" : "List of field names for which details has to be fetched. Get the field names from\r\nGET request of CardMetadata \r\nExample: names = cardSize,classOfService,description",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "isLabel",
          "in" : "query",
          "description" : "If isLabel Parameter is set as Y, then the value to be set for the fieldName parameter should be the fieldLabel and not fieldName. \r\nFor example: If the fieldName has the value set as name, priority, id and their respective field labels are Title, Severity, Unique ID, \r\nthen when isLabel is set to Y, then you should pass fieldName = Title, fieldName = Severity, fieldName = Unique ID. \r\nAccordingly, you will receive the output/response as\r\n\"Title\": \"ABC\",\r\n\"Severity\": \"High\",\r\n\"Unique ID\": \"56475\"\r\n\r\nAnd for parameter isLabel=Y response will always be label and not fieldname\r\n\r\nNote: If you have used the Search parameter, then currently we do not support isLabel parameter.",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No workspace found for the project id : 155162411" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/155162411/cards/KanbanDefect:540090"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : {
                          "currentSwimId" : "1552848",
                          "release" : "0",
                          "resolvedBy" : "Unassigned",
                          "ExternalCardId" : "DEF1",
                          "currentQueue" : "Ready",
                          "currentOwner" : "test User",
                          "rootCause" : "-99999",
                          "iteration" : "0",
                          "modifiedBy" : "testUser@test.com",
                          "currentQueueId" : "1611906",
                          "id" : "540090",
                          "cardNumber" : "DEF1",
                          "currentSwimName" : "Kanban board",
                          "currentOwner_userId" : "testUser@test.com",
                          "workspaceId" : "1551624",
                          "severity" : "-99999",
                          "classOfService" : "Standard Class",
                          "summaryType" : "leaf",
                          "priority" : "Critical",
                          "cardSize" : "M",
                          "workspaceType" : "KanbanProject",
                          "createdDate" : "2019-04-17T09:09:54Z",
                          "createdBy" : "testUser@test.com",
                          "dateIdentified" : "2019-04-17T09:09:54Z",
                          "name" : "karate Defect1",
                          "workType" : "KanbanDefect",
                          "modifiedDate" : "2019-04-17T09:21:05Z",
                          "smartLane" : "Kanban board",
                          "defectType" : "-99999",
                          "currentState" : "Active"
                        }
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getCard successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1551624/cards/KanbanDefect:540090"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "CardService" ],
        "summary" : "Deletes card",
        "description" : "Sample URL -  http://localhost:8080/restapi/card-operations/boards/1551624/cards/KanbanDefect:DEF24",
        "operationId" : "deleteCard",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "forceAllow",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "responseStatus" : "Failed",
                          "card" : {
                            "workType" : "KanbanDefect",
                            "id" : "DEF24"
                          },
                          "responseMsg" : [ "No card found for the Sequence Number : DEF24" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "deleteCard failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1551624/cards/KanbanDefect:DEF24"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : {
                          "responseStatus" : "Successful",
                          "card" : {
                            "workType" : "KanbanDefect",
                            "id" : "DEF1"
                          },
                          "responseMsg" : [ "Card deleted successfully" ]
                        }
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "deleteCard successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1551624/cards/KanbanDefect:DEF1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/card-operations/boards/cards/ext-creator-id/{emailid}" : {
      "get" : {
        "tags" : [ "CardService" ],
        "summary" : "Fetches cards basic details across boards by using ext_creator_id ",
        "description" : "Sample URL -  http://localhost:8080/restapi/card-operations/boards/cards/ext-creator-id/abc@gmail.com",
        "operationId" : "getCardList",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "emailid",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No workspace found for the project id : 155162411" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/155162411/cards?filter=workType::=::KanbanDefect%20AND%20id::=::540090&fieldName=id&fieldName=name&fieldName=priority&id=KanbanDefect:540090"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "workType" : "KanbanDefect",
                          "name" : "test jagruti issuuuee",
                          "id" : 543966,
                          "cardNumber" : "DEF5",
                          "workspaceId" : 1548054
                        }, {
                          "workType" : "KanbanIssue",
                          "name" : "test jagruti issuuuee",
                          "id" : 530451,
                          "cardNumber" : "ISS3",
                          "workspaceId" : 1548054
                        }, {
                          "workType" : "KanbanIssue",
                          "name" : "test jagruti issuuuee",
                          "id" : 530452,
                          "cardNumber" : "ISS4",
                          "workspaceId" : 1548054
                        }, {
                          "workType" : "KanbanIssue",
                          "name" : "test jagruti issuuuee",
                          "id" : 530455,
                          "cardNumber" : "ISS7",
                          "workspaceId" : 1548054
                        }, {
                          "workType" : "KanbanIssue",
                          "name" : "test jagruti issuuuee",
                          "id" : 530456,
                          "cardNumber" : "ISS8",
                          "workspaceId" : 1548054
                        }, {
                          "workType" : "UserStory",
                          "name" : "test jagruti issuuuee",
                          "id" : 540906,
                          "cardNumber" : "UST2",
                          "workspaceId" : 1548054
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getCardList successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8180/restapi/card-operations/boards/cards/ext-creator-id/hbh"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/card-operations/boards/{boardId}/cards/move/backlog" : {
      "put" : {
        "tags" : [ "CardService" ],
        "summary" : "Moves cards to backlog",
        "description" : "Sample URL -  http://localhost:8080/restapi/card-operations/boards/1234/cards/move/backlog?loginId=user1@test.com",
        "operationId" : "moveCardToBacklog",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body to move cards to backlog",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "cardDetails" : [ {
                    "cardType" : "KanbanDefect",
                    "cardUniqueId" : "1111"
                  }, {
                    "cardType" : "KanbanIssue",
                    "cardUniqueId" : "2222"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "cardType" : "KanbanIssue",
                          "cardUniqueId" : "1111",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Invalid cardUniqueId:1111 for given project" ]
                        }, {
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "2222",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Invalid cardUniqueId:2222 for given project" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "moveCardToBacklog Failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/6/cards/move/backlog?loginId=user1@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "UnProcessable entity in response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "1111",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Card '1111' is not present on the board" ]
                        }, {
                          "cardType" : "KanbanIssue",
                          "cardUniqueId" : "2222",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Card '2222' is not present on the board" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "moveCardToBacklog Failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/6/cards/move/backlog?loginId=user1@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "1111",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card moved to Backlog successfully" ]
                        }, {
                          "cardType" : "KanbanIssue",
                          "cardUniqueId" : "2222",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card moved to Backlog successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "moveCardToBacklog Successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/6/cards/move/backlog?loginId=user1@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "1111",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Invalid cardUniqueId:1111 for given project" ]
                        }, {
                          "cardType" : "KanbanIssue",
                          "cardUniqueId" : "2222",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card moved to Backlog successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "moveCardToBacklog partial_success" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/6/cards/move/backlog?loginId=user1@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/card-operations/boards/{boardId}/cards/archive" : {
      "put" : {
        "tags" : [ "CardService" ],
        "summary" : "Archives the cards",
        "description" : "Sample URL -  http://localhost:8080/restapi/card-operations/boards/1234/cards/archive",
        "operationId" : "archiveCards",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Send the cards to be archived",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "cardDetails" : [ {
                    "cardUniqueId" : 540294,
                    "cardType" : "KanbanDefect"
                  }, {
                    "cardUniqueId" : 538356,
                    "cardType" : "UserStory"
                  }, {
                    "cardUniqueId" : "DCMG1",
                    "cardType" : "DCMG"
                  }, {
                    "cardUniqueId" : "ISS1",
                    "cardType" : "KanbanIssue"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "cardType" : "KanbanIssue",
                          "cardUniqueId" : "InvalidCardId",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "No card found for the Sequence Number : InvalidCardId" ]
                        }, {
                          "cardType" : "DCMG",
                          "cardUniqueId" : "DCMG2",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Cannot archive blocked card." ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "archiveCards failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1234/cards/archive?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "cardType" : "KanbanIssue",
                          "cardUniqueId" : "ISS1",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card Archived successfully" ]
                        }, {
                          "cardType" : "UserStory",
                          "cardUniqueId" : "538356",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card Archived successfully" ]
                        }, {
                          "cardType" : "DCMG",
                          "cardUniqueId" : "DCMG1",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card Archived successfully" ]
                        }, {
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "540294",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card Archived successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "archiveCards successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1234/cards/archive?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "cardType" : "InvalidCardType",
                          "cardUniqueId" : "DCMG3",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Invalid cardType: InvalidCardType", "No card found for the Sequence Number : DCMG3" ]
                        }, {
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "DEF2",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card Archived successfully" ]
                        }, {
                          "cardType" : "UserStory",
                          "cardUniqueId" : "UST2",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Cannot archive blocked card." ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "archiveCards partially successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1234/cards/archive?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/card-operations/boards/{boardId}/card-types/{cardType}/startDate/{startDate}/cards" : {
      "get" : {
        "tags" : [ "CardService" ],
        "summary" : "Fetches cards from specified date",
        "description" : "Sample URL -  http://localhost:8080/restapi/card-operations/boards/1551624/card-types/UserStory/startDate/2009-12-25T10:49:52Z/cards?endDate=2019-12-25T10:49:52Z",
        "operationId" : "getCardsModifiedSincedate",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cardType",
          "in" : "path",
          "description" : "Card type of the card obtained from getCardListForProject output\r\nExample: UserStory",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "path",
          "description" : "ISO date for Cards created from this date\r\nExample: 2013-02-01T08:34:23Z",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "ISO date for Cards created till this date\r\nExample: 2013-02-07T10:34:00Z",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No workspace found for the project id : 1551624111" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1551624111/card-types/UserStory/startDate/2009-12-25T10:49:52Z/cards"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "createdDate" : "2019-04-17T09:20:42Z",
                          "modifiedDate" : "2019-04-17T09:26:00Z",
                          "id" : "538204",
                          "cardNumber" : "UST2"
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getCardsModifiedSincedate successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1551624/card-types/UserStory/startDate/2009-12-25T10:49:52Z/cards"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/card-operations/boards/{boardId}/cards/flag" : {
      "put" : {
        "tags" : [ "CardService" ],
        "summary" : "Adds Flags on cards",
        "description" : "Sample URL -  http://localhost:8080/restapi/card-operations/boards/1234/cards/flag",
        "operationId" : "flagCard",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Set of flags need to be added to the card/cards",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "cardDetails" : [ {
                    "cardUniqueId" : "UST1",
                    "cardType" : "UserStory",
                    "flagType" : "risk",
                    "flaggedBy" : "testUser@test.com",
                    "flagReason" : "Business",
                    "flagComment" : "Need to have a discussion with our team"
                  }, {
                    "cardUniqueId" : "5679",
                    "cardType" : "KanbanDefect",
                    "flagType" : "block",
                    "flaggedBy" : "testUser@test.com",
                    "flagReason" : "On Hold",
                    "flagComment" : "External Dependency"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : "{  \r\n   \"Response\":{  \r\n      \"details\":{  \r\n\r\n      },\r\n      \"messageView\":{  \r\n         \"type\":\"error\",\r\n         \"message\\:[  \r\n            \"No cardDetail present to add Flag\"\r\n         ],\r\n         \"uriMap\":{  \r\n            \"selfUri\":\"http://localhost:8080/restapi/card-operations/boards/1234/cards/flag?loginId=testUser@test.com\"\r\n         }\r\n      }\r\n   }\r\n}"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "flagReason" : "Business",
                          "flagComment" : "Need to have a discussion with our team",
                          "flagType" : "Risk",
                          "cardType" : "UserStory",
                          "cardUniqueId" : "5678",
                          "flaggedBy" : "testUser@test.com",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card has been Flag successfully." ]
                        }, {
                          "flagReason" : "On Hold",
                          "flagComment" : "External Dependency",
                          "flagType" : "Blocked",
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "5679",
                          "flaggedBy" : "testUser@test.com",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card has been Flag successfully." ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "flagCard successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1234/cards/flag?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "flagReason" : "Business",
                          "flagComment" : "Need to have a discussion with our team",
                          "flagType" : "Risk",
                          "cardType" : "UserStory",
                          "cardUniqueId" : "UST123",
                          "flaggedBy" : "testUser@test.com",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "No card found for the Sequence Number:UST123", "Card null::UserStory is not on the Board." ]
                        }, {
                          "flagReason" : "Infrastructure",
                          "flagComment" : "Cause problem in SAAS",
                          "flagType" : "Issue",
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "5679",
                          "flaggedBy" : "testUser@test.com",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card has been Flag successfully." ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "flagCard partially successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1234/cards/flag?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/card-operations/boards/{boardId}/cards/move/board" : {
      "put" : {
        "tags" : [ "CardService" ],
        "summary" : "Moves cards on board",
        "description" : "Sample URL -  http://localhost:8080/restapi/card-operations/boards/1234/cards/move/board?loginId=user1@test.com",
        "operationId" : "moveCardOnBoard",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body to move cards on board",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "cardDetails" : [ {
                    "cardType" : "KanbanDefect",
                    "cardUniqueId" : "1111",
                    "toSwimId" : "1552746",
                    "toQkeyId" : "1611808"
                  }, {
                    "cardType" : "KanbanIssue",
                    "cardUniqueId" : "2222",
                    "toSwimId" : "1552746",
                    "toQkeyId" : "1611808"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "toSwimId" : "1552746",
                          "cardType" : "KanbanIssue",
                          "cardUniqueId" : "1111",
                          "toQkeyId" : "1611808",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Invalid cardUniqueId:1111 for given project" ]
                        }, {
                          "toSwimId" : "1552746",
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "2222",
                          "toQkeyId" : "1611808",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Invalid cardUniqueId:2222 for given project" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "moveCardOnBoard Failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/6/cards/move/board"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "UnProcessable entity in response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "fromQkeyId" : "1611808",
                          "toSwimId" : "1552746",
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "1111",
                          "fromSwimId" : "1552746",
                          "toQkeyId" : "1611808",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Card has been already moved. Please refresh board." ]
                        }, {
                          "fromQkeyId" : "1611808",
                          "toSwimId" : "1552746",
                          "cardType" : "KanbanIssue",
                          "cardUniqueId" : "2222",
                          "fromSwimId" : "1552746",
                          "toQkeyId" : "1611808",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Card has been already moved. Please refresh board." ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "moveCardOnBoard Failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/6/cards/move/board"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "fromQkeyId" : "1611804",
                          "toSwimId" : "1552746",
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "1111",
                          "fromSwimId" : "1552746",
                          "toQkeyId" : "1611808",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card moved successfully" ]
                        }, {
                          "fromQkeyId" : "1611804",
                          "toSwimId" : "1552746",
                          "cardType" : "KanbanIssue",
                          "cardUniqueId" : "2222",
                          "fromSwimId" : "1552746",
                          "toQkeyId" : "1611808",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card moved successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "moveCardOnBoard Successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/6/cards/move/board"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "toSwimId" : "1552746",
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "1111",
                          "toQkeyId" : "1611808",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Invalid cardUniqueId:1111 for given project" ]
                        }, {
                          "fromQkeyId" : "1611804",
                          "toSwimId" : "1552746",
                          "cardType" : "KanbanIssue",
                          "cardUniqueId" : "2222",
                          "fromSwimId" : "1552746",
                          "toQkeyId" : "1611808",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card moved successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "moveCardOnBoard partial_success" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/6/cards/move/board"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/card-operations/boards/{boardId}/cards/convert" : {
      "put" : {
        "tags" : [ "CardService" ],
        "summary" : "Converts cards",
        "description" : "Sample URL -  http://localhost:8080/restapi/card-operations/boards/1546882/cards/convert",
        "operationId" : "convertCards",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Cards to be converted",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "card" : [ {
                    "id" : "DEF4",
                    "workType" : "KanbanDefect"
                  }, {
                    "id" : "UST3",
                    "workType" : "UserStory"
                  } ],
                  "destionWorkType" : "KanbanDefect",
                  "breakRelation" : "true"
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "DEF3",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "No card found for the Sequence Number : DEF3" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "convertCards failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1546882/cards/convert"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "newCard" : {
                            "currentSwimId" : "1547749",
                            "estimates" : "0.0",
                            "ExternalCardId" : "UST3",
                            "currentQueue" : "Ready",
                            "isRelated" : "true",
                            "currentOwner" : "Janu Lund",
                            "modifiedBy" : "janu.l@digite.com",
                            "currentQueueId" : "1606149",
                            "id" : "538510",
                            "currentSwimName" : "Kanban board",
                            "currentOwner_userId" : "janu.l@digite.com",
                            "workspaceId" : "1546882",
                            "classOfService" : "Standard Class",
                            "summaryType" : "parent",
                            "priority" : "Medium",
                            "cardSize" : "M",
                            "workspaceType" : "KanbanProject",
                            "createdDate" : "2019-06-14T10:41:12Z",
                            "createdBy" : "janu.l@digite.com",
                            "dateIdentified" : "2019-06-14T10:41:12Z",
                            "cardNumber" : "UST3",
                            "name" : "Defect1",
                            "workType" : "UserStory",
                            "modifiedDate" : "2019-06-14T10:41:13Z",
                            "currentState" : "Active",
                            "smartLane" : "Kanban board"
                          },
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "DEF4",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card updated successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "convertCards successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1546882/cards/convert"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "DEF4",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "No card found for the Sequence Number : DEF4" ]
                        }, {
                          "newCard" : {
                            "currentSwimId" : "1547749",
                            "ExternalCardId" : "DEF5",
                            "currentQueue" : "Ready",
                            "isRelated" : "true",
                            "currentOwner" : "Janu Lund",
                            "modifiedBy" : "janu.l@digite.com",
                            "currentQueueId" : "1606149",
                            "id" : "540550",
                            "cardNumber" : "DEF5",
                            "currentSwimName" : "Kanban board",
                            "currentOwner_userId" : "janu.l@digite.com",
                            "estimates" : "0.0",
                            "workspaceId" : "1546882",
                            "classOfService" : "Standard Class",
                            "summaryType" : "parent",
                            "priority" : "Medium",
                            "cardSize" : "M",
                            "workspaceType" : "KanbanProject",
                            "createdDate" : "2019-06-14T10:44:16Z",
                            "createdBy" : "janu.l@digite.com",
                            "dateIdentified" : "2019-06-14T10:44:16Z",
                            "name" : "Defect1",
                            "workType" : "KanbanDefect",
                            "modifiedDate" : "2019-06-14T10:44:17Z",
                            "smartLane" : "Kanban board",
                            "currentState" : "Active"
                          },
                          "cardType" : "UserStory",
                          "cardUniqueId" : "UST3",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card updated successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "convertCards partially successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1546882/cards/convert"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/card-operations/boards/{boardId}/cards/discard-abort" : {
      "put" : {
        "tags" : [ "CardService" ],
        "summary" : "Discards/Aborts the cards",
        "description" : "Sample URL -  http://localhost:8080/restapi/card-operations/boards/1234/cards/discard-abort",
        "operationId" : "discardAbortCards",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Send the cards to be discarded/aborted",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "cardDetails" : [ {
                    "cardUniqueId" : 540345,
                    "cardType" : "KanbanDefect",
                    "discardAbortReason" : "Obsolete",
                    "discardAbortComment" : "Abort Testing via rest ws for DEF"
                  }, {
                    "cardUniqueId" : 538407,
                    "cardType" : "UserStory",
                    "discardAbortReason" : "Deferred",
                    "discardAbortComment" : "Abort Testing via rest ws for UST"
                  }, {
                    "cardUniqueId" : "DCMG1",
                    "cardType" : "DCMG",
                    "discardAbortReason" : "Clarification Needed",
                    "discardAbortComment" : "Abort Testing via rest ws for CustomCard"
                  }, {
                    "cardUniqueId" : "ISS1",
                    "cardType" : "KanbanIssue",
                    "discardAbortReason" : "Merged",
                    "discardAbortComment" : "Abort Testing via rest ws for ISS"
                  }, {
                    "cardUniqueId" : "DEF2",
                    "cardType" : "KanbanDefect",
                    "discardAbortReason" : "Obsolete",
                    "discardAbortComment" : "Discard Testing via rest ws for DEF"
                  }, {
                    "cardUniqueId" : "UST2",
                    "cardType" : "UserStory",
                    "discardAbortReason" : "Deferred",
                    "discardAbortComment" : "Discard Testing via rest ws for UST"
                  }, {
                    "cardUniqueId" : 1539079,
                    "cardType" : "DCMG",
                    "discardAbortReason" : "Clarification Needed",
                    "discardAbortComment" : "Discard Testing via rest ws for CustomCard"
                  }, {
                    "cardUniqueId" : 529177,
                    "cardType" : "KanbanIssue",
                    "discardAbortReason" : "Merged",
                    "discardAbortComment" : "Discard Testing via rest ws for ISS"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "cardType" : "KanbanIssue_invalid",
                          "discardAbortReason" : "Merged",
                          "cardUniqueId" : "UST3",
                          "responseStatus" : "Failed",
                          "discardAbortComment" : "Blocked Card Abort Testing via rest ws for ISS",
                          "responseMsg" : [ "Invalid cardType: KanbanIssue_invalid", "No card found for the Sequence Number : UST3" ]
                        }, {
                          "cardType" : "KanbanDefect",
                          "discardAbortReason" : "Obsolete",
                          "cardUniqueId" : "DEF4",
                          "responseStatus" : "Failed",
                          "discardAbortComment" : "Blocked Abort Testing via rest ws for DEF",
                          "responseMsg" : [ "Couldn't abort the card as card is not active." ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "discardAbortCards failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1234/cards/discard-abort?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "cardType" : "KanbanDefect",
                          "discardAbortReason" : "Obsolete",
                          "cardUniqueId" : "DEF2",
                          "responseStatus" : "Successful",
                          "discardAbortComment" : "Discard Testing via rest ws for DEF",
                          "responseMsg" : [ "Card discard/abort successfully" ]
                        }, {
                          "cardType" : "KanbanDefect",
                          "discardAbortReason" : "Obsolete",
                          "cardUniqueId" : "540345",
                          "responseStatus" : "Successful",
                          "discardAbortComment" : "Abort Testing via rest ws for DEF",
                          "responseMsg" : [ "Card discard/abort successfully" ]
                        }, {
                          "cardType" : "KanbanIssue",
                          "discardAbortReason" : "Merged",
                          "cardUniqueId" : "529177",
                          "responseStatus" : "Successful",
                          "discardAbortComment" : "Discard Testing via rest ws for ISS",
                          "responseMsg" : [ "Card discard/abort successfully" ]
                        }, {
                          "cardType" : "DCMG",
                          "discardAbortReason" : "Clarification Needed",
                          "cardUniqueId" : "1539079",
                          "responseStatus" : "Successful",
                          "discardAbortComment" : "Discard Testing via rest ws for CustomCard",
                          "responseMsg" : [ "Card discard/abort successfully" ]
                        }, {
                          "cardType" : "KanbanIssue",
                          "discardAbortReason" : "Merged",
                          "cardUniqueId" : "ISS1",
                          "responseStatus" : "Successful",
                          "discardAbortComment" : "Abort Testing via rest ws for ISS",
                          "responseMsg" : [ "Card discard/abort successfully" ]
                        }, {
                          "cardType" : "UserStory",
                          "discardAbortReason" : "Deferred",
                          "cardUniqueId" : "538407",
                          "responseStatus" : "Successful",
                          "discardAbortComment" : "Abort Testing via rest ws for UST",
                          "responseMsg" : [ "Card discard/abort successfully" ]
                        }, {
                          "cardType" : "DCMG",
                          "discardAbortReason" : "Clarification Needed",
                          "cardUniqueId" : "DCMG1",
                          "responseStatus" : "Successful",
                          "discardAbortComment" : "Abort Testing via rest ws for CustomCard",
                          "responseMsg" : [ "Card discard/abort successfully" ]
                        }, {
                          "cardType" : "UserStory",
                          "discardAbortReason" : "Deferred",
                          "cardUniqueId" : "UST2",
                          "responseStatus" : "Successful",
                          "discardAbortComment" : "Discard Testing via rest ws for UST",
                          "responseMsg" : [ "Card discard/abort successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "discardAbortCards successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1234/cards/discard-abort?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "cardType" : "DCMG",
                          "discardAbortReason" : "Merged",
                          "cardUniqueId" : "InvalidCardId",
                          "responseStatus" : "Failed",
                          "discardAbortComment" : "Invalid Card id for Discard Testing via rest ws for ISS",
                          "responseMsg" : [ "No card found for the Sequence Number : InvalidCardId" ]
                        }, {
                          "cardType" : "KanbanIssue",
                          "discardAbortReason" : "Merged",
                          "cardUniqueId" : "ISS3",
                          "responseStatus" : "Failed",
                          "discardAbortComment" : "Blocked Card Abort Testing via rest ws for ISS",
                          "responseMsg" : [ "Couldn't abort the card as card is not active." ]
                        }, {
                          "cardType" : "DCMG",
                          "discardAbortReason" : "Clarification Needed",
                          "cardUniqueId" : "DCMG3",
                          "responseStatus" : "Successful",
                          "discardAbortComment" : "Discard Testing via rest ws for CustomCard",
                          "responseMsg" : [ "Card discard/abort successfully" ]
                        }, {
                          "cardType" : "KanbanDefect",
                          "discardAbortReason" : "Obsolete",
                          "cardUniqueId" : "DEF3",
                          "responseStatus" : "Successful",
                          "discardAbortComment" : "Abort Testing via rest ws for DEF",
                          "responseMsg" : [ "Card discard/abort successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "discardAbortCards partially successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1234/cards/discard-abort?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/card-operations/boards/{boardId}/cards/unflag" : {
      "put" : {
        "tags" : [ "CardService" ],
        "summary" : "Removes Flags from cards",
        "description" : "Sample URL -  http://localhost:8080/restapi/card-operations/boards/1234/cards/unflag",
        "operationId" : "unflagCard",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Set of flags need to be removed from the card/cards",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "cardDetails" : [ {
                    "cardUniqueId" : "UST1",
                    "cardType" : "UserStory",
                    "flagType" : "risk",
                    "unFlaggedBy" : "testUser@test.com",
                    "unFlagComment" : "Problem Solved"
                  }, {
                    "cardUniqueId" : "5679",
                    "cardType" : "KanbanDefect",
                    "flagType" : "block",
                    "unFlaggedBy" : "testUser@test.com",
                    "unFlagComment" : "Problem Solved"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No cardDetail present to unFlag" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1234/cards/unflag?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "unFlagComment" : "Problem Solved",
                          "flagType" : "Risk",
                          "cardType" : "UserStory",
                          "cardUniqueId" : "5678",
                          "unFlaggedBy" : "testUser@test.com",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card has been UnFlag successfully." ]
                        }, {
                          "unFlagComment" : "Problem Solved",
                          "flagType" : "Blocked",
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "5679",
                          "unFlaggedBy" : "testUser@test.com",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card has been UnFlag successfully." ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "unflagCard successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1234/cards/unflag?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "unFlagComment" : "Problem Solved",
                          "flagType" : "Risk",
                          "cardType" : "UserStory",
                          "cardUniqueId" : "UST123",
                          "unFlaggedBy" : "testUser@test.com",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "No card found for the Sequence Number:UST123", "Card null::UserStory is not on the Board." ]
                        }, {
                          "unFlagComment" : "Problem Solved",
                          "flagType" : "Blocked",
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "5679",
                          "unFlaggedBy" : "testUser@test.com",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card has been UnFlag successfully." ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "unflagCard partially successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1234/cards/unflag?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/card-operations/boards/{boardId}/cards/move/ready" : {
      "put" : {
        "tags" : [ "CardService" ],
        "summary" : "Moves cards to ready",
        "description" : "Sample URL -  http://localhost:8080/restapi/card-operations/boards/1234/cards/move/ready?loginId=user1@test.com",
        "operationId" : "moveCardToReady",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body to move cards to ready",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "cardDetails" : [ {
                    "cardType" : "KanbanDefect",
                    "cardUniqueId" : "1111",
                    "swimId" : "1552746",
                    "queueId" : "16118041611804"
                  }, {
                    "cardType" : "KanbanIssue",
                    "cardUniqueId" : "2222",
                    "swimId" : "1552746",
                    "queueId" : "1611804"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No cards to move to Ready" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/6/cards/move/ready"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "UnProcessable entity in response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "toSwimId" : "1552746",
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "1111",
                          "toQkeyId" : "16118041611804",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Card '1111' is not present on the board" ]
                        }, {
                          "toSwimId" : "1552746",
                          "cardType" : "KanbanIssue",
                          "cardUniqueId" : "2222",
                          "toQkeyId" : "1611804",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Card '2222' is not present on the board" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "moveCardToReady Failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/6/cards/move/ready?loginId=apurva_post_rest@gandiva.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "toSwimId" : "1552746",
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "1111",
                          "toQkeyId" : "1611804",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card Moved successfully" ]
                        }, {
                          "toSwimId" : "1552746",
                          "cardType" : "KanbanIssue",
                          "cardUniqueId" : "2222",
                          "toQkeyId" : "1611804",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card Moved successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "moveCardToReady Successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/6/cards/move/ready"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "toSwimId" : "1552746",
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "1111",
                          "toQkeyId" : "16118041611804",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Card '1111' is not present on the board" ]
                        }, {
                          "toSwimId" : "1552746",
                          "cardType" : "KanbanIssue",
                          "cardUniqueId" : "2222",
                          "toQkeyId" : "1611804",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card Moved successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "moveCardToReady partial_success" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/6/cards/move/ready"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/card-operations/boards/{boardId}/cards/transfer" : {
      "put" : {
        "tags" : [ "CardService" ],
        "summary" : "Transfers the cards",
        "description" : "Sample URL -  http://localhost:8080/restapi/card-operations/boards/1234/cards/transfer",
        "operationId" : "transferCards",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Sends the list of cards to be transferred",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "cardDetails" : [ {
                    "cardUniqueId" : 529998,
                    "cardType" : "KanbanDefect",
                    "destinationBoardId" : 12332,
                    "destinationSwimId" : 65123,
                    "destinationQueueId" : 43122
                  }, {
                    "cardUniqueId" : 524401,
                    "cardType" : "UserStory",
                    "destinationBoardId" : 12332,
                    "destinationSwimId" : 84221,
                    "destinationQueueId" : 42322
                  }, {
                    "cardUniqueId" : "DCMG2",
                    "cardType" : "DCMG",
                    "destinationBoardId" : 73422,
                    "destinationSwimId" : 653443,
                    "destinationQueueId" : 878768
                  }, {
                    "cardUniqueId" : "ISS1",
                    "cardType" : "KanbanIssue",
                    "destinationBoardId" : 12332,
                    "destinationSwimId" : 54323,
                    "destinationQueueId" : 54542
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "DEF13",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "No card found for the Sequence Number : DEF13" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "transferCards failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1546782/cards/transfer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "Malformed parameters or a particular reason due to which entity cannot be processed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "cardType" : "UserStory",
                          "cardUniqueId" : "UST5",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Couldn't transfer the card as card is not active." ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "transferCards failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1546782/cards/transfer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "newCard" : {
                            "currentSwimId" : "N/A",
                            "ExternalCardId" : "TASK1",
                            "currentQueue" : "Ready",
                            "currentOwner" : "dolton d",
                            "modifiedBy" : "dolton@gandiva.com",
                            "currentQueueId" : "N/A",
                            "id" : "1538823",
                            "currentSwimName" : "N/A",
                            "currentOwner_userId" : "dolton@gandiva.com",
                            "workspaceId" : "1548207",
                            "classOfService" : "Standard Class",
                            "reportedQueueAge" : "0.0",
                            "summaryType" : "leaf",
                            "priority" : "Medium",
                            "cardSize" : "M",
                            "workspaceType" : "KanbanProject",
                            "createdDate" : "2019-06-15T05:26:24Z",
                            "createdBy" : "dolton@gandiva.com",
                            "dateIdentified" : "2019-06-15T05:26:24Z",
                            "name" : "task card",
                            "workType" : "TASK",
                            "modifiedDate" : "2019-06-15T05:26:25Z",
                            "smartLane" : "Starks",
                            "currentState" : "Active",
                            "cardNumber" : "TASK1"
                          },
                          "cardType" : "TASK",
                          "cardUniqueId" : "1535820",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card transferred successfully" ]
                        }, {
                          "newCard" : {
                            "currentSwimId" : "N/A",
                            "cardNumber" : "ISS12",
                            "ExternalCardId" : "ISS12",
                            "currentQueue" : "Ready",
                            "currentOwner" : "dolton d",
                            "modifiedBy" : "dolton@gandiva.com",
                            "currentQueueId" : "N/A",
                            "id" : "528972",
                            "currentSwimName" : "N/A",
                            "currentOwner_userId" : "dolton@gandiva.com",
                            "workspaceId" : "1548207",
                            "classOfService" : "Standard Class",
                            "reportedQueueAge" : "0.0",
                            "summaryType" : "leaf",
                            "priority" : "Medium",
                            "cardSize" : "M",
                            "workspaceType" : "KanbanProject",
                            "createdDate" : "2019-06-15T05:26:19Z",
                            "createdBy" : "dolton@gandiva.com",
                            "dateIdentified" : "2019-06-15T05:26:19Z",
                            "name" : "card for deleting 1",
                            "workType" : "KanbanIssue",
                            "modifiedDate" : "2019-06-15T05:26:20Z",
                            "currentState" : "Active",
                            "smartLane" : "Starks"
                          },
                          "cardType" : "KanbanIssue",
                          "cardUniqueId" : "ISS4",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card transferred successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "transferCards successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1546782/cards/transfer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : [ {
                          "newCard" : {
                            "currentSwimId" : "N/A",
                            "reasonForBlocking" : "Abort:[Merged &gt; Clarification Needed &gt; Obsolete &gt; Deferred] Testing via rest ws",
                            "ExternalCardId" : "UST17",
                            "currentQueue" : "Ready",
                            "currentOwner" : "dolton d",
                            "modifiedBy" : "dolton@gandiva.com",
                            "currentQueueId" : "N/A",
                            "id" : "538203",
                            "currentSwimName" : "N/A",
                            "currentOwner_userId" : "dolton@gandiva.com",
                            "workspaceId" : "1548207",
                            "classOfService" : "Standard Class",
                            "reportedQueueAge" : "0.0",
                            "summaryType" : "leaf",
                            "priority" : "Medium",
                            "cardSize" : "M",
                            "workspaceType" : "KanbanProject",
                            "createdDate" : "2019-06-15T05:22:50Z",
                            "createdBy" : "dolton@gandiva.com",
                            "dateIdentified" : "2019-06-15T05:22:50Z",
                            "cardNumber" : "UST17",
                            "name" : "userstory card",
                            "workType" : "UserStory",
                            "modifiedDate" : "2019-06-15T05:22:54Z",
                            "currentState" : "Active",
                            "smartLane" : "Starks"
                          },
                          "cardType" : "UserStory",
                          "cardUniqueId" : "UST1",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card transferred successfully" ]
                        }, {
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "DEF13",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "No card found for the Sequence Number : DEF13" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "transferCards partially successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/card-operations/boards/1546782/cards/transfer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/card-operations/boards/{boardId}/cards/{id}/new/reference" : {
      "get" : {
        "tags" : [ "CardService" ],
        "summary" : "Fetches new reference of converted and transfered card  ",
        "description" : "Sample URL -  http://localhost:8080/restapi/card-operations/boards/1551624/cards/ENHC123/new/reference",
        "operationId" : "getCardNewReference",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "cardDetails" : {
                          "projectNumber" : 11,
                          "cardNumber" : "ISS70",
                          "workspaceId" : 1548054
                        }
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getCardNewReference successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8180/restapi/card-operations/boards/1551624/cards/ENHC123/new/reference"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/comment-operations/boards/{boardId}/cards/{id}/comments" : {
      "get" : {
        "tags" : [ "CommentService" ],
        "summary" : "Fetches list of comments added to card along with comment details",
        "description" : "Sample URL -  http://localhost:8080/restapi/comment-operations/boards/1551574/cards/DCMG:DCMG1/comments",
        "operationId" : "getComments",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessedBy",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No workspace found for the project id : 1551574" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/comment-operations/boards/1551574/cards/DCMG:DCMG1/comments?loginId=User@.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "comment" : [ {
                          "createdDate" : "2019-04-17T09:33:38Z",
                          "level" : "",
                          "createdBy" : "i_get_rest@gandiva.com",
                          "cardType" : "KanbanDefect",
                          "commentId" : "1535566",
                          "cardUniqueId" : "540097",
                          "title" : "getCommentData",
                          "commentText" : "ing56",
                          "createrName" : " 1",
                          "responseTo" : ""
                        }, {
                          "createdDate" : "2019-04-17T09:33:29Z",
                          "level" : "",
                          "createdBy" : "i_get_rest@gandiva.com",
                          "cardType" : "KanbanDefect",
                          "commentId" : "1535565",
                          "cardUniqueId" : "540097",
                          "title" : "getCommentData",
                          "commentText" : "ing4",
                          "createrName" : " 1",
                          "responseTo" : "1535564"
                        }, {
                          "createdDate" : "2019-04-17T09:33:17Z",
                          "level" : "",
                          "createdBy" : "i_get_rest@gandiva.com",
                          "cardType" : "KanbanDefect",
                          "commentId" : "1535564",
                          "cardUniqueId" : "540097",
                          "title" : "getCommentData",
                          "commentText" : "ing 1",
                          "createrName" : " 1",
                          "responseTo" : "1535563"
                        }, {
                          "createdDate" : "2019-04-17T09:33:04Z",
                          "level" : "",
                          "createdBy" : "i_get_rest@gandiva.com",
                          "cardType" : "KanbanDefect",
                          "commentId" : "1535563",
                          "cardUniqueId" : "540097",
                          "title" : "getCommentData",
                          "commentText" : " karate data for getcomment",
                          "createrName" : " 1",
                          "responseTo" : ""
                        }, {
                          "createdDate" : "2019-04-17T09:32:34Z",
                          "level" : "",
                          "createdBy" : "i_get_rest@gandiva.com",
                          "cardType" : "KanbanDefect",
                          "commentId" : "1535562",
                          "cardUniqueId" : "540097",
                          "title" : "getCommentData",
                          "commentText" : "new 4",
                          "createrName" : " 1",
                          "responseTo" : ""
                        }, {
                          "createdDate" : "2019-04-17T09:32:19Z",
                          "level" : "",
                          "createdBy" : "i_get_rest@gandiva.com",
                          "cardType" : "KanbanDefect",
                          "commentId" : "1535561",
                          "cardUniqueId" : "540097",
                          "title" : "getCommentData",
                          "commentText" : "automation ing comment",
                          "createrName" : " 1",
                          "responseTo" : ""
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getComments successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/comment-operations/boards/1551626/cards/KanbanDefect:540097/comments"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "CommentService" ],
        "summary" : "Update comment",
        "description" : "Sample URL -   http://localhost:8080/restapi/comment-operations/boards/1551574/cards/DCMG:DCMG1/comments",
        "operationId" : "updateComment",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessedBy",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "update comment to the card",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : "{\r\n\t\"comment\" : [\r\n\t\t{\r\n         \"commentText\":\"text Issue is fixed\",\r\n         \"commentedBy\":\"tesUser@test.com\",\r\n          \"id\":\"12345\"\t\t},\r\n\t\t{\r\n         \"commentText\":\"text Issue is not fixed\",\r\n         \"commentedBy\":\"tesUser@test.com\"\r\n          \"id\":\"12345\"\t\t}\r\n         \r\n         ]\r\n}"
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "commentDetails" : [ {
                          "comment" : {
                            "commentedBy" : "kgund@digite.com",
                            "commentText" : "text Comment"
                          },
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Required field id is missing" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "updateComment failed :null" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8180/restapi/comment-operations/boards/1548972/cards/KanbanDefect:532032/comments"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "commentDetails" : [ {
                          "comment" : {
                            "id" : "1537905",
                            "commentedBy" : "kgund@digite.com",
                            "commentText" : "text Comment"
                          },
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Update comment successful" ]
                        }, {
                          "comment" : {
                            "id" : "1537905",
                            "commentedBy" : "kgund@digite.com",
                            "commentText" : "add Comment"
                          },
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Update comment successful" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "updateComment successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8180/restapi/comment-operations/boards/1548972/cards/KanbanDefect:532032/comments"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "commentDetails" : [ {
                          "comment" : {
                            "commentedBy" : "kgund@digite.com",
                            "commentText" : ""
                          },
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "'commentText' cannot be blank" ]
                        }, {
                          "comment" : {
                            "id" : "1537905",
                            "commentedBy" : "kgund@digite.com",
                            "commentText" : "add Comment"
                          },
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Update comment successful" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "updateComment partially successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8180/restapi/comment-operations/boards/1548972/cards/KanbanDefect:532032/comments"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "CommentService" ],
        "summary" : "Adds comment to the card",
        "description" : "Sample URL -  http://localhost:8080/restapi/comment-operations/boards/1551574/cards/DCMG:DCMG1/comments",
        "operationId" : "addCommentToCard",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessedBy",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Adds comment to the card",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "comment" : [ {
                    "commentText" : "hiii",
                    "commentedBy" : "tesUser@test.com",
                    "commentExternalId" : "15358766"
                  }, {
                    "commentText" : "hiii",
                    "commentedBy" : "tesUser@test.com"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Invalid cardUniqueId:5350002 for given project" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/comment-operations/boards/1546882/cards/KanbanDefect:5350002/comments?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "commentDetails" : [ {
                          "comment" : {
                            "id" : "1535873",
                            "commentedBy" : "testUser@test.com",
                            "commentText" : "hiii"
                          },
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "add comment successfull" ]
                        }, {
                          "comment" : {
                            "id" : "1535874",
                            "commentedBy" : "testUser@test.com",
                            "commentText" : "hiii"
                          },
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "add comment successfull" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "addCommentToCard successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/comment-operations/boards/1546882/cards/KanbanDefect:530002/comments?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "commentDetails" : [ {
                          "comment" : {
                            "commentedBy" : "testUser@digtite.com",
                            "commentText" : "hiii"
                          },
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Invalid userId: testUser@digtite.com" ]
                        }, {
                          "comment" : {
                            "id" : "1535875",
                            "commentedBy" : "testUser@test.com",
                            "commentText" : "hiii"
                          },
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "add comment successfull" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "addCommentToCard partially successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/comment-operations/boards/1546882/cards/KanbanDefect:530002/comments?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/comment-operations/boards/{boardId}/cards/{id}/comments/reply" : {
      "post" : {
        "tags" : [ "CommentService" ],
        "summary" : "Replies on comment",
        "description" : "Sample URL -  http://localhost:8080/restapi/comment-operations/boards/1546882/cards/KanbanDefect:530002/comments/reply",
        "operationId" : "replyToComment",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessedBy",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "reply comment to the card",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "comment" : [ {
                    "commentText" : "hiii",
                    "commentedBy" : "tesUser@test.com",
                    "commentExternalId" : "15358766"
                  }, {
                    "commentText" : "hiii",
                    "commentedBy" : "tesUser@test.com"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Invalid cardUniqueId:5360002 for given project" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/comment-operations/boards/1546882/cards/KanbanDefect:5360002/comments/reply?loginId=User@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "commentDetails" : [ {
                          "comment" : {
                            "id" : "1535867",
                            "commentedBy" : "User@test.com",
                            "commentText" : "hiii"
                          },
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "add comment successfull" ]
                        }, {
                          "comment" : {
                            "id" : "1535868",
                            "commentedBy" : "User@test.com",
                            "commentText" : "hiii"
                          },
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "add comment successfull" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "replyToComment successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/comment-operations/boards/1546882/cards/KanbanDefect:530002/comments/reply?loginId=User@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "commentDetails" : [ {
                          "comment" : {
                            "commentedBy" : "User@test.com",
                            "commentText" : "hiii"
                          },
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Invalid external comment Id" ]
                        }, {
                          "comment" : {
                            "id" : "1535870",
                            "commentedBy" : "User@test.com",
                            "commentText" : "hiii"
                          },
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "add comment successfull" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "replyToComment partially successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/comment-operations/boards/1546882/cards/KanbanDefect:530002/comments/reply?loginId=User@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/comment-operations/boards/{boardId}/cards/comments" : {
      "get" : {
        "tags" : [ "CommentService" ],
        "summary" : "Fetches the list of comments from multiple cards based on the filter criteria.",
        "description" : "Sample URL -  http://localhost:8080/restapi/comment-operations/boards/1551574/cards/comments?id=KanbanDefect:DEF1&id=KanbanDefect:DEF2",
        "operationId" : "getCommentList",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "limitPerCard",
          "in" : "query",
          "description" : "The number of the most latest comments or reply to a comment that you want to fetch from the cards, if limitPerCard is not specified then it will by default fetch five of the most latest comments, if passed as -1 then it will fetch all the comments.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "commentsAddedBy",
          "in" : "query",
          "description" : "LoginId of the Users whose comments on the cards you want to fetch.",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "ISO date for comments added from this date\r\nExample: 2013-02-01T08:34:23Z",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "ISO date for comments added till this date\r\nExample: 2013-02-07T10:34:00Z",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No workspace found for the project id : 1551574" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/comment-operations/boards/1551574/cards/DCMG:DCMG1/comments?loginId=User@.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "comment" : [ {
                          "createdDate" : "2019-04-17T09:33:38Z",
                          "level" : "",
                          "createdBy" : "i_get_rest@gandiva.com",
                          "cardType" : "KanbanDefect",
                          "commentId" : "1535566",
                          "cardUniqueId" : "540097",
                          "title" : "getCommentData",
                          "commentText" : "ing56",
                          "createrName" : " 1",
                          "responseTo" : ""
                        }, {
                          "createdDate" : "2019-04-17T09:33:29Z",
                          "level" : "",
                          "createdBy" : "i_get_rest@gandiva.com",
                          "cardType" : "KanbanDefect",
                          "commentId" : "1535565",
                          "cardUniqueId" : "540097",
                          "title" : "getCommentData",
                          "commentText" : "ing4",
                          "createrName" : " 1",
                          "responseTo" : "1535564"
                        }, {
                          "createdDate" : "2019-04-17T09:33:17Z",
                          "level" : "",
                          "createdBy" : "i_get_rest@gandiva.com",
                          "cardType" : "KanbanDefect",
                          "commentId" : "1535564",
                          "cardUniqueId" : "540097",
                          "title" : "getCommentData",
                          "commentText" : "ing 1",
                          "createrName" : " 1",
                          "responseTo" : "1535563"
                        }, {
                          "createdDate" : "2019-04-17T09:33:04Z",
                          "level" : "",
                          "createdBy" : "i_get_rest@gandiva.com",
                          "cardType" : "KanbanDefect",
                          "commentId" : "1535563",
                          "cardUniqueId" : "540097",
                          "title" : "getCommentData",
                          "commentText" : " karate data for getcomment",
                          "createrName" : " 1",
                          "responseTo" : ""
                        }, {
                          "createdDate" : "2019-04-17T09:32:34Z",
                          "level" : "",
                          "createdBy" : "i_get_rest@gandiva.com",
                          "cardType" : "KanbanDefect",
                          "commentId" : "1535562",
                          "cardUniqueId" : "540097",
                          "title" : "getCommentData",
                          "commentText" : "new 4",
                          "createrName" : " 1",
                          "responseTo" : ""
                        }, {
                          "createdDate" : "2019-04-17T09:32:19Z",
                          "level" : "",
                          "createdBy" : "i_get_rest@gandiva.com",
                          "cardType" : "KanbanDefect",
                          "commentId" : "1535561",
                          "cardUniqueId" : "540097",
                          "title" : "getCommentData",
                          "commentText" : "automation ing comment",
                          "createrName" : " 1",
                          "responseTo" : ""
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getComments successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/comment-operations/boards/1551626/cards/KanbanDefect:540097/comments"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metadata-operations/boards/{boardId}/cardTypes" : {
      "get" : {
        "tags" : [ "MetadataService" ],
        "summary" : "\tFetches all the card types available in a board",
        "description" : "Sample URL - http://localhost:8080/restapi/metadata-operations/boards/1551471/cardTypes?loginId=testUser@test.com",
        "operationId" : "getCardTypesForBoard",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No workspace found for the project id : 1551471" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/metadata-operations/boards/1551471/cardTypes?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "CardTypes" : {
                          "Card" : [ {
                            "TypeName" : "Issues",
                            "CardType" : "KanbanIssue",
                            "CardCode" : "ISS"
                          }, {
                            "TypeName" : "User Stories",
                            "CardType" : "UserStory",
                            "CardCode" : "UST"
                          }, {
                            "TypeName" : "Defects",
                            "CardType" : "KanbanDefect",
                            "CardCode" : "DEF"
                          }, {
                            "TypeName" : "Document Management",
                            "CardType" : "DCMG",
                            "CardCode" : "DCMG"
                          } ]
                        }
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getCardTypesForBoard successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/metadata-operations/boards/1551472/cardTypes?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metadata-operations/items/{itemType}/metaData" : {
      "get" : {
        "tags" : [ "MetadataService" ],
        "summary" : "Fetches Meta Data details along with content",
        "description" : "Sample URL - http://localhost:8080/restapi/metadata-operations/item/UserStory/metaData?loginId=testUser@test.com",
        "operationId" : "getMetadata",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "itemType",
          "in" : "path",
          "description" : "Card type of the card obtained from getCardListForProject output\r\nExample: UserStory",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Invalid cardType: UserStory1" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/metadata-operations/items/UserStory1/metaData?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "Card" : {
                          "CardMetadataDetails" : {
                            "cardRevision" : "0",
                            "cardName" : "User Stories",
                            "cardId" : "1618383",
                            "cardType" : "UserStory",
                            "description" : "UserStory description",
                            "CardFieldDetails" : {
                              "field" : [ {
                                "isRequired" : "NO",
                                "itemType" : "String",
                                "fieldName" : "cardNumber",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Id",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "Single-Line Text"
                              }, {
                                "isRequired" : "Yes",
                                "itemType" : "String",
                                "fieldName" : "name",
                                "isReadOnly" : "NO",
                                "defaultValue" : null,
                                "fieldLabel" : "Title",
                                "inputMethod" : "Manual Entry",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "Single-Line Text"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "String",
                                "fieldName" : "description",
                                "isReadOnly" : "NO",
                                "defaultValue" : null,
                                "fieldLabel" : "Description",
                                "inputMethod" : "Manual Entry",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "Rich Text"
                              }, {
                                "dynamicDataKey" : "TeamMemberList",
                                "isRequired" : "NO",
                                "itemType" : "PersonMin",
                                "fieldName" : "currentOwner",
                                "isReadOnly" : "NO",
                                "defaultValue" : null,
                                "fieldLabel" : " Current Owner",
                                "inputMethod" : "Dynamic List",
                                "isUserType" : "Yes",
                                "isDisabled" : "NO",
                                "fieldType" : "Collection"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "String",
                                "fieldName" : "priority",
                                "isReadOnly" : "NO",
                                "MasterListDetails" : {
                                  "MasterListName" : "Priority",
                                  "MasterListItems" : {
                                    "MasterListItem" : [ {
                                      "itemValue" : "-99999",
                                      "currentState" : "Active",
                                      "itemLabel" : "None"
                                    }, {
                                      "itemValue" : "Critical",
                                      "currentState" : "Active",
                                      "itemLabel" : "Critical"
                                    }, {
                                      "itemValue" : "High",
                                      "currentState" : "Active",
                                      "itemLabel" : "High"
                                    }, {
                                      "itemValue" : "Medium",
                                      "currentState" : "Active",
                                      "itemLabel" : "Medium"
                                    }, {
                                      "itemValue" : "Low",
                                      "currentState" : "Active",
                                      "itemLabel" : "Low"
                                    } ]
                                  },
                                  "MasterListId" : 20000,
                                  "currentState" : "Active"
                                },
                                "defaultValue" : "Medium",
                                "fieldLabel" : "Priority",
                                "inputMethod" : "Static List",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "staticLovId" : "20000",
                                "fieldType" : "Single-Line Text"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Date",
                                "fieldName" : "dueDate",
                                "isReadOnly" : "NO",
                                "defaultValue" : null,
                                "fieldLabel" : "Due Date",
                                "inputMethod" : "Manual Entry",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "Date"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Double",
                                "fieldName" : "estimates",
                                "isReadOnly" : "NO",
                                "defaultValue" : null,
                                "fieldLabel" : "Estimate (Days)",
                                "inputMethod" : "Manual Entry",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "Decimal"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "String",
                                "fieldName" : "classOfService",
                                "isReadOnly" : "NO",
                                "MasterListDetails" : {
                                  "MasterListName" : "Class Of Service",
                                  "MasterListItems" : {
                                    "MasterListItem" : [ {
                                      "itemValue" : "-99999",
                                      "currentState" : "Active",
                                      "itemLabel" : "None"
                                    }, {
                                      "itemValue" : "Expedite",
                                      "currentState" : "Active",
                                      "itemLabel" : "Expedite"
                                    }, {
                                      "itemValue" : "Fixed Delivery Date",
                                      "currentState" : "Active",
                                      "itemLabel" : "Fixed Delivery Date"
                                    }, {
                                      "itemValue" : "Standard Class",
                                      "currentState" : "Active",
                                      "itemLabel" : "Standard Class"
                                    }, {
                                      "itemValue" : "Intangible Class",
                                      "currentState" : "Active",
                                      "itemLabel" : "Intangible Class"
                                    } ]
                                  },
                                  "MasterListId" : 20006,
                                  "currentState" : "Active"
                                },
                                "defaultValue" : "Standard Class",
                                "fieldLabel" : "Class Of Service",
                                "inputMethod" : "Static List",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "staticLovId" : "20006",
                                "fieldType" : "Single-Line Text"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "String",
                                "fieldName" : "cardSize",
                                "isReadOnly" : "NO",
                                "MasterListDetails" : {
                                  "MasterListName" : "Size",
                                  "MasterListItems" : {
                                    "MasterListItem" : [ {
                                      "itemValue" : "-99999",
                                      "currentState" : "Active",
                                      "itemLabel" : "None"
                                    }, {
                                      "itemValue" : "XL",
                                      "currentState" : "Active",
                                      "itemLabel" : "XL"
                                    }, {
                                      "itemValue" : "L",
                                      "currentState" : "Active",
                                      "itemLabel" : "L"
                                    }, {
                                      "itemValue" : "M",
                                      "currentState" : "Active",
                                      "itemLabel" : "M"
                                    }, {
                                      "itemValue" : "S",
                                      "currentState" : "Active",
                                      "itemLabel" : "S"
                                    }, {
                                      "itemValue" : "XS",
                                      "currentState" : "Active",
                                      "itemLabel" : "XS"
                                    } ]
                                  },
                                  "MasterListId" : 20005,
                                  "currentState" : "Active"
                                },
                                "defaultValue" : "M",
                                "fieldLabel" : "Size",
                                "inputMethod" : "Static List",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "staticLovId" : "20005",
                                "fieldType" : "Single-Line Text"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Long",
                                "fieldName" : "rank",
                                "isReadOnly" : "NO",
                                "defaultValue" : null,
                                "fieldLabel" : "Rank",
                                "inputMethod" : "Manual Entry",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "Integer"
                              }, {
                                "dynamicDataKey" : "TeamMemberList",
                                "isRequired" : "NO",
                                "itemType" : "com.digite.platform.person.entity.PersonMin",
                                "fieldName" : "storyOwner",
                                "isReadOnly" : "NO",
                                "defaultValue" : null,
                                "fieldLabel" : " Story Owner",
                                "inputMethod" : "Dynamic List",
                                "isUserType" : "Yes",
                                "isDisabled" : "NO",
                                "fieldType" : "RefName"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Double",
                                "fieldName" : "percentComplete",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "% Complete",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "Decimal"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Double",
                                "fieldName" : "workTime",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Work Time",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "Decimal"
                              }, {
                                "dynamicDataKey" : "KanbanIterationList",
                                "isRequired" : "NO",
                                "itemType" : "com.digite.app.kanban.iteration.entity.KanbanIteration",
                                "fieldName" : "iteration",
                                "isReadOnly" : "NO",
                                "defaultValue" : null,
                                "fieldLabel" : "Sprint",
                                "inputMethod" : "Dynamic List",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "RefName",
                                "dependentFieldName" : "release"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Double",
                                "fieldName" : "blockedTime",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Blocked Time",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "Decimal"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Boolean",
                                "fieldName" : "isRelated",
                                "isReadOnly" : "Yes",
                                "defaultValue" : "0",
                                "fieldLabel" : "Is Related",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "Yes",
                                "fieldType" : "Single-Line Text"
                              }, {
                                "dynamicDataKey" : null,
                                "isRequired" : "NO",
                                "itemType" : "UserStory",
                                "fieldName" : "parentStoryId",
                                "isReadOnly" : "NO",
                                "defaultValue" : null,
                                "fieldLabel" : "Parent Story",
                                "inputMethod" : "Dynamic List",
                                "isUserType" : "No",
                                "isDisabled" : "Yes",
                                "fieldType" : "Business Object"
                              }, {
                                "dynamicDataKey" : "KanbanReleaseList",
                                "isRequired" : "NO",
                                "itemType" : "com.digite.app.kanban.release.entity.KanbanRelease",
                                "fieldName" : "release",
                                "isReadOnly" : "NO",
                                "defaultValue" : null,
                                "fieldLabel" : "Release",
                                "inputMethod" : "Dynamic List",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "RefName"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Double",
                                "fieldName" : "leadTime",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Lead Time",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "Decimal"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Double",
                                "fieldName" : "backlogPos",
                                "isReadOnly" : "Yes",
                                "defaultValue" : "0",
                                "fieldLabel" : "Backlog Position",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "Yes",
                                "fieldType" : "Single-Line Text"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Double",
                                "fieldName" : "cycleTime",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Cycle Time",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "Decimal"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "String",
                                "fieldName" : "currentQueue",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Current Column",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "Single-Line Text"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "String",
                                "fieldName" : "workType",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Work Type",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "Yes",
                                "fieldType" : "Single-Line Text"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "String",
                                "fieldName" : "currentState",
                                "isReadOnly" : "Yes",
                                "MasterListDetails" : {
                                  "MasterListName" : "Status",
                                  "MasterListItems" : {
                                    "MasterListItem" : [ {
                                      "itemValue" : "Active",
                                      "currentState" : "Active",
                                      "itemLabel" : "Active"
                                    }, {
                                      "itemValue" : "Closed",
                                      "currentState" : "Active",
                                      "itemLabel" : "Closed"
                                    }, {
                                      "itemValue" : "Blocked",
                                      "currentState" : "Active",
                                      "itemLabel" : "Blocked"
                                    } ]
                                  },
                                  "MasterListId" : 1000,
                                  "currentState" : "Active"
                                },
                                "defaultValue" : null,
                                "fieldLabel" : "Status",
                                "inputMethod" : "Static List",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "staticLovId" : "1000",
                                "fieldType" : "Single-Line Text"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "String",
                                "fieldName" : "summaryType",
                                "isReadOnly" : "Yes",
                                "defaultValue" : "leaf",
                                "fieldLabel" : "Summary Type",
                                "inputMethod" : "Manual Entry",
                                "isUserType" : "No",
                                "isDisabled" : "Yes",
                                "fieldType" : "Single-Line Text"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Double",
                                "fieldName" : "actualWork",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Actual Effort",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "Yes",
                                "fieldType" : "Decimal"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "String",
                                "fieldName" : "smartLane",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Lane",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "Yes",
                                "fieldType" : "Single-Line Text"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Double",
                                "fieldName" : "todoEstimates",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "To-Do Estimate",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "Decimal"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Double",
                                "fieldName" : "waitTime",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Wait Time",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "Decimal"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Double",
                                "fieldName" : "remainingWork",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Remaining Effort",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "Yes",
                                "fieldType" : "Decimal"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "String",
                                "fieldName" : "tags",
                                "isReadOnly" : "NO",
                                "defaultValue" : null,
                                "fieldLabel" : "Tags",
                                "inputMethod" : "Manual Entry",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "Single-Line Text"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Integer",
                                "fieldName" : "manualProgress",
                                "isReadOnly" : "NO",
                                "defaultValue" : null,
                                "fieldLabel" : "Progress",
                                "inputMethod" : "Manual Entry",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "Integer"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "com.digite.platform.person.entity.PersonMin",
                                "fieldName" : "createdBy",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Created By",
                                "inputMethod" : "System Generated",
                                "isUserType" : "Yes",
                                "isDisabled" : "NO",
                                "fieldType" : "RefName"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Date",
                                "fieldName" : "createdDate",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Created On",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "DateTime"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "com.digite.platform.person.entity.PersonMin",
                                "fieldName" : "modifiedBy",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Last Updated By",
                                "inputMethod" : "System Generated",
                                "isUserType" : "Yes",
                                "isDisabled" : "NO",
                                "fieldType" : "RefName"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Date",
                                "fieldName" : "modifiedDate",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Last Updated On",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "DateTime"
                              }, {
                                "isRequired" : "Yes",
                                "itemType" : "String",
                                "fieldName" : "workspaceType",
                                "isReadOnly" : "NO",
                                "defaultValue" : null,
                                "fieldLabel" : "Workspace Type",
                                "inputMethod" : "Manual Entry",
                                "isUserType" : "No",
                                "isDisabled" : "Yes",
                                "fieldType" : "Single-Line Text"
                              }, {
                                "isRequired" : "Yes",
                                "itemType" : "Long",
                                "fieldName" : "workspaceId",
                                "isReadOnly" : "NO",
                                "defaultValue" : null,
                                "fieldLabel" : "Workspace Id",
                                "inputMethod" : "Manual Entry",
                                "isUserType" : "No",
                                "isDisabled" : "Yes",
                                "fieldType" : "Integer"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Date",
                                "fieldName" : "dateIdentified",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Date Identified",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "DateTime"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Long",
                                "fieldName" : "id",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Unique ID",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "Integer"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "String",
                                "fieldName" : "externallyEdited",
                                "isReadOnly" : "NO",
                                "defaultValue" : null,
                                "fieldLabel" : "Externally Edited",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "Yes",
                                "fieldType" : "Single-Line Text"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "String",
                                "fieldName" : "binderid",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Binder Id",
                                "inputMethod" : "Manual Entry",
                                "isUserType" : "No",
                                "isDisabled" : "Yes",
                                "fieldType" : "Single-Line Text"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Long",
                                "fieldName" : "reasonForIssue",
                                "isReadOnly" : "NO",
                                "defaultValue" : null,
                                "fieldLabel" : "Reason For Issue",
                                "inputMethod" : "Manual Entry",
                                "isUserType" : "No",
                                "isDisabled" : "Yes",
                                "fieldType" : "Integer"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "String",
                                "fieldName" : "reasonForBlocking",
                                "isReadOnly" : "NO",
                                "defaultValue" : null,
                                "fieldLabel" : "Reason For Blocking",
                                "inputMethod" : "Manual Entry",
                                "isUserType" : "No",
                                "isDisabled" : "Yes",
                                "fieldType" : "Single-Line Text"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Long",
                                "fieldName" : "reasonForRisk",
                                "isReadOnly" : "NO",
                                "defaultValue" : null,
                                "fieldLabel" : "Reason For Risk",
                                "inputMethod" : "Manual Entry",
                                "isUserType" : "No",
                                "isDisabled" : "Yes",
                                "fieldType" : "Integer"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Long",
                                "fieldName" : "doneUpdatedBy",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Done Updated By",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "Integer"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Date",
                                "fieldName" : "doneDate",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Done Date",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "DateTime"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "Date",
                                "fieldName" : "forecastDate",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Forecast Date",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "NO",
                                "fieldType" : "Date"
                              }, {
                                "isRequired" : "NO",
                                "itemType" : "String",
                                "fieldName" : "source",
                                "isReadOnly" : "Yes",
                                "defaultValue" : null,
                                "fieldLabel" : "Source",
                                "inputMethod" : "System Generated",
                                "isUserType" : "No",
                                "isDisabled" : "Yes",
                                "fieldType" : "Single-Line Text"
                              }, {
                                "fieldName" : "shorttext1",
                                "fieldLabel" : "Country",
                                "fieldType" : "Regular Text",
                                "itemType" : "String",
                                "isRequired" : "NO",
                                "isReadOnly" : "NO",
                                "isDisabled" : "NO",
                                "inputMethod" : "Static List",
                                "defaultValue" : null,
                                "staticLovId" : "1531581",
                                "MasterListDetails" : {
                                  "MasterListName" : "Country",
                                  "MasterListItems" : {
                                    "MasterListItem" : [ {
                                      "itemValue" : "-99999",
                                      "currentState" : "Active",
                                      "itemLabel" : "None"
                                    }, {
                                      "itemValue" : "Australia",
                                      "currentState" : "Active",
                                      "itemLabel" : "Australia"
                                    }, {
                                      "itemValue" : "India",
                                      "currentState" : "Active",
                                      "itemLabel" : "India"
                                    } ]
                                  },
                                  "MasterListId" : 1531581,
                                  "currentState" : "Active"
                                },
                                "isUserType" : "No"
                              }, {
                                "fieldName" : "shorttext2",
                                "fieldLabel" : "City",
                                "fieldType" : "Regular Text",
                                "itemType" : "String",
                                "isRequired" : "NO",
                                "isReadOnly" : "NO",
                                "isDisabled" : "NO",
                                "inputMethod" : "Static List",
                                "defaultValue" : null,
                                "staticLovId" : "1531582",
                                "MasterListDetails" : {
                                  "MasterListName" : "City",
                                  "MasterListItems" : {
                                    "MasterListItem" : [ {
                                      "itemValue" : "-99999",
                                      "currentState" : "Active",
                                      "itemLabel" : "None"
                                    }, {
                                      "itemValue" : "Delhi",
                                      "currentState" : "Active",
                                      "itemLabel" : "Delhi",
                                      "dependentItem" : {
                                        "itemValue" : "India"
                                      }
                                    }, {
                                      "itemValue" : "Mumbai",
                                      "currentState" : "Active",
                                      "itemLabel" : "Mumbai",
                                      "dependentItem" : {
                                        "itemValue" : "India"
                                      }
                                    }, {
                                      "itemValue" : "Perth",
                                      "currentState" : "Active",
                                      "itemLabel" : "Perth",
                                      "dependentItem" : {
                                        "itemValue" : "Australia"
                                      }
                                    }, {
                                      "itemValue" : "Sydney",
                                      "currentState" : "Active",
                                      "itemLabel" : "Sydney",
                                      "dependentItem" : {
                                        "itemValue" : "Australia"
                                      }
                                    } ]
                                  },
                                  "MasterListId" : 1531582,
                                  "currentState" : "Active"
                                },
                                "isUserType" : "No",
                                "dependentFieldName" : "shorttext1"
                              } ]
                            },
                            "type" : "Standard"
                          }
                        }
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getMetadata successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/metadata-operations/items/UserStory/metaData?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metadata-operations/relation-types" : {
      "get" : {
        "tags" : [ "MetadataService" ],
        "summary" : "Fetches the list of all the relation types",
        "description" : "Sample URL -  http://localhost:8080/restapi/metadata-operations/relation-types",
        "operationId" : "getRelationTypes",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : "{\r\n\t\t\"Response\": {\r\n\t\t\t\"details\": {\r\n\t\t\t\t\"relationType\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"name\": \"Has\",\r\n\t\t\t\t\t\t\"relationSubType\": [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"name\": \"upward\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"name\": \"downward\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"name\": \"Parent-child\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\t,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"name\": \"kanbanDependency\"\r\n\t\t\t\t\t\t\"relationSubType\": [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"name\": \"upward\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"name\": \"downward\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t\"messageView\": {\r\n\t\t\t\t\"type\": \"success\",\r\n\t\t\t\t\"message\": [\r\n\t\t\t\t\t\"getRelationTypes successful\"\r\n\t\t\t\t],\r\n\t\t\t\t\"uriMap\": {\r\n\t\t\t\t\t\"selfUri\": \"http://localhost:8080/restapi/metadata-operations/relation-types\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}"
                }
              }
            }
          }
        }
      }
    },
    "/metadata-operations/card-types/{cardType}/relations" : {
      "get" : {
        "tags" : [ "MetadataService" ],
        "summary" : "Fetches a list of all the card types which have parent-child or other links with another card type",
        "description" : "Sample URL -  http://localhost:8080/restapi/metadata-operations/card-types/KanbanIssue/relations",
        "operationId" : "getCardTypeRelations",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cardType",
          "in" : "path",
          "description" : "Card type of the card obtained from getCardListForProject output\r\nExample: UserStory",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Invalid cardType: KanbanIssues" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/metadata-operations/card-types/KanbanIssues/relations"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "relation" : [ {
                          "fromCardTypes" : [ "KanbanIssue", "UserStory" ],
                          "toCardTypes" : [ "DCMG", "UserStory", "KanbanDefect", "KanbanIssue" ],
                          "type" : "Parent-child"
                        }, {
                          "fromCardTypes" : [ "KanbanIssue", "KanbanDefect" ],
                          "toCardTypes" : [ "KanbanIssue", "DCMG", "KanbanDefect" ],
                          "type" : "Has"
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getCardTypeRelations successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/metadata-operations/card-types/KanbanIssue/relations"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metadata-operations/boards/{boardId}/item-types/{itemType}/dck/{dckKey}/lovData" : {
      "get" : {
        "tags" : [ "MetadataService" ],
        "summary" : "\tFetches list of items allowed in the dynamic data list",
        "description" : "Sample URL - http://localhost:8080/restapi/metadata-operations/boards/1550757/item-types/KanbanDefect/dck/KanbanReleaseList/lovData?loginId=testUser@test.com",
        "operationId" : "getDynamicLOVData",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "itemType",
          "in" : "path",
          "description" : "Card type of the card obtained from getCardListForProject output\r\nExample: UserStory",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dckKey",
          "in" : "path",
          "description" : "dynamic key of card field",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Invalid dynamicDataKey : KanbanReleaseLists" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/metadata-operations/boards/1551472/item-types/KanbanDefect/dck/KanbanReleaseLists/lovData?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "Items" : {
                          "Items" : [ {
                            "itemValue" : "0",
                            "itemLabel" : "Not Yet Identified"
                          }, {
                            "itemValue" : "512403",
                            "itemLabel" : "deleteRelease"
                          }, {
                            "itemValue" : "512404",
                            "itemLabel" : "closeRelease"
                          }, {
                            "itemValue" : "512405",
                            "itemLabel" : "addIterationInRelease"
                          }, {
                            "itemValue" : "512406",
                            "itemLabel" : "modifyRelease"
                          }, {
                            "itemValue" : "512499",
                            "itemLabel" : "modifiedReleaseNew1"
                          } ]
                        }
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getDynamicLOVData successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/metadata-operations/boards/1551472/item-types/KanbanDefect/dck/KanbanReleaseList/lovData?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/board-operations/boards/{boardId}/policies" : {
      "get" : {
        "tags" : [ "BoardService" ],
        "summary" : "Fetches all policies for particular board",
        "description" : "Sample URL - http://localhost:8080/restapi/board-operations/boards/1551624/policies",
        "operationId" : "getBoardPolices",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessedBy",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No workspace found for the project id : 1234" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/board-operations/boards/1234/policies"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "policies" : {
                          "Queue Hard WIP Limit Preference" : "N",
                          "AllowSharedResource" : "N",
                          "Default CardType Preference" : "none",
                          "AddCommentPref" : "N",
                          "WIP Violated Preference" : "none",
                          "estimateWIPPrf" : "N",
                          "AutoArchiveCardPreference" : "none",
                          "Auto Movement Preference" : "N",
                          "RiskOfDelay" : "none",
                          "To-Do Closure Preference" : "N",
                          "Restrict Movement Preference" : "N",
                          "Owner Change Preference" : "Y"
                        }
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getBoardPolicies successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/board-operations/boards/1551624/policies"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/board-operations/boards/{boardId}/lanes" : {
      "get" : {
        "tags" : [ "BoardService" ],
        "summary" : "Fetches smartLane details along with content",
        "description" : "Sample URL - http://localhost:8080/restapi/board-operations/boards/1551574/lanes",
        "operationId" : "getSmartLaneDetails",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessedBy",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No workspace found for the project id : 15468582" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/board-operations/boards/15468582/lanes?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "swimLane" : [ {
                          "laneId" : "1547749",
                          "laneName" : "Kanban board",
                          "queue" : [ {
                            "queueId" : "1606149",
                            "isParent" : "N",
                            "queueName" : "Ready",
                            "displayName" : "Ready"
                          }, {
                            "queueId" : "1606150",
                            "isParent" : "Y",
                            "queueName" : "Develop",
                            "displayName" : "Develop"
                          }, {
                            "queueId" : "1606151",
                            "isParent" : "N",
                            "queueName" : "In-Progress",
                            "displayName" : "Develop#In-Progress"
                          }, {
                            "queueId" : "1606152",
                            "isParent" : "N",
                            "queueName" : "Done",
                            "displayName" : "Develop#Done"
                          }, {
                            "queueId" : "1606153",
                            "isParent" : "N",
                            "queueName" : "Validate",
                            "displayName" : "Validate"
                          }, {
                            "queueId" : "1606154",
                            "isParent" : "N",
                            "queueName" : "Approve",
                            "displayName" : "Approve"
                          } ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getSmartLaneDetails successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/board-operations/boards/1546882/lanes?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/board-operations/boards/{boardId}/config" : {
      "get" : {
        "tags" : [ "BoardService" ],
        "summary" : "Fetches Lane details along with queues and subqueues",
        "description" : "Sample URL - http://localhost:8080/restapi/board-operations/boards/1551624/config",
        "operationId" : "getLaneAndQueueDetails",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessedBy",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No workspace found for the project id : 15468582" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/board-operations/boards/15468582/config"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "boardAttribute" : "Default",
                        "lane" : [ {
                          "name" : "Kanban board",
                          "id" : "1552848",
                          "queue" : [ {
                            "children" : [ ],
                            "displayName" : "Ready",
                            "minwip" : "-1",
                            "name" : "Ready",
                            "wbs" : "00001",
                            "showWIP" : true,
                            "id" : "1611906",
                            "wip" : "5"
                          }, {
                            "children" : [ {
                              "children" : [ ],
                              "displayName" : "Develop#In-Progress",
                              "minwip" : "-1",
                              "name" : "In-Progress",
                              "wbs" : "00002.00001",
                              "showWIP" : true,
                              "id" : "1611908",
                              "wip" : "3"
                            }, {
                              "children" : [ ],
                              "displayName" : "Develop#Done",
                              "minwip" : "-1",
                              "name" : "Done",
                              "wbs" : "00002.00002",
                              "showWIP" : true,
                              "id" : "1611909",
                              "wip" : "2"
                            } ],
                            "displayName" : "Develop",
                            "minwip" : "-1",
                            "name" : "Develop",
                            "wbs" : "00002",
                            "showWIP" : true,
                            "id" : "1611907",
                            "splitType" : "Vertical",
                            "wip" : "5"
                          }, {
                            "children" : [ ],
                            "displayName" : "Validate",
                            "minwip" : "-1",
                            "name" : "Validate",
                            "wbs" : "00003",
                            "showWIP" : true,
                            "id" : "1611910",
                            "wip" : "5"
                          }, {
                            "children" : [ ],
                            "displayName" : "Approve",
                            "minwip" : "-1",
                            "name" : "Approve",
                            "wbs" : "00004",
                            "showWIP" : true,
                            "id" : "1611911",
                            "wip" : "5"
                          } ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getLaneAndQueueDetails successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/board-operations/boards/1551624/config"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/board-operations/boards" : {
      "get" : {
        "tags" : [ "BoardService" ],
        "summary" : "Fetches board details along with content",
        "description" : "Sample URL -  http://localhost:8080/restapi/board-operations/boards",
        "operationId" : "getProjects",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "other-boards",
          "in" : "query",
          "description" : "This parameter can be used only by user having admin level rights.",
          "schema" : {
            "type" : "string",
            "enum" : [ "Y", "N" ]
          }
        }, {
          "name" : "accessedBy",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "board" : [ {
                          "createdDate" : "2015-08-03 10:43:25.0",
                          "createdBy" : "1032599",
                          "projectNumber" : "1",
                          "modifiedDate" : "2015-08-03 10:43:25.0",
                          "boardId" : "1546882",
                          "personRole" : "2",
                          "modifiedBy" : "1032599",
                          "projectName" : "Project1",
                          "currentState" : "Active"
                        }, {
                          "createdDate" : "2015-08-03 10:44:21.0",
                          "createdBy" : "1032599",
                          "projectNumber" : "2",
                          "modifiedDate" : "2015-08-03 10:44:21.0",
                          "boardId" : "1546883",
                          "personRole" : "2",
                          "modifiedBy" : "1032599",
                          "projectName" : "Project2",
                          "currentState" : "Active"
                        }, {
                          "createdDate" : "2016-11-01 16:34:19.0",
                          "createdBy" : "1032600",
                          "projectNumber" : "3",
                          "modifiedDate" : "2016-11-01 16:34:19.0",
                          "boardId" : "1548819",
                          "personRole" : "2",
                          "modifiedBy" : "1032600",
                          "projectName" : "VerifyOrgReport",
                          "currentState" : "Active"
                        }, {
                          "createdDate" : "2017-01-25 15:40:05.0",
                          "createdBy" : "1032599",
                          "projectNumber" : "4",
                          "modifiedDate" : "2017-01-25 15:40:05.0",
                          "boardId" : "1549074",
                          "personRole" : "2",
                          "modifiedBy" : "1032599",
                          "projectName" : "Project 3",
                          "currentState" : "Active"
                        }, {
                          "createdDate" : "2017-10-26 15:42:08.0",
                          "createdBy" : "1032600",
                          "projectNumber" : "5",
                          "modifiedDate" : "2017-10-26 15:42:08.0",
                          "boardId" : "1549941",
                          "personRole" : "2",
                          "modifiedBy" : "1032600",
                          "projectName" : "VerifyOrgReport2",
                          "currentState" : "Active"
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getBoards successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/board-operations/boards?loginId=testUser@test.com&other-boards=Y"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/board-operations/boards/{boardId}/lanes/{laneId}/cards" : {
      "get" : {
        "tags" : [ "BoardService" ],
        "summary" : "Fetches smartlane data with queues and cards",
        "description" : "Sample URL - http://localhost:8080/restapi/board-operations/boards/1551624/lanes/1552848/cards",
        "operationId" : "getSmartLaneData",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "laneId",
          "in" : "path",
          "description" : "Swimlane ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessedBy",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Invalid swimId : 1234 for boardId : 1551624" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/board-operations/boards/1551624/lanes/1234/cards"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "lane" : {
                          "name" : "Kanban board",
                          "id" : "1552848",
                          "showWIP" : true,
                          "wip" : "-1",
                          "minwip" : "-1",
                          "queue" : [ {
                            "children" : [ ],
                            "displayName" : "Ready",
                            "minwip" : "-1",
                            "name" : "Ready",
                            "wbs" : "00001",
                            "showWIP" : true,
                            "id" : "1611906",
                            "card" : [ {
                              "Work Type" : "DCMG",
                              "Size" : "L",
                              "Workspace Type" : "KanbanProject",
                              "Current Owner" : "jagruti patil",
                              "ExternalCardId" : "DCMG2",
                              "Current Owner Ids" : "1040349",
                              "Last Updated By" : "jagruti_get_rest@gandiva.com",
                              "Last Updated On" : "2019-04-17T09:11:24Z",
                              "Release" : {
                                "name" : "Not Yet Identified",
                                "id" : "0"
                              },
                              "Status" : "Active",
                              "Class Of Service" : "Standard Class",
                              "Created On" : "2019-04-17T09:11:07Z",
                              "Priority" : "Medium",
                              "Workspace Id" : "1551624",
                              "Current Column" : "Ready",
                              "Lane" : "Kanban board",
                              "Title" : "karate DM2",
                              "Current Owner UserId" : "jagruti_get_rest@gandiva.com",
                              "Summary Type" : "leaf",
                              "Unique ID" : "1538824",
                              "Pos" : "4.0",
                              "Date Identified" : "2019-04-17T09:11:07Z",
                              "Queue Id" : "1611906",
                              "Id" : "DCMG2",
                              "Created By" : "jagruti_get_rest@gandiva.com"
                            }, {
                              "Work Type" : "KanbanDefect",
                              "Size" : "M",
                              "Workspace Type" : "KanbanProject",
                              "Current Owner" : "jagruti patil",
                              "Root Cause" : "None",
                              "ExternalCardId" : "DEF1",
                              "Current Owner Ids" : "1040349",
                              "Last Updated By" : "jagruti_get_rest@gandiva.com",
                              "Reported Queue Age" : "0.0",
                              "Last Updated On" : "2019-04-17T09:21:05Z",
                              "Release" : {
                                "name" : "Not Yet Identified",
                                "id" : "0"
                              },
                              "Status" : "Active",
                              "Class Of Service" : "Standard Class",
                              "Created On" : "2019-04-17T09:09:54Z",
                              "Priority" : "Critical",
                              "Workspace Id" : "1551624",
                              "Current Column" : "Ready",
                              "Lane" : "Kanban board",
                              "Title" : "karate Defect1",
                              "Severity" : "None",
                              "Resolved By" : "Unassigned",
                              "Current Owner UserId" : "jagruti_get_rest@gandiva.com",
                              "Summary Type" : "leaf",
                              "Unique ID" : "540090",
                              "Defect Type" : "None",
                              "Pos" : "0.0",
                              "Date Identified" : "2019-04-17T09:09:54Z",
                              "Queue Id" : "1611906",
                              "Id" : "DEF1",
                              "Sprint" : "0",
                              "Created By" : "jagruti_get_rest@gandiva.com"
                            } ],
                            "wip" : "5"
                          }, {
                            "children" : [ {
                              "children" : [ ],
                              "displayName" : "Develop#In-Progress",
                              "minwip" : "-1",
                              "name" : "In-Progress",
                              "wbs" : "00002.00001",
                              "showWIP" : true,
                              "id" : "1611908",
                              "card" : [ {
                                "Work Type" : "UserStory",
                                "Size" : "L",
                                "Workspace Type" : "KanbanProject",
                                "ExternalCardId" : "UST2",
                                "Current Owner Ids" : "1040349",
                                "Last Updated By" : "jagruti_get_rest@gandiva.com",
                                "Reported Queue Age" : "0.0",
                                "Last Updated On" : "2019-04-17T09:26:00Z",
                                "Release" : {
                                  "name" : "Not Yet Identified",
                                  "id" : "0"
                                },
                                "Status" : "Active",
                                "Class Of Service" : "Standard Class",
                                "Created On" : "2019-04-17T09:20:42Z",
                                "Priority" : "High",
                                "Workspace Id" : "1551624",
                                "Current Column" : "Develop#In-Progress",
                                "Lane" : "Kanban board",
                                "Title" : "karate UserStory2",
                                "Current Owner UserId" : "jagruti_get_rest@gandiva.com",
                                " Current Owner" : "jagruti patil",
                                "Summary Type" : "leaf",
                                "Unique ID" : "538204",
                                "Pos" : "0.0",
                                " Story Owner" : "Unassigned",
                                "Date Identified" : "2019-04-17T09:20:42Z",
                                "Queue Id" : "1611908",
                                "Id" : "UST2",
                                "Sprint" : "0",
                                "Created By" : "jagruti_get_rest@gandiva.com"
                              }, {
                                "Work Type" : "UserStory",
                                "Size" : "M",
                                "Workspace Type" : "KanbanProject",
                                "ExternalCardId" : "UST1",
                                "Current Owner Ids" : "1040349",
                                "Last Updated By" : "jagruti_get_rest@gandiva.com",
                                "Reported Queue Age" : "0.0",
                                "Last Updated On" : "2019-04-17T09:20:39Z",
                                "Release" : {
                                  "name" : "Not Yet Identified",
                                  "id" : "0"
                                },
                                "Status" : "Active",
                                "Class Of Service" : "Standard Class",
                                "Created On" : "2019-04-17T09:20:39Z",
                                "Priority" : "Medium",
                                "Workspace Id" : "1551624",
                                "Current Column" : "Develop#In-Progress",
                                "Lane" : "Kanban board",
                                "Title" : "karate UserStory1",
                                "Current Owner UserId" : "jagruti_get_rest@gandiva.com",
                                " Current Owner" : "jagruti patil",
                                "Summary Type" : "leaf",
                                "Unique ID" : "538203",
                                "Pos" : "-1.0",
                                "Date Identified" : "2019-04-17T09:20:39Z",
                                "Queue Id" : "1611908",
                                "Id" : "UST1",
                                "Sprint" : "0",
                                "Created By" : "jagruti_get_rest@gandiva.com"
                              } ],
                              "wip" : "3"
                            }, {
                              "children" : [ ],
                              "displayName" : "Develop#Done",
                              "minwip" : "-1",
                              "name" : "Done",
                              "wbs" : "00002.00002",
                              "showWIP" : true,
                              "id" : "1611909",
                              "card" : [ {
                                "Work Type" : "DCMG",
                                "Size" : "L",
                                "Workspace Type" : "KanbanProject",
                                "Current Owner" : "jagruti patil",
                                "ExternalCardId" : "DCMG1",
                                "Current Owner Ids" : "1040349",
                                "Last Updated By" : "jagruti_get_rest@gandiva.com",
                                "Last Updated On" : "2019-04-17T09:11:36Z",
                                "Release" : {
                                  "name" : "Not Yet Identified",
                                  "id" : "0"
                                },
                                "Status" : "Active",
                                "Class Of Service" : "Standard Class",
                                "Created On" : "2019-04-17T09:11:03Z",
                                "Priority" : "Medium",
                                "Workspace Id" : "1551624",
                                "Current Column" : "Develop#Done",
                                "Lane" : "Kanban board",
                                "Title" : "karate DM1",
                                "Current Owner UserId" : "jagruti_get_rest@gandiva.com",
                                "Summary Type" : "leaf",
                                "Unique ID" : "1538823",
                                "Pos" : "-1.0",
                                "Date Identified" : "2019-04-17T09:11:03Z",
                                "Queue Id" : "1611909",
                                "Id" : "DCMG1",
                                "Created By" : "jagruti_get_rest@gandiva.com"
                              }, {
                                "Work Type" : "KanbanDefect",
                                "Size" : "M",
                                "Workspace Type" : "KanbanProject",
                                "Current Owner" : "jagruti patil",
                                "ExternalCardId" : "DEF2",
                                "Current Owner Ids" : "1040349",
                                "Last Updated By" : "jagruti_get_rest@gandiva.com",
                                "Reported Queue Age" : "0.0",
                                "Last Updated On" : "2019-04-17T09:11:48Z",
                                "Release" : {
                                  "name" : "Not Yet Identified",
                                  "id" : "0"
                                },
                                "Status" : "Active",
                                "Class Of Service" : "Standard Class",
                                "Created On" : "2019-04-17T09:10:18Z",
                                "Priority" : "Medium",
                                "Workspace Id" : "1551624",
                                "Current Column" : "Develop#Done",
                                "Lane" : "Kanban board",
                                "Title" : "karate Defect2",
                                "Current Owner UserId" : "jagruti_get_rest@gandiva.com",
                                "Summary Type" : "leaf",
                                "Unique ID" : "540091",
                                "Pos" : "-2.0",
                                "Date Identified" : "2019-04-17T09:10:18Z",
                                "Queue Id" : "1611909",
                                "Id" : "DEF2",
                                "Sprint" : "0",
                                "Created By" : "jagruti_get_rest@gandiva.com"
                              } ],
                              "wip" : "2"
                            } ],
                            "displayName" : "Develop",
                            "minwip" : "-1",
                            "name" : "Develop",
                            "wbs" : "00002",
                            "showWIP" : true,
                            "id" : "1611907",
                            "card" : [ ],
                            "splitType" : "Vertical",
                            "wip" : "5"
                          }, {
                            "children" : [ ],
                            "displayName" : "Validate",
                            "minwip" : "-1",
                            "name" : "Validate",
                            "wbs" : "00003",
                            "showWIP" : true,
                            "id" : "1611910",
                            "card" : [ {
                              "Estimate (Days)" : "0.0",
                              "Work Type" : "KanbanDefect",
                              "Size" : "L",
                              "Workspace Type" : "KanbanProject",
                              "Current Owner" : "jagruti patil",
                              "Root Cause" : "None",
                              "ExternalCardId" : "DEF3",
                              "Current Owner Ids" : "1040349",
                              "Last Updated By" : "jagruti_get_rest@gandiva.com",
                              "Reported Queue Age" : "0.0",
                              "Last Updated On" : "2019-12-23T09:42:07Z",
                              "Release" : {
                                "name" : "Not Yet Identified",
                                "id" : "0"
                              },
                              "Status" : "Active",
                              "Class Of Service" : "Standard Class",
                              "Created On" : "2019-04-17T09:10:38Z",
                              "Priority" : "Low",
                              "Workspace Id" : "1551624",
                              "Current Column" : "Validate",
                              "Lane" : "Kanban board",
                              "Title" : "karate Defect3",
                              "Severity" : "None",
                              "Resolved By" : "Unassigned",
                              "Current Owner UserId" : "jagruti_get_rest@gandiva.com",
                              "Summary Type" : "leaf",
                              "Unique ID" : "540092",
                              "Defect Type" : "None",
                              "Pos" : "-1.0",
                              "Is Related" : "false",
                              "Date Identified" : "2019-04-17T09:10:38Z",
                              "Queue Id" : "1611910",
                              "Id" : "DEF3",
                              "Sprint" : "0",
                              "Created By" : "jagruti_get_rest@gandiva.com"
                            } ],
                            "wip" : "5"
                          }, {
                            "children" : [ ],
                            "displayName" : "Approve",
                            "minwip" : "-1",
                            "name" : "Approve",
                            "wbs" : "00004",
                            "showWIP" : true,
                            "id" : "1611911",
                            "card" : [ ],
                            "wip" : "5"
                          } ]
                        }
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getSmartLaneData successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/board-operations/boards/1551624/lanes/1552848/cards"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/board-operations/boards/{id}" : {
      "get" : {
        "tags" : [ "BoardService" ],
        "summary" : "Fetches board detail for a given boardId  along with content",
        "description" : "Sample URL -  http://localhost:8080/restapi/board-operations/boards/1234",
        "operationId" : "getProjectFromId",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "isChild",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessedBy",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : "{\r\n    \"Response\": {\r\n        \"details\": {\r\n            \"boardDetails\": {\r\n                \"end_date\": \"\",\r\n                \"createdDate\": \"2019-04-17T09:06:52Z\",\r\n                \"createdBy\": \"1040349\",\r\n                \"projectNumber\": \"7\",\r\n                \"modifiedDate\": \"2019-04-17T09:06:52Z\",\r\n                \"boardId\": \"1234\",\r\n                \"modifiedBy\": \"1040349\",\r\n                \"projectName\": \"getCards\",\r\n                \"currentState\": \"Active\",\r\n                \"start_date\": \"\"\r\n            }\r\n        },\r\n        \"messageView\": {\r\n            \"type\": \"success\",\r\n            \"message\": [\r\n                \"getBoards successful\"\r\n            ],\r\n            \"uriMap\": {\r\n                \"selfUri\": \"http://localhost:8080/restapi/board-operations/boards/1234?loginId=testUser@test.com\"\r\n            }\r\n        }\r\n    }"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Invalid ProjectId :- 1234" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/board-operations/boards/1234?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/board-operations/boards/{boardId}/dynamicDataList" : {
      "get" : {
        "tags" : [ "BoardService" ],
        "summary" : "Fetches all dynamic data list and their list of items respectively for particular board",
        "description" : "Sample URL - http://localhost:8080/restapi/board-operations/boards/1551624/dynamicDataList",
        "operationId" : "getBoardDynamicLOVDataList",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessedBy",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No workspace found for the project id : 1234" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/board-operations/boards/1234/dynamicDataList"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "dynamicDataList" : [ {
                          "dynamicDataKey" : "TeamMemberList",
                          "items" : [ {
                            "item" : {
                              "displayName" : "Unassigned",
                              "id" : "0",
                              "userId" : "Unassigned"
                            }
                          }, {
                            "item" : {
                              "displayName" : "Amber Rose",
                              "id" : "1030060",
                              "userId" : "asable@test.com"
                            }
                          }, {
                            "item" : {
                              "displayName" : "Betty Lee",
                              "id" : "1030061",
                              "userId" : "bbangera@test.com"
                            }
                          } ]
                        }, {
                          "dynamicDataKey" : "KanbanIterationList",
                          "dependentDynamicDataKey" : "KanbanReleaseList",
                          "items" : [ {
                            "item" : {
                              "name" : "Not Yet Identified",
                              "id" : "0"
                            }
                          }, {
                            "item" : {
                              "name" : "Sprint 5(PI 4)",
                              "id" : "1530311"
                            },
                            "dependentItem" : {
                              "id" : "511839"
                            }
                          }, {
                            "item" : {
                              "name" : "Sprint 4",
                              "id" : "1530310"
                            },
                            "dependentItem" : {
                              "id" : "511839"
                            }
                          } ]
                        }, {
                          "dynamicDataKey" : "KanbanReleaseList",
                          "items" : [ {
                            "item" : {
                              "name" : "Not Yet Identified",
                              "id" : "0"
                            }
                          }, {
                            "item" : {
                              "name" : "Rel 1",
                              "id" : "512449"
                            }
                          }, {
                            "item" : {
                              "name" : "Rel 4",
                              "id" : "511839"
                            }
                          } ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getBoardDynamicLOVDataList successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8180/restapi/board-operations/boards/1537243/dynamicDataList"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/release-operations/boards/{boardId}/releases/{id}/cards" : {
      "get" : {
        "tags" : [ "ReleaseService" ],
        "summary" : "Fetches details of all the cards tagged to the release",
        "description" : "Sample URL - http://localhost:8080/restapi/release-operations/boards/1551472/releases/512499/cards?loginId=testUser@test.com",
        "operationId" : "getCardsInRelease",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique Id of the release that you get from getReleaseList\r\nExample: 515918",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Release does not exist" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/1551472/releases/512600/cards?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "releaseId" : "512499",
                        "projectId" : "1551472",
                        "card" : [ {
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "540345",
                          "cardTitle" : "crd"
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getCardsInRelease successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/1551472/releases/512499/cards?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/release-operations/boards/{boardId}/releases/{id}" : {
      "get" : {
        "tags" : [ "ReleaseService" ],
        "summary" : "Fetches the release present in a board",
        "description" : "Sample URL - http://localhost:8080/restapi/release-operations/boards/1551472/releases/512601?loginId=testUser@test.com",
        "operationId" : "getRelease",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique Id of the release that you get from getReleaseList\r\nExample: 515918",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Release does not exist" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/1551472/releases/512605?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "release" : {
                          "workspaceType" : "KanbanProject",
                          "createdDate" : "2019-05-20T06:17:21Z",
                          "createdBy" : "testUser@test.com",
                          "name" : "release14apr1",
                          "modifiedDate" : "2019-05-20T06:17:21Z",
                          "modifiedBy" : "testUser@test.com",
                          "id" : "512601",
                          "releaseNumber" : "6",
                          "currentState" : "Active",
                          "workspaceId" : "1551472"
                        }
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getRelease successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/1551472/releases/512601?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/release-operations/boards/{boardId}/releases/{id}/tag" : {
      "put" : {
        "tags" : [ "ReleaseService" ],
        "summary" : "Tags cards to a release",
        "description" : "Sample URL - http://localhost:8080/restapi/release-operations/boards/1551472/releases/512601/tag?loginId=testUser@test.com",
        "operationId" : "tagCardsToRelease",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique Id of the release that you get from getReleaseList\r\nExample: 515918",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "List of card data that need to be tagged to release",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "card" : [ {
                    "cardType" : "UserStory",
                    "cardUniqueId" : "538407",
                    "projectId" : "1551472"
                  }, {
                    "cardType" : "KanbanDefect",
                    "cardUniqueId" : "540345",
                    "projectId" : "1551472"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "releaseId" : "512601",
                        "projectId" : "1551472",
                        "card" : [ {
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Card 538407 is already tagged to release 512601" ]
                        }, {
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Card 540345 is already tagged to release 512601" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "tagCardsToRelease failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/1551472/releases/512601/tag?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "releaseId" : "512601",
                        "projectId" : "1551472",
                        "card" : [ {
                          "cardType" : "UserStory",
                          "cardUniqueId" : "538407",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card added to release successfully" ]
                        }, {
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "540345",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card added to release successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "tagCardsToRelease successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/1551472/releases/512601/tag?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "releaseId" : "512601",
                        "projectId" : "1551472",
                        "card" : [ {
                          "cardType" : "UserStory",
                          "cardUniqueId" : "538407",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card added to release successfully" ]
                        }, {
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Card 540345 is already tagged to release 512601" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "tagCardsToRelease failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/1551472/releases/512601/tag?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/release-operations/boards/{boardId}/releases/{id}/untag" : {
      "put" : {
        "tags" : [ "ReleaseService" ],
        "summary" : "Untags cards from a release",
        "description" : "Sample URL - http://localhost:8080/restapi/release-operations/boards/1551472/releases/512601/untag?loginId=testUser@test.com",
        "operationId" : "untagCardsFromRelease",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique Id of the release that you get from getReleaseList\r\nExample: 515918",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "List of card data that need to be untagged from release",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "card" : [ {
                    "cardType" : "UserStory",
                    "cardUniqueId" : "538407",
                    "projectId" : "1551472"
                  }, {
                    "cardType" : "KanbanDefect",
                    "cardUniqueId" : "540345",
                    "projectId" : "1551472"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "releaseId" : "512601",
                        "projectId" : "1551472",
                        "card" : [ {
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Card 538407 not tagged to release 512601" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "untagCardsFromRelease failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/1551472/releases/512601/untag?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "releaseId" : "512601",
                        "projectId" : "1551472",
                        "card" : [ {
                          "cardType" : "UserStory",
                          "cardUniqueId" : "538407",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card untagged successfully" ]
                        }, {
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "540345",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card untagged successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "untagCardsFromRelease successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/1551472/releases/512601/untag?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "releaseId" : "512601",
                        "projectId" : "1551472",
                        "card" : [ {
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Card 538407 not tagged to release 512601" ]
                        }, {
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "540345",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card untagged successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "untagCardsFromRelease failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/1551472/releases/512601/untag?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/release-operations/boards/{boardId}/releases/{id}/delete" : {
      "delete" : {
        "tags" : [ "ReleaseService" ],
        "summary" : "Deletes a release from a board",
        "description" : "Sample URL - http://localhost:8080/restapi/release-operations/boards/1551472/releases/512403/delete?loginId=testUser@test.com",
        "operationId" : "deleteRelease",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique Id of the release that you get from getReleaseList\r\nExample: 515918",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Release 512403 not found" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/1551472/releases/512403/delete?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "releaseId" : "512403",
                        "successMsg" : "Release Deleted Successfully.",
                        "projectId" : "1551472"
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "deleteRelease successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/1551472/releases/512403/delete?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/release-operations/boards/{id}/releases" : {
      "put" : {
        "tags" : [ "ReleaseService" ],
        "summary" : "Updates selected fields of a release passed in request",
        "description" : "Sample URL - http://localhost:8080/restapi/release-operations/boards/1551472/releases?loginId=testUser@test.com",
        "operationId" : "updateRelease",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "List of release data need to update to the board",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "release" : [ {
                    "id" : "512499",
                    "name" : "modifiedReleaseNew1"
                  }, {
                    "id" : "512719",
                    "name" : "modifiedReleaseNew2"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "releaseDetails" : [ {
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Field 'currentstate' is read only field. It cannot be updated" ]
                        }, {
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Release does not exist" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Field 'currentstate' is read only field. It cannot be updated", "updateRelease failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/1551472/releases?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "releaseDetails" : [ {
                          "responseStatus" : "Successful",
                          "release" : {
                            "workspaceType" : "KanbanProject",
                            "createdDate" : "2019-05-09T06:45:34Z",
                            "releaseDate" : "2019-05-31T00:00:00Z",
                            "createdBy" : "testUser@test.com",
                            "name" : "modifiedReleaseNew1",
                            "modifiedDate" : "2019-05-20T06:47:13Z",
                            "modifiedBy" : "testUser@test.com",
                            "id" : "512499",
                            "releaseNumber" : "5",
                            "currentState" : "Active",
                            "startDate" : "2019-05-01T00:00:00Z",
                            "workspaceId" : "1551472"
                          },
                          "responseMsg" : [ "Release updated successfully" ]
                        }, {
                          "responseStatus" : "Successful",
                          "release" : {
                            "releaseDate" : "2019-04-30T00:00:00Z",
                            "capacity" : "66.0",
                            "workspaceType" : "KanbanProject",
                            "createdDate" : "2019-04-11T10:07:59Z",
                            "createdBy" : "testUser@test.com",
                            "name" : "modifiedReleaseNew2",
                            "modifiedDate" : "2019-05-20T06:47:14Z",
                            "modifiedBy" : "testUser@test.com",
                            "id" : "512406",
                            "releaseNumber" : "4",
                            "currentState" : "Active",
                            "startDate" : "2019-04-01T00:00:00Z",
                            "workspaceId" : "1551472"
                          },
                          "responseMsg" : [ "Release updated successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "updateRelease successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/1551472/releases?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "releaseDetails" : [ {
                          "responseStatus" : "Successful",
                          "release" : {
                            "workspaceType" : "KanbanProject",
                            "createdDate" : "2019-05-09T06:45:34Z",
                            "releaseDate" : "2019-05-31T00:00:00Z",
                            "createdBy" : "testUser@test.com",
                            "name" : "modifiedReleaseNew1",
                            "modifiedDate" : "2019-05-20T06:44:02Z",
                            "modifiedBy" : "testUser@test.com",
                            "id" : "512499",
                            "releaseNumber" : "5",
                            "currentState" : "Active",
                            "startDate" : "2019-05-01T00:00:00Z",
                            "workspaceId" : "1551472"
                          },
                          "responseMsg" : [ "Release updated successfully" ]
                        }, {
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Release does not exist" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "updateRelease failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/1551472/releases?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "ReleaseService" ],
        "summary" : "Creates a new release in a board",
        "description" : "Sample URL - http://localhost:8080/restapi/release-operations/boards/1549432/releases?loginId=testUser@test.com",
        "operationId" : "addRelease",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "List of release data need to add to the board",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "release" : [ {
                    "name" : "release20May1"
                  }, {
                    "name" : "release20May2"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No workspace found for the project id : 15494321", "addRelease failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/15494321/releases?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "releaseDetails" : [ {
                          "responseStatus" : "Successful",
                          "release" : {
                            "workspaceType" : "KanbanProject",
                            "createdDate" : "2019-05-20T06:18:03Z",
                            "createdBy" : "testUser@test.com",
                            "name" : "release20May1",
                            "modifiedDate" : "2019-05-20T06:18:03Z",
                            "modifiedBy" : "testUser@test.com",
                            "id" : "512602",
                            "releaseNumber" : "7",
                            "currentState" : "Active",
                            "workspaceId" : "1551472"
                          },
                          "responseMsg" : [ "Release Added successfully" ]
                        }, {
                          "responseStatus" : "Successful",
                          "release" : {
                            "workspaceType" : "KanbanProject",
                            "createdDate" : "2019-05-20T06:18:04Z",
                            "createdBy" : "testUser@test.com",
                            "name" : "release20May2",
                            "modifiedDate" : "2019-05-20T06:18:04Z",
                            "modifiedBy" : "testUser@test.com",
                            "id" : "512603",
                            "releaseNumber" : "8",
                            "currentState" : "Active",
                            "workspaceId" : "1551472"
                          },
                          "responseMsg" : [ "Release Added successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "addRelease successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/1551472/releases?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "releaseDetails" : [ {
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Release 'release20May1' is already present on board." ]
                        }, {
                          "responseStatus" : "Successful",
                          "release" : {
                            "workspaceType" : "KanbanProject",
                            "createdDate" : "2019-05-20T06:18:19Z",
                            "createdBy" : "testUser@test.com",
                            "name" : "release20May3",
                            "modifiedDate" : "2019-05-20T06:18:19Z",
                            "modifiedBy" : "testUser@test.com",
                            "id" : "512604",
                            "releaseNumber" : "10",
                            "currentState" : "Active",
                            "workspaceId" : "1551472"
                          },
                          "responseMsg" : [ "Release Added successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "addRelease failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/1551472/releases?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/release-operations/boards/{boardId}/releases/{id}/close" : {
      "put" : {
        "tags" : [ "ReleaseService" ],
        "summary" : "Closes a release from a board",
        "description" : "Sample URL - http://localhost:8080/restapi/release-operations/boards/1551472/releases/512404/close?loginId=testUser@test.com",
        "operationId" : "closeRelease",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique Id of the release that you get from getReleaseList\r\nExample: 515918",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Cannot update release as it is closed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/1551472/releases/512404/close?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "releaseId" : "512404",
                        "responseStatus" : "Successful",
                        "projectId" : "1551472",
                        "responseMsg" : "Release closed successfully."
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "closeRelease successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/1551472/releases/512404/close?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/release-operations/boards/{boardId}/releases" : {
      "get" : {
        "tags" : [ "ReleaseService" ],
        "summary" : "Fetches list of all the releases present in a board",
        "description" : "Sample URL - http://localhost:8080/restapi/release-operations/boards/1551472/releases?loginId=testUser@test.com",
        "operationId" : "getReleaseList",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessedBy",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No workspace found for the project id : 1551470" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/1551470/releases?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "release" : [ {
                          "releaseId" : "512601",
                          "releaseDate" : null,
                          "name" : "release14apr1",
                          "releaseStatus" : "Active",
                          "startDate" : null,
                          "capacity" : "0"
                        }, {
                          "releaseId" : "512602",
                          "releaseDate" : null,
                          "name" : "release20May1",
                          "releaseStatus" : "Active",
                          "startDate" : null,
                          "capacity" : "0"
                        }, {
                          "releaseId" : "512603",
                          "releaseDate" : null,
                          "name" : "release20May2",
                          "releaseStatus" : "Active",
                          "startDate" : null,
                          "capacity" : "0"
                        }, {
                          "releaseId" : "512604",
                          "releaseDate" : null,
                          "name" : "release20May3",
                          "releaseStatus" : "Active",
                          "startDate" : null,
                          "capacity" : "0"
                        }, {
                          "releaseId" : "512404",
                          "releaseDate" : "2019-04-29T18:30:00Z",
                          "name" : "closeRelease",
                          "releaseStatus" : "Active",
                          "startDate" : "2019-03-31T18:30:00Z",
                          "capacity" : "37.0"
                        }, {
                          "releaseId" : "512405",
                          "releaseDate" : "2019-04-29T18:30:00Z",
                          "name" : "addIterationInRelease",
                          "releaseStatus" : "Active",
                          "startDate" : "2019-03-31T18:30:00Z",
                          "capacity" : "77.0"
                        }, {
                          "releaseId" : "512406",
                          "releaseDate" : "2019-04-29T18:30:00Z",
                          "name" : "modifiedReleaseNew2",
                          "releaseStatus" : "Active",
                          "startDate" : "2019-03-31T18:30:00Z",
                          "capacity" : "66.0"
                        }, {
                          "releaseId" : "512499",
                          "releaseDate" : "2019-05-30T18:30:00Z",
                          "name" : "modifiedReleaseNew1",
                          "releaseStatus" : "Active",
                          "startDate" : "2019-04-30T18:30:00Z",
                          "capacity" : "0"
                        } ],
                        "projectId" : "1551472"
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getReleaseList successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/release-operations/boards/1551472/releases?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sprint-operations/boards/{boardId}/sprints/{id}" : {
      "get" : {
        "tags" : [ "SprintService" ],
        "summary" : "Fetches the sprint present in a board",
        "description" : "Sample URL - http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints/1531078?loginId=testUser@test.com",
        "operationId" : "getSprint",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique Id of the sprint that you get from getSprintsInRelease\r\nExample: 1531127",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Iteration does not exist" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints/1531070?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "sprint" : {
                          "endDate" : "2019-04-30T00:00:00Z",
                          "capacity" : "55.0",
                          "workspaceType" : "KanbanProject",
                          "createdDate" : "2019-04-11T10:06:52Z",
                          "createdBy" : "testUser@test.com",
                          "name" : "updateIteration",
                          "modifiedDate" : "2019-04-11T10:06:56Z",
                          "modifiedBy" : "testUser@test.com",
                          "id" : "1531078",
                          "currentState" : "Active",
                          "startDate" : "2019-04-01T00:00:00Z",
                          "iterationNumber" : "2",
                          "workspaceId" : "1551472"
                        }
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getSprint successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints/1531078?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sprint-operations/boards/{boardId}/sprints/{id}/close" : {
      "put" : {
        "tags" : [ "SprintService" ],
        "summary" : "Closes a sprint from a board",
        "description" : "Sample URL - http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints/1531077/close?loginId=testUser@test.com",
        "operationId" : "closeSprint",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique Id of the sprint that you get from getSprintsInRelease\r\nExample: 1531127",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Cannot update iteration as it is closed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints/1531077/close?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "iterationId" : "1531077",
                        "responseStatus" : "Successful",
                        "projectId" : "1551472",
                        "responseMsg" : "Iteration closed successfully."
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "closeSprint successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints/1531077/close?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sprint-operations/boards/{boardId}/releases/{id}/sprints" : {
      "get" : {
        "tags" : [ "SprintService" ],
        "summary" : "Fetches details of all the sprints in a release",
        "description" : "Sample URL - http://localhost:8080/restapi/sprint-operations/boards/1551472/releases/512601/sprints?loginId=testUser@test.com",
        "operationId" : "getSprintsInRelease",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique Id of the release that you get from getReleaseList\r\nExample: 515918",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Release does not exist" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/releases/5126011/sprints?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "releaseId" : "512601",
                        "iteration" : [ {
                          "iterationStatus" : "Active",
                          "endDate" : "2019-05-30T18:30:00Z",
                          "name" : " First Iteration",
                          "iterationId" : "1531122",
                          "startDate" : "2019-04-30T18:30:00Z",
                          "capacity" : "0"
                        }, {
                          "iterationStatus" : "Active",
                          "endDate" : "2019-04-29T18:30:00Z",
                          "name" : " Next Iteration",
                          "iterationId" : "1531078",
                          "startDate" : "2019-03-31T18:30:00Z",
                          "capacity" : "55.0"
                        } ],
                        "projectId" : "1551472"
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getSprintsInRelease successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/releases/512601/sprints?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sprint-operations/boards/{boardId}/sprints/{id}/cards" : {
      "get" : {
        "tags" : [ "SprintService" ],
        "summary" : "Fetches details of all the cards tagged to the sprint",
        "description" : "Sample URL - http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints/1531122/cards?loginId=testUser@test.com",
        "operationId" : "getCardsInSprint",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique Id of the sprint that you get from getSprintsInRelease\r\nExample: 1531127",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Iteration does not exist" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints/1531067/cards?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "iterationId" : "1531122",
                        "projectId" : "1551472",
                        "card" : [ {
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "540345",
                          "cardTitle" : "crd"
                        }, {
                          "cardType" : "UserStory",
                          "cardUniqueId" : "538407",
                          "cardTitle" : "test"
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getCardsInSprint successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints/1531122/cards?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sprint-operations/boards/{boardId}/sprints" : {
      "get" : {
        "tags" : [ "SprintService" ],
        "summary" : "Fetches the sprints present in a board",
        "description" : "Sample URL - http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints?loginId=testUser@test.com",
        "operationId" : "getSprints",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No workspace found for the project id : 155214" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/155214/sprints?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "projectId" : "1552134",
                        "iteration" : [ {
                          "iterationId" : "1531224",
                          "name" : "Sprint1",
                          "startDate" : "2019-12-31T18:30:00Z",
                          "endDate" : "2020-01-30T18:30:00Z",
                          "releaseId" : "512550",
                          "capacity" : "0",
                          "iterationStatus" : "Active"
                        }, {
                          "iterationId" : "1531225",
                          "name" : "Sprint2",
                          "startDate" : "2019-12-31T18:30:00Z",
                          "endDate" : "2020-01-30T18:30:00Z",
                          "releaseId" : "512550",
                          "capacity" : "0",
                          "iterationStatus" : "Active"
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getSprints successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1552134/sprints?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "SprintService" ],
        "summary" : "Updates selected fields of a release passed in request",
        "description" : "Sample URL - http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints?loginId=testUser@test.com",
        "operationId" : "updateSprint",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "List of release data need to update to the board",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "sprint" : [ {
                    "id" : "1531122",
                    "name" : " First Iteration",
                    "release" : "closeRelease"
                  }, {
                    "id" : "1531078",
                    "name" : " Next Iteration",
                    "release" : "closeRelease"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "sprintDetails" : [ {
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Iteration does not exist" ]
                        }, {
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Iteration does not exist" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "updateSprint failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "sprintDetails" : [ {
                          "responseStatus" : "Successful",
                          "sprint" : {
                            "endDate" : "2019-05-31T00:00:00Z",
                            "release" : "closeRelease",
                            "workspaceType" : "KanbanProject",
                            "createdDate" : "2019-05-09T10:42:29Z",
                            "createdBy" : "testUser@test.com",
                            "name" : " First Iteration",
                            "modifiedDate" : "2019-05-21T05:55:56Z",
                            "modifiedBy" : "testUser@test.com",
                            "id" : "1531122",
                            "currentState" : "Active",
                            "startDate" : "2019-05-01T00:00:00Z",
                            "iterationNumber" : "4",
                            "workspaceId" : "1551472"
                          },
                          "responseMsg" : [ "Sprint updated successfully" ]
                        }, {
                          "responseStatus" : "Successful",
                          "sprint" : {
                            "endDate" : "2019-04-30T00:00:00Z",
                            "release" : "closeRelease",
                            "capacity" : "55.0",
                            "workspaceType" : "KanbanProject",
                            "createdDate" : "2019-04-11T10:06:52Z",
                            "createdBy" : "testUser@test.com",
                            "name" : " Next Iteration",
                            "modifiedDate" : "2019-05-21T05:55:56Z",
                            "modifiedBy" : "testUser@test.com",
                            "id" : "1531078",
                            "currentState" : "Active",
                            "startDate" : "2019-04-01T00:00:00Z",
                            "iterationNumber" : "2",
                            "workspaceId" : "1551472"
                          },
                          "responseMsg" : [ "Sprint updated successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "updateSprint successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "sprintDetails" : [ {
                          "responseStatus" : "Successful",
                          "sprint" : {
                            "endDate" : "2019-05-31T00:00:00Z",
                            "release" : "closeRelease",
                            "workspaceType" : "KanbanProject",
                            "createdDate" : "2019-05-09T10:42:29Z",
                            "createdBy" : "testUser@test.com",
                            "name" : " First Iteration",
                            "modifiedDate" : "2019-05-21T05:51:16Z",
                            "modifiedBy" : "testUser@test.com",
                            "id" : "1531122",
                            "currentState" : "Active",
                            "startDate" : "2019-05-01T00:00:00Z",
                            "iterationNumber" : "4",
                            "workspaceId" : "1551472"
                          },
                          "responseMsg" : [ "Sprint updated successfully" ]
                        }, {
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Iteration does not exist" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "updateSprint failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "SprintService" ],
        "summary" : "Creates a new sprints in a board",
        "description" : "Sample URL - http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints?loginId==testUser@test.com",
        "operationId" : "addSprint",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "List of sprint data need to add to the board",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "sprint" : [ {
                    "name" : "Iteration 1007",
                    "startdate" : "2019-04-31T10:11:57Z",
                    "release" : "addIterationInRelease"
                  }, {
                    "name" : "Iteration 1001",
                    "release" : "addIterationInRelease"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "sprintDetails" : [ {
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Sprint 'Iteration 1007' is already present in release 'addIterationInRelease'" ]
                        }, {
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Sprint 'Iteration 1001' is already present in release 'addIterationInRelease'" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "addSprint failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "sprintDetails" : [ {
                          "responseStatus" : "Successful",
                          "sprint" : {
                            "workspaceType" : "KanbanProject",
                            "createdDate" : "2019-06-18T06:30:10Z",
                            "createdBy" : "testUser@test.com",
                            "release" : "addIterationInRelease",
                            "name" : "Iteration 1007",
                            "modifiedDate" : "2019-06-18T06:30:10Z",
                            "modifiedBy" : "testUser@test.com",
                            "id" : "1531174",
                            "currentState" : "Active",
                            "startDate" : "2019-05-01T00:00:00Z",
                            "iterationNumber" : "8",
                            "workspaceId" : "1551472"
                          },
                          "responseMsg" : [ "Sprint Added successfully" ]
                        }, {
                          "responseStatus" : "Successful",
                          "sprint" : {
                            "workspaceType" : "KanbanProject",
                            "createdDate" : "2019-06-18T06:30:10Z",
                            "createdBy" : "testUser@test.com",
                            "release" : "addIterationInRelease",
                            "name" : "Iteration 1001",
                            "modifiedDate" : "2019-06-18T06:30:10Z",
                            "modifiedBy" : "testUser@test.com",
                            "id" : "1531175",
                            "currentState" : "Active",
                            "iterationNumber" : "9",
                            "workspaceId" : "1551472"
                          },
                          "responseMsg" : [ "Sprint Added successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "addSprint successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "sprintDetails" : [ {
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Invalid FieldName : 'releaseDate'." ]
                        }, {
                          "responseStatus" : "Successful",
                          "sprint" : {
                            "workspaceType" : "KanbanProject",
                            "createdDate" : "2019-06-18T06:28:37Z",
                            "createdBy" : "testUser@test.com",
                            "release" : "addIterationInRelease",
                            "name" : "Iteration 1001",
                            "modifiedDate" : "2019-06-18T06:28:37Z",
                            "modifiedBy" : "testUser@test.com",
                            "id" : "1531173",
                            "currentState" : "Active",
                            "iterationNumber" : "7",
                            "workspaceId" : "1551472"
                          },
                          "responseMsg" : [ "Sprint Added successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "addSprint failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sprint-operations/boards/{boardId}/sprints/{id}/tag" : {
      "put" : {
        "tags" : [ "SprintService" ],
        "summary" : "Tags a card to an sprint",
        "description" : "Sample URL - http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints/1531122/tag?loginId=testUser@test.com",
        "operationId" : "tagCardsToSprint",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique Id of the sprint that you get from getSprintsInRelease\r\nExample: 1531127",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "List of card data that need to be tagged to release",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "card" : [ {
                    "cardType" : "UserStory",
                    "cardUniqueId" : "538407",
                    "projectId" : "1551472"
                  }, {
                    "cardType" : "KanbanDefect",
                    "cardUniqueId" : "540345",
                    "projectId" : "1551472"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "iterationId" : "1531122",
                        "projectId" : "1551472",
                        "card" : [ {
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Card 538407 is already tagged to sprint 1531122" ]
                        }, {
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Card 540345 is already tagged to sprint 1531122" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "tagCardsToSprint failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints/1531122/tag?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "iterationId" : "1531122",
                        "projectId" : "1551472",
                        "card" : [ {
                          "cardType" : "UserStory",
                          "cardUniqueId" : "538407",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card added to Sprint successfully" ]
                        }, {
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "540345",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card added to Sprint successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "tagCardsToSprint successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints/1531122/tag?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "iterationId" : "1531122",
                        "projectId" : "1551472",
                        "card" : [ {
                          "cardType" : "UserStory",
                          "cardUniqueId" : "538407",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card added to Sprint successfully" ]
                        }, {
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Card 540345 is already tagged to sprint 1531122" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "tagCardsToSprint failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints/1531122/tag?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sprint-operations/boards/{boardId}/sprints/{id}/untag" : {
      "put" : {
        "tags" : [ "SprintService" ],
        "summary" : "Untags a card from an sprint",
        "description" : "Sample URL - http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints/1531122/untag?loginId=testUser@test.com",
        "operationId" : "untagCardsFromSprint",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique Id of the sprint that you get from getSprintsInRelease\r\nExample: 1531127",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "List of card data that need to be untagged from release",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "card" : [ {
                    "cardType" : "UserStory",
                    "cardUniqueId" : "538407",
                    "projectId" : "1551472"
                  }, {
                    "cardType" : "KanbanDefect",
                    "cardUniqueId" : "540345",
                    "projectId" : "1551472"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "iterationId" : "1531122",
                        "projectId" : "1551472",
                        "card" : [ {
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Card 538407 not tagged to iteration 1531122" ]
                        }, {
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Card 540345 not tagged to iteration 1531122" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "untagCardsToSprint failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints/1531122/untag?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "iterationId" : "1531122",
                        "projectId" : "1551472",
                        "card" : [ {
                          "cardType" : "UserStory",
                          "cardUniqueId" : "538407",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card untagged from Sprint successfully" ]
                        }, {
                          "cardType" : "KanbanDefect",
                          "cardUniqueId" : "540345",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card untagged from Sprint successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "untagCardsToSprint successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints/1531122/untag?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "iterationId" : "1531122",
                        "projectId" : "1551472",
                        "card" : [ {
                          "cardType" : "UserStory",
                          "cardUniqueId" : "538407",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Card untagged from Sprint successfully" ]
                        }, {
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Card 540345 not tagged to iteration 1531122" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "untagCardsToSprint failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints/1531122/untag?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sprint-operations/boards/{boardId}/sprints/{id}/delete" : {
      "delete" : {
        "tags" : [ "SprintService" ],
        "summary" : "Deletes a sprint from a board",
        "description" : "Sample URL - http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints/1531079/delete?loginId=testUser@test.com",
        "operationId" : "deleteSprintFromRelease",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Unique Id of the sprint that you get from getSprintsInRelease\r\nExample: 1531127",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Iteration 1531079 not found" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints/1531079/delete?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "successMsg" : "Iteration Deleted Successfully.",
                        "iterationId" : "1531079",
                        "projectId" : "1551472"
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "deleteSprintFromRelease successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/sprint-operations/boards/1551472/sprints/1531079/delete?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/team-member-operations/boards/{boardId}/team-members" : {
      "get" : {
        "tags" : [ "TeamMemberService" ],
        "summary" : "Fetches Team Members details in a board",
        "description" : "Sample URL -  http://localhost:8080/restapi/board-operations/boards",
        "operationId" : "getTeamMembers",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessedBy",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No workspace found for the project id : 1551574" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/board-operations/boards/15468582/team-members?loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "teamMember" : [ {
                          "primaryRole" : "4",
                          "firstName" : "test1",
                          "lastName" : "user1",
                          "emailAddress" : "testUser1@test.com",
                          "loginId" : "test.l@test.com",
                          "projectRole" : "Manager",
                          "id" : "1032599"
                        }, {
                          "primaryRole" : "2",
                          "firstName" : "test2",
                          "lastName" : "test2",
                          "emailAddress" : "testUser2@test.com@test.com",
                          "loginId" : "testUser2@test.com@test.com",
                          "projectRole" : "Manager",
                          "id" : "1032600"
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getTeamMembers successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/team-member-operations/boards/1546882/team-members?loginId=test.l@test.com&other-boards=Y"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "TeamMemberService" ],
        "summary" : "Invites team members in board",
        "description" : "Sample URL -  http://localhost:8080/restapi/team-member-operations/boards/1551574/team-members",
        "operationId" : "inviteTeamMember",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessedBy",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Team members invited to the board",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "teamMember" : [ {
                    "userLoginId" : "test_rest@test.com",
                    "role" : "Manager"
                  }, {
                    "userLoginId" : "test2_rest@test.com",
                    "role" : "Manager"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "teamMemberDetails" : [ {
                          "teamMember" : {
                            "userLoginId" : "testUser@test.com",
                            "role" : "Matnager"
                          },
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Role 'Matnager' is not present in the board '1551629'." ]
                        }, {
                          "teamMember" : {
                            "userLoginId" : "testUser1@test.com",
                            "role" : "Manager"
                          },
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Person already exists in the board with the same Login Id. Please add a different Login Id." ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "inviteTeamMember failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/team-member-operations/boards/1551629/team-members"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "teamMemberDetails" : [ {
                          "teamMember" : {
                            "userLoginId" : "test@test.com",
                            "role" : "Manager"
                          },
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "teamMember Added Successfuly" ]
                        }, {
                          "teamMember" : {
                            "userLoginId" : "test1@test.com",
                            "role" : "Manager"
                          },
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "teamMember Added Successfuly" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "inviteTeamMember successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/team-member-operations/boards/1551626/team-members"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "teamMemberDetails" : [ {
                          "teamMember" : {
                            "userLoginId" : "test_rest@test.com",
                            "role" : "Manager"
                          },
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Person already exists in the board with the same Login Id. Please add a different Login Id." ]
                        }, {
                          "teamMember" : {
                            "userLoginId" : "test1_rest@test.com",
                            "role" : "Manager"
                          },
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "teamMember Added Successfuly" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "inviteTeamMember partially successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/team-member-operations/boards/1551626/team-members"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/team-member-operations/boards/team-members" : {
      "get" : {
        "tags" : [ "TeamMemberService" ],
        "summary" : "Fetches board-wise team members details",
        "description" : "Sample URL -  http://localhost:8080/restapi/team-member-operations/boards/team-members",
        "operationId" : "getBoardWiseTeamMembers",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "other-boards",
          "in" : "query",
          "description" : "This parameter can be used only by user having admin level rights.",
          "schema" : {
            "type" : "string",
            "enum" : [ "Y", "N" ]
          }
        }, {
          "name" : "accessedBy",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "boardWiseTeamMember" : [ {
                          "teamMember" : [ {
                            "primaryRole" : "4",
                            "firstName" : "test",
                            "lastName" : "testuser",
                            "emailAddress" : "test.l@test.com",
                            "loginId" : "test.l@test.com",
                            "projectRole" : "Manager",
                            "id" : "1032599"
                          } ],
                          "boardId" : "1549074"
                        }, {
                          "teamMember" : [ {
                            "primaryRole" : "4",
                            "firstName" : "test",
                            "lastName" : "testuser",
                            "emailAddress" : "test.l@test.com",
                            "loginId" : "test.l@test.com",
                            "projectRole" : "Manager",
                            "id" : "1032599"
                          }, {
                            "primaryRole" : "2",
                            "firstName" : "test1",
                            "lastName" : "user2",
                            "emailAddress" : "test2@test.com",
                            "loginId" : "test2@test.com",
                            "projectRole" : "Manager",
                            "id" : "1032600"
                          } ],
                          "boardId" : "1546882"
                        }, {
                          "teamMember" : [ {
                            "primaryRole" : "4",
                            "firstName" : "test",
                            "lastName" : "testuser",
                            "emailAddress" : "test.l@test.com",
                            "loginId" : "test.l@test.com",
                            "projectRole" : "Manager",
                            "id" : "1032599"
                          } ],
                          "boardId" : "1546883"
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getBoardWiseTeamMembers successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/team-member-operations/boards/team-members?loginId=test.l@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/todo-operations/boards/{boardId}/cards/{cardId}/todos" : {
      "get" : {
        "tags" : [ "ToDoService" ],
        "summary" : "Gets ToDos from card",
        "description" : "Sample URL -  http://localhost:8080/restapi/todo-operations/boards/1234/cards/KanbanDefect:DEF3/todos/456",
        "operationId" : "getTodos",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cardId",
          "in" : "path",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fieldName",
          "in" : "query",
          "description" : "List of field names for which details has to be fetched. Get the field names from\r\nGET request of CardMetadata \r\nExample: names = cardSize,classOfService,description",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "It can be used to filter todo's based upon field names. If not specified all todo's for given workspace will be availableExample: Fieldnames = cardSize,classOfService,description. Filter can be applied for either 'AND' condition or 'OR' condition",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessedBy",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "invalid project Id " ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/todo-operations/boards/1546/cards/KanbanDefect:DEF1/todos?filter=currentState::=::Pending AND todoOwner::=::Unassigned&fieldName=todoNumber&fieldName=currentState&fieldName=name&fieldName=todoOwner&loginId=abc@digite.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : "\r\n{\r\n   \"Response\": {\r\n       \"details\": {\r\n           \"todos\": [\r\n               {\r\n                   \"todoOwner\": \"Unassigned\",\r\n                   \"todoNumber\": \"TODO1\",\r\n                   \"name\": \"abcd\",\r\n                   \"currentState\": \"Pending\"\r\n               },\r\n\t\t\t   {\r\n                   \"todoOwner\": \"Unassigned\",\r\n                   \"todoNumber\": \"TODO2\",\r\n                   \"name\": \"ghjk\",\r\n                   \"currentState\": \"Pending\"\r\n               }\r\n           ]\r\n       },\r\n       \"messageView\": {\r\n           \"type\": \"success\",\r\n           \"message\": [\r\n               \"getTodos successful!\"\r\n           ],\r\n           \"uriMap\": {\r\n               \"selfUri\": \"http://localhost:8080/restapi/todo-operations/boards/1546/cards/KanbanIssue:ISS1/todos?\r\n\t\t\t\t\t\t\tfilter=currentState::=::Pending AND todoOwner::=::Unassigned&fieldName=todoNumber&fieldName=currentState&fieldName=name&fieldName=todoOwner&loginId=abc@digite.com\r\n \"\r\n\t\t\t          }\r\n       }\r\n   }\r\n}"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ToDoService" ],
        "summary" : "Modifies ToDo on card",
        "description" : "Sample URL -  http://localhost:8080/restapi/todo-operations/boards/1234/cards/KanbanDefect:DEF3/todos",
        "operationId" : "modifyTodos",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cardId",
          "in" : "path",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Set of todos to be modified",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "todos" : [ {
                    "id" : "515921",
                    "name" : "todo created by rest",
                    "currentstate" : "completed",
                    "todoOwner" : "unassigned"
                  }, {
                    "id" : "515922",
                    "name" : "todo created by soap",
                    "currentstate" : "completed",
                    "todoOwner" : "unassigned"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Invalid todoId:TODO123 for given project" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/todo-operations/boards/1234/cards/KanbanDefect:DEF3/todos"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "todos" : [ {
                          "id" : "515921",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Todo updated successful" ]
                        }, {
                          "id" : "515922",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Todo updated successful" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "ModifyTodos successfully" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/todo-operations/boards/1234/cards/KanbanDefect:DEF3/todos"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "todos" : [ {
                          "id" : "515921",
                          "responseStatus" : "Successful",
                          "responseMsg" : [ "Todo updated successful" ]
                        }, {
                          "id" : "515922",
                          "responseStatus" : "Failed",
                          "responseMsg" : [ "Invalid todoId: for given project" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "ModifyTodos partially successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/todo-operations/boards/1234/cards/KanbanDefect:DEF3/todos"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "ToDoService" ],
        "summary" : "Create ToDo on card",
        "description" : "Sample URL -  http://localhost:8080/restapi/todo-operations/boards/1234/cards/KanbanDefect:DEF3/todos",
        "operationId" : "createTodo",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cardId",
          "in" : "path",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Set of todos to be created on card",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "todos" : [ {
                    "name" : "todo created by rest",
                    "currentState" : "completed",
                    "todoOwner" : "unassigned"
                  }, {
                    "name" : "todo created by rest1",
                    "currentState" : "Pending"
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Invalid todoId:TODO123 for given project" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/todo-operations/boards/1234/cards/KanbanDefect:DEF3/todos"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "todos" : [ {
                          "itemType" : "KanbanDefect",
                          "todoOwner" : "Unassigned",
                          "dueDate" : null,
                          "description" : null,
                          "lockStatus" : null,
                          "lockedBy" : null,
                          "todoNumber" : "TODO7",
                          "pos" : 1,
                          "modifiedBy" : "testUser@test.com",
                          "id" : 515967,
                          "applicableQueue" : "Kanban board:Develop#In-Progress",
                          "workspaceId" : 1234,
                          "plannedEffort" : 0,
                          "lockedDate" : null,
                          "responseStatus" : "Successful",
                          "itemId" : 539837,
                          "workspaceType" : "KanbanProject",
                          "createdDate" : "2019-04-08T09:25:52Z",
                          "createdBy" : "testUser@test.com",
                          "name" : "todo created by rest",
                          "modifiedDate" : "2019-04-08T09:25:52Z",
                          "kanbanQueue" : 1611653,
                          "position" : 1,
                          "currentState" : "completed"
                        }, {
                          "itemType" : "KanbanDefect",
                          "todoOwner" : "testUser@test.com",
                          "dueDate" : null,
                          "description" : null,
                          "lockStatus" : null,
                          "lockedBy" : null,
                          "todoNumber" : "TODO8",
                          "pos" : 2,
                          "modifiedBy" : "testUser@test.com",
                          "id" : 515968,
                          "applicableQueue" : "Kanban board:Develop#In-Progress",
                          "workspaceId" : 1234,
                          "plannedEffort" : 0,
                          "lockedDate" : null,
                          "responseStatus" : "Successful",
                          "itemId" : 539837,
                          "workspaceType" : "KanbanProject",
                          "createdDate" : "2019-04-08T09:25:53Z",
                          "createdBy" : "testUser@test.com",
                          "name" : "todo created by rest1",
                          "modifiedDate" : "2019-04-08T09:25:53Z",
                          "kanbanQueue" : 1611653,
                          "position" : 2,
                          "currentState" : "Pending"
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "createTodo successfully" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/todo-operations/boards/1234/cards/KanbanDefect:DEF3/todos"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "todos" : [ {
                          "responseStatus" : "Failed",
                          "currentState" : "Pending",
                          "responseMsg" : [ "Required field: name is missing" ]
                        }, {
                          "itemType" : "KanbanDefect",
                          "todoOwner" : "testUser@test.com",
                          "dueDate" : null,
                          "description" : null,
                          "lockStatus" : null,
                          "lockedBy" : null,
                          "todoNumber" : "TODO8",
                          "pos" : 2,
                          "modifiedBy" : "testUser@test.com",
                          "id" : 515968,
                          "applicableQueue" : "Kanban board:Develop#In-Progress",
                          "workspaceId" : 1234,
                          "plannedEffort" : 0,
                          "lockedDate" : null,
                          "responseStatus" : "Successful",
                          "itemId" : 539837,
                          "workspaceType" : "KanbanProject",
                          "createdDate" : "2019-04-08T09:25:53Z",
                          "createdBy" : "testUser@test.com",
                          "name" : "todo created by rest1",
                          "modifiedDate" : "2019-04-08T09:25:53Z",
                          "kanbanQueue" : 1611653,
                          "position" : 2,
                          "currentState" : "Pending"
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "createTodo partially successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/todo-operations/boards/1234/cards/KanbanDefect:DEF3/todos"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ToDoService" ],
        "summary" : "Deletes ToDos of a card",
        "description" : "Sample URL -  http://localhost:8080/restapi/boards/1234/cards/KanbanDefect:DEF1/todos?id=TODO1&id=TODO123",
        "operationId" : "deleteTodos",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cardId",
          "in" : "path",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "List of ToDo Id's to be deleted",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "No todos to delete" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/todo-operations/boards/1234/cards/KanbanDefect:DEF1/todos?id="
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "todos" : [ {
                          "cardType" : "KanbanDefect",
                          "boardId" : "1234",
                          "cardUniqueId" : "DEF1",
                          "id" : "4567",
                          "responseStatus" : "Successful",
                          "responseMsg" : "Todo Deleted successfully"
                        }, {
                          "cardType" : "KanbanDefect",
                          "boardId" : "1234",
                          "cardUniqueId" : "DEF1",
                          "id" : "TODO1",
                          "responseStatus" : "Successful",
                          "responseMsg" : "Todo Deleted successfully"
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "deleteTodos successfully" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/todo-operations/boards/1234/cards/KanbanDefect:DEF1/todos?id=TODO1&id=4567"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "todos" : [ {
                          "cardType" : "KanbanDefect",
                          "boardId" : "1234",
                          "cardUniqueId" : "DEF1",
                          "id" : "TODO123",
                          "responseStatus" : "Failed",
                          "responseMsg" : "Invalid todoId:TODO123 for given project"
                        }, {
                          "cardType" : "KanbanDefect",
                          "boardId" : "1234",
                          "cardUniqueId" : "DEF1",
                          "id" : "TODO1",
                          "responseStatus" : "Successful",
                          "responseMsg" : "Todo Deleted successfully"
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "deleteTodos partially successfully" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/todo-operations/boards/1234/cards/KanbanDefect:DEF1/todos?id=TODO1&id=TODO123"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/todo-operations/boards/{boardId}/cardType/{cardType}/todos/startDate/{startDate}" : {
      "get" : {
        "tags" : [ "ToDoService" ],
        "summary" : "Fetches details of todos in a given time interval.",
        "description" : "Sample URL -  http://localhost:8080/restapi/boards/1234/cardType/KanbanDefect/todos/startDate/2019-01-02T00:00:00Z?endDate=2019-04-04T00:00:00Z&loginId=abc@test.com",
        "operationId" : "getTodoModifiedSinceDate",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cardType",
          "in" : "path",
          "description" : "Card type of the card obtained from getCardListForProject output\r\nExample: UserStory",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "path",
          "description" : "ISO date for todo created from this date",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "ISO date for todo created till this date",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Invalid userId:  : abc@test.com" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/todo-operations/boards/1234/cardType/KanbanDefect/todos/startDate/2019-01-02T00:00:00Z?endDate=2019-04-04T00:00:00Z&loginId=abc@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "todos" : [ {
                          "itemType" : "KanbanDefect",
                          "todoOwner" : "testUser@test.com",
                          "dueDate" : null,
                          "description" : null,
                          "lockStatus" : null,
                          "lockedBy" : null,
                          "todoNumber" : "TODO1",
                          "pos" : 1,
                          "modifiedBy" : "testUser@test.com",
                          "id" : 5678,
                          "applicableQueue" : "Kanban board:Ready",
                          "workspaceId" : 1234,
                          "plannedEffort" : 0,
                          "lockedDate" : null,
                          "itemId" : 57890,
                          "workspaceType" : "KanbanProject",
                          "createdDate" : "2019-03-28T07:08:40Z",
                          "createdBy" : "testUser@test.com",
                          "name" : "todo1",
                          "modifiedDate" : "2019-03-28T07:08:40Z",
                          "kanbanQueue" : 1611600,
                          "position" : 1,
                          "currentState" : "Pending"
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getTodoModifiedSinceDate successful!" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/todo-operations/boards/1234/cardType/KanbanDefect/todos/startDate/2019-01-02T00:00:00Z?endDate=2019-04-04T00:00:00Z&loginId=testUser@test.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/todo-operations/boards/{boardId}/cards/{cardId}/todos/{id}" : {
      "get" : {
        "tags" : [ "ToDoService" ],
        "summary" : "Gets ToDo from card",
        "description" : "Sample URL -  http://localhost:8080/restapi/todo-operations/boards/1234/cards/KanbanDefect:DEF3/todos/456",
        "operationId" : "getTodo",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cardId",
          "in" : "path",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ToDo Id of the Todo",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fieldName",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessedBy",
          "in" : "header",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Invalid todoId:TODO123 for given project" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/todo-operations/boards/1546882/cards/KanbanDefect:DEF3/todos/516018"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "todos" : [ {
                          "itemType" : "KanbanIssue",
                          "todoOwner" : "abc@digite.com",
                          "dueDate" : null,
                          "description" : null,
                          "lockStatus" : null,
                          "lockedBy" : null,
                          "todoNumber" : "TODO1",
                          "pos" : 3,
                          "modifiedBy" : "abc@digite.com",
                          "id" : 516018,
                          "applicableQueue" : "Kanban board:Develop",
                          "workspaceId" : 1546882,
                          "plannedEffort" : 0,
                          "lockedDate" : null,
                          "itemId" : 522801,
                          "workspaceType" : "KanbanProject",
                          "createdDate" : "2019-06-14T11:56:40Z",
                          "createdBy" : "abc@digite.com",
                          "name" : "abcd",
                          "modifiedDate" : "2019-06-14T11:56:40Z",
                          "kanbanQueue" : 1606151,
                          "position" : 3,
                          "currentState" : "Pending"
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getTodo successful!" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/todo-operations/boards/1546882/cards/KanbanIssue:ISS1/todos/516018"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/todo-operations/boards/{boardId}/cards/{cardId}/todos/{todoId}" : {
      "delete" : {
        "tags" : [ "ToDoService" ],
        "summary" : "Deletes ToDo of a card",
        "description" : "Sample URL -  http://localhost:8080/restapi/boards/1234/cards/DEF1/todos/4567",
        "operationId" : "deleteTodo",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "boardId",
          "in" : "path",
          "description" : "Unique ID of the board",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "cardId",
          "in" : "path",
          "description" : "Combination of CardType and CardUniqueId(or CardNumber) separated by colon.<br/>Eg- ENHC:12321 or ENHC:ENHC123",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "todoId",
          "in" : "path",
          "description" : "ToDo Id of the Todo",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Invalid todoId:TODO123 for given project" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/todo-operations/boards/1234/cards/5678/todos/TODO123"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "todos" : [ {
                          "cardType" : "KanbanDefect",
                          "boardId" : "1234",
                          "cardUniqueId" : "DEF1",
                          "id" : "4567",
                          "responseStatus" : "Successful",
                          "responseMsg" : "Todo Deleted successfully"
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "deleteTodo successfully" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/todo-operations/boards/1234/cards/DEF1/todos/4567"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/secured/auth" : {
      "post" : {
        "tags" : [ "TokenService" ],
        "summary" : "Generated AuthorizationToken",
        "description" : "Sample URL - http://localhost:8080/restapi/secured/auth",
        "operationId" : "authenticateUser",
        "requestBody" : {
          "description" : "base64Encoded userId:password(eg: testuser1@test.com:welcome@999) and prefix by SwiftKanban, here 'YXB1reZhX3Bvc3RfcmVzdEBuNQ5kaXZhLmNvbTp3ZWxjb949MTIz' is base64 Encoded version of 'testuser1@test.com:welcome@999' ",
          "content" : {
            "text/plain" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "AuthenticationToken" : "SwiftKanban YXB1reZhX3Bvc3RfcmVzdEBuNQ5kaXZhLmNvbTp3ZWxjb949MTIz"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "userData" : {
                          "dateTime" : "dd-MMM-yyyy",
                          "firstName" : "test",
                          "lastName" : "user",
                          "loginId" : "testuser1@test.com",
                          "emailId" : "testuser1@test.com",
                          "personId" : 999358
                        },
                        "authDetails" : {
                          "AuthorizationToken" : "eyJ0eXAiOiLMV1QiIEJhbGciOiJIUzI1NiJ9.eyJwZXJzb25JZCI6MTA0MDM1OCwiYXBwQWNjb3VudElkIjoxNTM1NjEyfQ.ZffcKz_OXT0L2cQq0fmByRJenLjTFGdSPn2NWUIA8Qc"
                        }
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "Authentication Successful!" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/secured/auth"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "User does not exist in LDAP." ],
                        "uriMap" : null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-operations/users/{id}" : {
      "get" : {
        "tags" : [ "UserService" ],
        "summary" : "Fetches user and other user information",
        "description" : "Sample URL -  http://localhost:8080/restapi/user-operations/users/DummyUser1",
        "operationId" : "getUser",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "userId of the person",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Invalid loginId" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/user-operations/users/JANU.l@diugite.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "userData" : {
                          "firstName" : "Janu",
                          "lastName" : "Lund",
                          "primaryRole" : "Admin",
                          "emailAddress" : "janu.l@digite.com",
                          "loginId" : "janu.l@digite.com"
                        }
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getUser successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/user-operations/users/JANU.l@digite.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "UserService" ],
        "summary" : "Deletes user",
        "description" : "Sample URL -  http://localhost:8080/restapi/user-operations/users/DummyUser1",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "User Id of the person to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "userDetails" : [ {
                          "responseStatus" : "Failed",
                          "user" : {
                            "loginId" : "DummyUser1"
                          },
                          "responseMsg" : [ "Invalid userId: DummyUser1" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "deleteUsers Failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/user-operations/users?id=DummyUser1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "userDetails" : [ {
                          "responseStatus" : "Successful",
                          "user" : {
                            "loginId" : "DummyUser1"
                          },
                          "responseMsg" : [ "User Deleted Successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "deleteUsers Successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/user-operations/users?id=DummyUser1"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-operations/users" : {
      "get" : {
        "tags" : [ "UserService" ],
        "summary" : "Fetches all users details",
        "description" : "Sample URL -  http://localhost:8080/restapi/user-operations/users?filter=primaryRole:{$eq:Admin},$OR:{emailAddress:{$start:testUser},createdDate:{$gt:2019-01-01T00:00:00Z}}&fieldName=userId&fieldName=emailAddress&fieldName=primaryRole",
        "operationId" : "getUserList",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "It can be used to filter users based upon field names like primaryRole, createdBy, createdDate, currentState and so on. If no filter criteria applied, it will then fetch all fields of the users.The filter can be applied for n number of  'AND' condition as well as 'OR' condition simultaneously.\n\nTo use 'AND' filters, use a comma between the AND conditions. For example: filter= primaryRole:{$eq:Admin}, currentState:{$eq:Active}.\n\nTo use 'OR' filters, enter all filters in $OR:{fieldname:{operator:value},fieldname:{operator:value}} and separate them with a comma. For example: $OR:{userId:{$eq:testuser},userNumber:{$eq:123}}\n\nSo, the filter parameter with both AND as well as OR conditions will be like: primaryRole:{$eq:Admin}, currentState:{$eq:Active}, $OR:{userId:{$eq:testuser},userNumber:{$eq:123}}\n\nCurrently, we support the following API operators: \n\n\t\t\t\t\tAPI Operator \t| Description  \r\n\t\t\t\t\t______________________________________  \r\n                    \r\n                    $eq:value   \t| Is equal to\r\n                    \r\n                    $neq:value   \t| Is different\r\n                    \r\n                    $gt:value   \t| Is greater than\r\n                    \r\n                    $gte:value   \t| Is greater than or equal to\r\n                    \r\n                    $lt:value   \t| Is less than\r\n                    \r\n                    $lte:value   \t| Is less than or equal to\r\n                    \r\n                    $lkw:value   \t| Contains the word\r\n                    \r\n                    $nlkw:value   \t| Does not contain the word\r\n                    \r\n                    $start:value    | Starts with\r\n                    \r\n                    $end:value   \t| Ends with",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fieldName",
          "in" : "query",
          "description" : "List of field names for which details has to be fetched.\r\nExample: names = userId,emailAddress,firstName",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "Invalid fieldName: invalidField" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/user-operations/users?filter=invalidField:{$eq:fieldValue}"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "userDetails" : [ {
                          "userNumber" : 1,
                          "belongsToOrg" : 1028364,
                          "firstName" : "Org",
                          "lastName" : "Suborg",
                          "userId" : "org@sharklasers.com",
                          "emailAddress" : "org@sharklasers.com",
                          "primaryRole" : 32,
                          "isSharedResource" : "No",
                          "workingOrg" : 1028364,
                          "employeeId" : "",
                          "dateFormat" : "dd-MMM-yyyy",
                          "lastLoginOn" : "2020-08-11T13:17:56Z",
                          "createdBy" : 10000,
                          "createdDate" : "2018-02-19T08:47:04Z",
                          "modifiedBy" : 1045143,
                          "modifiedDate" : "2018-04-04T05:10:52Z",
                          "currentState" : "Active",
                          "id" : 1045143
                        }, {
                          "userNumber" : 8,
                          "belongsToOrg" : 1028364,
                          "firstName" : "Rahul",
                          "lastName" : "L",
                          "userId" : "Rahul",
                          "emailAddress" : "rahul@sharklasers.com",
                          "primaryRole" : 3,
                          "isSharedResource" : "No",
                          "workingOrg" : 1028364,
                          "title" : "vxvd",
                          "locationName" : "fdfdg",
                          "mobileNumber" : "4242",
                          "workExtension" : "434",
                          "timeZone" : "-99999",
                          "dateFormat" : "dd-MMM-yyyy",
                          "country" : "-99999",
                          "lastLoginOn" : "2020-08-11T13:21:28Z",
                          "createdBy" : 1045143,
                          "createdDate" : "2018-02-19T09:01:53Z",
                          "modifiedBy" : 1045151,
                          "modifiedDate" : "2020-08-11T13:22:38Z",
                          "currentState" : "Active",
                          "id" : 1045151
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getUserList successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/user-operations/users"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "UserService" ],
        "summary" : "Adds users",
        "description" : "Sample URL -  http://localhost:8080/restapi/user-operations/users",
        "operationId" : "addUser",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Request body for adding Users",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "example" : {
                  "user" : [ {
                    "firstName" : "DummyUser1",
                    "lastName" : "DummyUser1",
                    "loginId" : "DummyUser1",
                    "emailId" : "DummyUser1@test.com",
                    "primaryRole" : "Member",
                    "timeZone" : ""
                  }, {
                    "firstName" : "DummyUser2",
                    "lastName" : "DummyUser2",
                    "loginId" : "DummyUser2",
                    "emailId" : "DummyUser2@test.com",
                    "primaryRole" : "Member",
                    "timeZone" : ""
                  } ]
                }
              }
            }
          }
        },
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "'user' cannot be blank", "addUser Failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/user-operations/users"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "userDetails" : [ {
                          "responseStatus" : "Failed",
                          "user" : {
                            "firstName" : "DummyUser1",
                            "lastName" : "DummyUser1",
                            "primaryRole" : "Member",
                            "loginId" : "DummyUser1",
                            "timeZone" : "",
                            "emailId" : "DummyUser1@test.com"
                          },
                          "responseMsg" : [ "Person already exists with the same Login Id. Please add a different Login Id." ]
                        }, {
                          "responseStatus" : "Successful",
                          "user" : {
                            "firstName" : "DummyUser2",
                            "lastName" : "DummyUser2",
                            "primaryRole" : "Member",
                            "loginId" : "DummyUser2",
                            "timeZone" : "",
                            "emailId" : "DummyUser2@test.com"
                          },
                          "responseMsg" : [ "User Added Successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "addUser partial_success" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/user-operations/users"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "description" : "UnProcessable entity in response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "userDetails" : [ {
                          "responseStatus" : "Failed",
                          "user" : {
                            "firstName" : "DummyUser1",
                            "lastName" : "DummyUser1",
                            "primaryRole" : "Member",
                            "loginId" : "DummyUser1",
                            "timeZone" : "",
                            "emailId" : "DummyUser1@test.com"
                          },
                          "responseMsg" : [ "Person already exists with the same Login Id. Please add a different Login Id." ]
                        }, {
                          "responseStatus" : "Failed",
                          "user" : {
                            "firstName" : "DummyUser2",
                            "lastName" : "DummyUser2",
                            "primaryRole" : "Member",
                            "loginId" : "DummyUser2",
                            "timeZone" : "",
                            "emailId" : "DummyUser2@test.com"
                          },
                          "responseMsg" : [ "Person already exists with the same Login Id. Please add a different Login Id." ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "addUser Failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/user-operations/users"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "userDetails" : [ {
                          "responseStatus" : "Successful",
                          "user" : {
                            "firstName" : "DummyUser1",
                            "lastName" : "DummyUser1",
                            "primaryRole" : "Member",
                            "loginId" : "DummyUser1",
                            "timeZone" : "",
                            "emailId" : "DummyUser1@test.com"
                          },
                          "responseMsg" : [ "User Added Successfully" ]
                        }, {
                          "responseStatus" : "Successful",
                          "user" : {
                            "firstName" : "DummyUser2",
                            "lastName" : "DummyUser2",
                            "primaryRole" : "Member",
                            "loginId" : "DummyUser2",
                            "timeZone" : "",
                            "emailId" : "DummyUser2@test.com"
                          },
                          "responseMsg" : [ "User Added Successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "addUser Successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/user-operations/users"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "UserService" ],
        "summary" : "Deletes multiple users",
        "description" : "Sample URL -  http://localhost:8080/restapi/user-operations/users?id=DummyUser1&id=DummyUser2",
        "operationId" : "deleteUsers",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "Multiple User Ids of the person to be deleted",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "loginId",
          "in" : "query",
          "description" : "This parameter can be used to perform operation on behalf of any other user",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "userDetails" : [ {
                          "responseStatus" : "Failed",
                          "user" : {
                            "loginId" : "DummyUser1"
                          },
                          "responseMsg" : [ "Invalid userId: DummyUser1" ]
                        }, {
                          "responseStatus" : "Failed",
                          "user" : {
                            "loginId" : "DummyUser2"
                          },
                          "responseMsg" : [ "Invalid userId: DummyUser2" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "deleteUsers Failed" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/user-operations/users?id=DummyUser1&id=DummyUser2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "207" : {
            "description" : "Partially Successfull",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "userDetails" : [ {
                          "responseStatus" : "Successful",
                          "user" : {
                            "loginId" : "DummyUser1"
                          },
                          "responseMsg" : [ "User Deleted Successfully" ]
                        }, {
                          "responseStatus" : "Failed",
                          "user" : {
                            "loginId" : "DummyUser2"
                          },
                          "responseMsg" : [ "Invalid userId: DummyUser2" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "partial_success",
                        "message" : [ "deleteUsers partial_success" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/user-operations/users?id=DummyUser1&id=DummyUser2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "userDetails" : [ {
                          "responseStatus" : "Successful",
                          "user" : {
                            "loginId" : "DummyUser1"
                          },
                          "responseMsg" : [ "User Deleted Successfully" ]
                        }, {
                          "responseStatus" : "Successful",
                          "user" : {
                            "loginId" : "DummyUser2"
                          },
                          "responseMsg" : [ "User Deleted Successfully" ]
                        } ]
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "deleteUsers Successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8080/restapi/user-operations/users?id=DummyUser1&id=DummyUser2"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-operations/users/token" : {
      "get" : {
        "tags" : [ "UserService" ],
        "summary" : "Fetches user details information",
        "description" : "Sample URL -  http://localhost:8080/restapi/user-operations/users/token",
        "operationId" : "getUserDetailsResponse",
        "parameters" : [ {
          "name" : "AuthorizationToken",
          "in" : "header",
          "description" : "Token used to authenticate user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "authUserId",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Malformed parameters or other bad request.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : { },
                      "messageView" : {
                        "type" : "error",
                        "message" : [ "The authorization token for the entered Login credentials does not match. Please try again." ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8180/restapi/user-operations/users/token?authUserId=jh@vgh.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Successful request and response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : {
                    "Response" : {
                      "details" : {
                        "userDetails" : {
                          "id" : 1028313,
                          "firstName" : "Kirankumar",
                          "lastName" : "Gund",
                          "userId" : "kgund@digite.com",
                          "title" : "jj",
                          "locationName" : "jj",
                          "emailAddress" : "kgund@digite.com",
                          "mobileNumber" : "65",
                          "phoneNumber" : "535",
                          "workExtension" : "543",
                          "primaryRole" : 4,
                          "timeZone" : "Asia/Calcutta",
                          "workingOrg" : 20000,
                          "personalEmail" : "yynh@vgh.com",
                          "blogUrl" : "gj",
                          "twitterHandle" : "jjhk",
                          "address1" : "gh",
                          "address2" : "cg",
                          "address3" : "nbv",
                          "country" : "India",
                          "city" : "bv",
                          "url" : "jguy",
                          "createdBy" : 20010,
                          "createdDate" : "2014-12-13T05:11:28Z",
                          "modifiedBy" : 1028313,
                          "modifiedDate" : "2020-07-13T07:52:14Z",
                          "lastLoginOn" : "2020-07-13T07:47:16Z",
                          "currentState" : "Active",
                          "middleName" : "scs",
                          "userNumber" : 40173,
                          "dateFormat" : "yyyy/MM/dd",
                          "isSharedResource" : "No",
                          "belongsToOrg" : 20000
                        }
                      },
                      "messageView" : {
                        "type" : "success",
                        "message" : [ "getUserDetailsResponse successful" ],
                        "uriMap" : {
                          "selfUri" : "http://localhost:8180/restapi/user-operations/users/token"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}